{"version":3,"mappings":"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","names":["m","require$$0","client","createJSONStorage","getStorage","options","storage","name","_a","parse","str2","str","newValue","toThenable","fn","input","result","onFulfilled","_onRejected","e","_onFulfilled","onRejected","oldImpl","config","baseOptions","set","get","api","state","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","setItem","errorInSync","thenable","serializedValue","savedSetState","replace","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","storageValue","deserializedStorageValue","migratedState","_a2","newOptions","newImpl","_b","migrationResult","migrated","persistImpl","__vite_import_meta_env__","persist","API_BASE_URL","ApiClient","baseUrl","__publicField","token","expiresAt","refreshToken","handler","now","buffer","response","data","useAuthStore","__vitePreload","authStore","error","endpoint","timeout","currentLanguage","useSettingsStore","settingsStore","headers","controller","timeoutId","errorCode","errorMessage","errorData","email","authHash","salt","inviteCode","turnstileToken","deviceId","deviceName","limit","offset","params","id","sessionId","encrypted_nickname","nickname_iv","password","userId","create","user","expiresIn","nickname","getSystemTheme","updateThemeColorMeta","theme","themeColor","metaTag","getSystemLanguage","language","itemsPerPage","LoadingSpinner","jsxs","jsx","demoUser","demoNickname","demoToken","demoNotes","demoPasswords","demoSessions","isDemoMode","DEMO_MODE_MESSAGE","LoginPage","lazy","RegisterPage","NotesPage","AdminInviteCodesPage","App","isAuthenticated","login","setTheme","useEffect","Suspense","Routes","Route","Navigate","basename","ReactDOM","React","BrowserRouter"],"ignoreList":[0,1],"sources":["../../../../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/client.js","../../../../node_modules/.pnpm/zustand@4.5.7_@types+react@18.3.26_react@18.3.1/node_modules/zustand/esm/middleware.mjs","../../src/lib/api.ts","../../src/stores/auth-store.ts","../../src/stores/settings-store.ts","../../src/components/LoadingSpinner.tsx","../../src/lib/demo-data.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","/**\n * API 客户端封装\n * 负责所有与后端的通信\n */\n\nconst API_BASE_URL = import.meta.env.VITE_API_URL || '/api';\n\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: {\n    code: string;\n    message: string;\n  };\n}\n\nclass ApiClient {\n  private baseUrl: string;\n  private token: string | null = null;\n  private refreshToken: string | null = null;\n  private tokenExpiresAt: number | null = null;\n  private onUnauthorized: ((errorCode: string) => void) | null = null;\n  private isRefreshing: boolean = false; // 防止重复刷新\n  private refreshPromise: Promise<boolean> | null = null; // 共享刷新Promise\n\n  constructor(baseUrl: string = API_BASE_URL) {\n    this.baseUrl = baseUrl;\n  }\n\n  setToken(token: string | null, expiresAt?: number | null) {\n    this.token = token;\n    this.tokenExpiresAt = expiresAt || null;\n  }\n\n  setRefreshToken(refreshToken: string | null) {\n    this.refreshToken = refreshToken;\n  }\n\n  /**\n   * 设置 401 未授权回调（用于自动登出）\n   * @param handler 回调函数，接收错误码参数（UNAUTHORIZED | SESSION_INVALID）\n   */\n  setUnauthorizedHandler(handler: (errorCode: string) => void) {\n    this.onUnauthorized = handler;\n  }\n\n  /**\n   * 🔐 安全增强：检查 Token 是否即将过期（提前1分钟）\n   */\n  private isTokenExpiringSoon(): boolean {\n    if (!this.tokenExpiresAt) {\n      return false;\n    }\n    const now = Date.now();\n    const buffer = 60 * 1000; // 提前1分钟\n    return now + buffer >= this.tokenExpiresAt;\n  }\n\n  /**\n   * 🔐 安全增强：刷新 Access Token\n   */\n  private async refreshAccessToken(): Promise<boolean> {\n    // 如果已经在刷新，等待已有的刷新Promise\n    if (this.isRefreshing && this.refreshPromise) {\n      return this.refreshPromise;\n    }\n\n    if (!this.refreshToken) {\n      console.warn('[API] 无法刷新 Token：缺少 refresh_token');\n      return false;\n    }\n\n    this.isRefreshing = true;\n    this.refreshPromise = (async () => {\n      try {\n        const response = await fetch(`${this.baseUrl}/auth/refresh`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ refresh_token: this.refreshToken }),\n        });\n\n        if (!response.ok) {\n          console.error('[API] 刷新 Token 失败:', response.status);\n          return false;\n        }\n\n        const data = await response.json();\n        if (data.success && data.data?.token) {\n          const expiresAt = Date.now() + (data.data.expires_in || 900) * 1000;\n          this.setToken(data.data.token, expiresAt);\n\n          // 同步到 auth-store\n          const { useAuthStore } = await import('@/stores/auth-store');\n          useAuthStore.getState().setToken(data.data.token, data.data.expires_in);\n\n          console.log('[API] Token 刷新成功');\n          return true;\n        }\n\n        return false;\n      } catch (error) {\n        console.error('[API] 刷新 Token 异常:', error);\n        return false;\n      } finally {\n        this.isRefreshing = false;\n        this.refreshPromise = null;\n      }\n    })();\n\n    return this.refreshPromise;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {},\n    timeout: number = 30000 // 默认30秒超时\n  ): Promise<ApiResponse<T>> {\n    // 🔐 安全增强：Token 即将过期时自动刷新\n    if (this.isTokenExpiringSoon() && !endpoint.includes('/auth/refresh')) {\n      console.log('[API] Token 即将过期，自动刷新...');\n      await this.refreshAccessToken();\n    }\n\n    // 🌐 国际化：从 settings-store 获取当前语言\n    let currentLanguage = 'zh-CN'; // 默认中文\n    try {\n      const { useSettingsStore } = await import('@/stores/settings-store');\n      currentLanguage = useSettingsStore.getState().language;\n    } catch (error) {\n      console.warn('[API] 无法获取语言设置，使用默认语言');\n    }\n\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      'Accept-Language': currentLanguage,\n      ...(options.headers as Record<string, string>),\n    };\n\n    if (this.token) {\n      headers['Authorization'] = `Bearer ${this.token}`;\n    }\n\n    try {\n      // 使用 AbortController 实现超时\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\n        ...options,\n        headers,\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      // 处理 401 未授权错误（尝试刷新一次）\n      if (response.status === 401 && !endpoint.includes('/auth/refresh')) {\n        console.log('[API] 收到 401 错误，尝试刷新 Token...');\n        const refreshed = await this.refreshAccessToken();\n\n        if (refreshed) {\n          // 刷新成功，重新发起请求\n          console.log('[API] Token 刷新成功，重新发起请求');\n          return this.request<T>(endpoint, options, timeout);\n        }\n      }\n\n      // 原有的 401 处理逻辑\n      if (response.status === 401) {\n        // 尝试解析响应体，获取错误码\n        let errorCode = 'UNAUTHORIZED'; // 默认错误码\n        let errorMessage = '会话已失效，请重新登录';\n\n        try {\n          const errorData = await response.json();\n          if (errorData.error?.code) {\n            errorCode = errorData.error.code;\n            errorMessage = errorData.error.message || errorMessage;\n          }\n        } catch (e) {\n          // 忽略 JSON 解析错误，使用默认值\n        }\n\n        // 触发登出回调，传递错误码\n        if (this.onUnauthorized) {\n          this.onUnauthorized(errorCode);\n        }\n\n        return {\n          success: false,\n          error: {\n            code: errorCode,\n            message: errorMessage,\n          },\n        };\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error: any) {\n      // 检测是否为超时错误\n      if (error.name === 'AbortError') {\n        return {\n          success: false,\n          error: {\n            code: 'TIMEOUT',\n            message: '请求超时，请检查网络连接后重试',\n          },\n        };\n      }\n\n      return {\n        success: false,\n        error: {\n          code: 'NETWORK_ERROR',\n          message: error.message || '网络请求失败',\n        },\n      };\n    }\n  }\n\n  // ============================================================================\n  // 认证 API\n  // ============================================================================\n\n  async getSalt(email: string): Promise<ApiResponse<{ salt: string }>> {\n    return this.request('/auth/salt', {\n      method: 'POST',\n      body: JSON.stringify({ email }),\n    });\n  }\n\n  async register(\n    email: string,\n    authHash: string,\n    salt: string,\n    inviteCode?: string,\n    turnstileToken?: string\n  ): Promise<ApiResponse<{ user: { id: string; email: string }; salt: string; token: string }>> {\n    return this.request('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        auth_hash: authHash,\n        salt,\n        invite_code: inviteCode,\n        turnstile_token: turnstileToken\n      }),\n    });\n  }\n\n  async login(\n    email: string,\n    authHash: string,\n    deviceId: string,\n    deviceName: string,\n    turnstileToken?: string\n  ): Promise<ApiResponse<{\n    user: { id: string; email: string };\n    token: string;\n    refresh_token?: string;  // 🔐 Refresh Token（7天）\n    expires_in?: number;     // 🔐 Access Token 过期时间（秒）\n  }>> {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        auth_hash: authHash,\n        device_id: deviceId,\n        device_name: deviceName,\n        turnstile_token: turnstileToken\n      }),\n    });\n  }\n\n  // ============================================================================\n  // 笔记 API\n  // ============================================================================\n\n  async getNotesCount(): Promise<ApiResponse<{ total: number }>> {\n    return this.request('/notes/count');\n  }\n\n  async getNotes(limit = 50, offset = 0): Promise<\n    ApiResponse<{\n      notes: any[];\n      pagination: { limit: number; offset: number; total: number };\n    }>\n  > {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString(),\n    });\n    return this.request(`/notes?${params}`);\n  }\n\n  async getNote(id: string): Promise<ApiResponse<any>> {\n    return this.request(`/notes/${id}`);\n  }\n\n  async createNote(data: {\n    title?: string;\n    encrypted_content: string;\n    iv: string;\n    auth_tag?: string;\n  }): Promise<ApiResponse<any>> {\n    return this.request('/notes', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateNote(\n    id: string,\n    data: {\n      title?: string;\n      encrypted_content?: string;\n      iv?: string;\n      auth_tag?: string;\n      version: number;\n    }\n  ): Promise<ApiResponse<any>> {\n    return this.request(`/notes/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deleteNote(id: string): Promise<ApiResponse<{ deleted: boolean }>> {\n    return this.request(`/notes/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ============================================================================\n  // 密码 API\n  // ============================================================================\n\n  async getPasswordsCount(): Promise<ApiResponse<{ total: number }>> {\n    return this.request('/passwords/count');\n  }\n\n  async getPasswords(limit = 50, offset = 0): Promise<\n    ApiResponse<{\n      passwords: any[];\n      pagination: { limit: number; offset: number; total: number };\n    }>\n  > {\n    const params = new URLSearchParams({\n      limit: limit.toString(),\n      offset: offset.toString(),\n    });\n    return this.request(`/passwords?${params}`);\n  }\n\n  async createPassword(data: {\n    encrypted_site: string;\n    encrypted_username: string;\n    encrypted_password: string;\n    encrypted_recovery?: string;\n    encrypted_notes?: string;\n    iv: string;\n    auth_tag?: string;\n  }): Promise<ApiResponse<any>> {\n    return this.request('/passwords', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updatePassword(\n    id: string,\n    data: {\n      encrypted_site?: string;\n      encrypted_username?: string;\n      encrypted_password?: string;\n      encrypted_recovery?: string;\n      encrypted_notes?: string;\n      iv?: string;\n      auth_tag?: string;\n      version: number;\n    }\n  ): Promise<ApiResponse<any>> {\n    return this.request(`/passwords/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deletePassword(id: string): Promise<ApiResponse<{ deleted: boolean }>> {\n    return this.request(`/passwords/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ============================================================================\n  // 设备管理 API\n  // ============================================================================\n\n  /**\n   * 获取设备列表\n   */\n  async getSessions(): Promise<ApiResponse<{\n    sessions: Array<{\n      id: string;\n      device_name: string | null;\n      device_type: string | null;\n      browser_name: string | null;\n      os_name: string | null;\n      ip_address: string | null;\n      location: string | null;\n      is_active: boolean;\n      is_current: boolean;\n      created_at: number;\n    }>;\n    max_devices: number;\n  }>> {\n    return this.request('/sessions', {\n      method: 'GET',\n    });\n  }\n\n  /**\n   * 远程登出其他设备\n   * @param sessionId 会话 ID\n   */\n  async revokeSession(sessionId: string): Promise<ApiResponse<{ message: string }>> {\n    return this.request(`/sessions/${sessionId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  /**\n   * 当前设备登出\n   */\n  async logout(): Promise<ApiResponse<{ message: string }>> {\n    return this.request('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  /**\n   * 心跳检测（用于检测会话是否有效）\n   */\n  async heartbeat(): Promise<ApiResponse<{ user_id: string; session_id: string; timestamp: number }>> {\n    return this.request('/auth/heartbeat', {\n      method: 'GET',\n    });\n  }\n\n  /**\n   * 更新用户昵称（端到端加密）\n   */\n  async updateNickname(encrypted_nickname: string, nickname_iv: string): Promise<ApiResponse<{ user: any }>> {\n    return this.request('/users/nickname', {\n      method: 'PUT',\n      body: JSON.stringify({ encrypted_nickname, nickname_iv }),\n    });\n  }\n\n  // ============================================================================\n  // 邀请码管理 API（站长专用）\n  // ============================================================================\n\n  /**\n   * 验证管理员密码\n   */\n  async verifyAdminPassword(password: string): Promise<ApiResponse<{ message: string; expires_at: number }>> {\n    return this.request('/admin/verify', {\n      method: 'POST',\n      body: JSON.stringify({ password }),\n    });\n  }\n\n  /**\n   * 创建邀请码\n   */\n  async createInviteCode(data: {\n    code: string;\n    max_uses?: number;\n    expires_at?: number | null;\n    note?: string;\n  }): Promise<ApiResponse<any>> {\n    return this.request('/admin/invite-codes', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * 获取邀请码列表\n   */\n  async getInviteCodes(limit = 100, offset = 0): Promise<ApiResponse<{\n    invite_codes: any[];\n    pagination: { limit: number; offset: number; total: number };\n  }>> {\n    return this.request(`/admin/invite-codes?limit=${limit}&offset=${offset}`, {\n      method: 'GET',\n    });\n  }\n\n  /**\n   * 更新邀请码\n   */\n  async updateInviteCode(id: string, data: {\n    max_uses?: number;\n    expires_at?: number | null;\n    is_active?: number;\n    note?: string;\n  }): Promise<ApiResponse<any>> {\n    return this.request(`/admin/invite-codes/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  /**\n   * 删除邀请码\n   */\n  async deleteInviteCode(id: string): Promise<ApiResponse<{ id: string }>> {\n    return this.request(`/admin/invite-codes/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  /**\n   * 获取用户列表（管理员功能）\n   */\n  async getUsers(): Promise<ApiResponse<{\n    users: Array<{\n      id: string;\n      email: string;\n      created_at: number;\n      updated_at: number;\n      notes_count: number;\n      passwords_count: number;\n      devices_count: number;\n    }>;\n    total: number;\n  }>> {\n    return this.request('/admin/users', {\n      method: 'GET',\n    });\n  }\n\n  /**\n   * 删除用户（管理员功能）\n   */\n  async deleteUser(userId: string): Promise<ApiResponse<{ message: string }>> {\n    return this.request(`/admin/users/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  /**\n   * 获取数据库统计信息（管理员功能）\n   */\n  async getAdminStats(password: string): Promise<ApiResponse<{\n    total: {\n      users: number;\n      notes: number;\n      passwords: number;\n      sessions: number;\n      invite_codes: number;\n    };\n    active: {\n      sessions: number;\n      invite_codes: number;\n    };\n    expired: {\n      sessions: number;\n      invite_codes: number;\n    };\n    inactive: {\n      sessions: number;\n    };\n    storage: {\n      actualUsageMB: number;\n      actualUsageBytes: number;\n      limitMB: number;\n      usagePercent: number;\n      status: 'normal' | 'warning' | 'critical';\n    };\n    quota: {\n      notes: {\n        softLimit: number;\n        hardLimit: number;\n        usersNearSoftLimit: number;\n        usersAtSoftLimit: number;\n        usersAtHardLimit: number;\n      };\n      passwords: {\n        softLimit: number;\n        hardLimit: number;\n        usersNearSoftLimit: number;\n        usersAtSoftLimit: number;\n        usersAtHardLimit: number;\n      };\n    };\n  }>> {\n    return this.request('/admin/stats', {\n      method: 'GET',\n      headers: {\n        'X-Admin-Password': password,\n      },\n    });\n  }\n\n  /**\n   * 手动触发数据清理（管理员功能）\n   */\n  async cleanupData(password: string): Promise<ApiResponse<{\n    cleaned: {\n      expired_sessions: number;\n      inactive_sessions: number;\n      expired_invite_codes: number;\n    };\n    message: string;\n  }>> {\n    return this.request('/admin/cleanup', {\n      method: 'POST',\n      body: JSON.stringify({ password }),\n    });\n  }\n}\n\nexport const api = new ApiClient();\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { api } from '@/lib/api';\n\ninterface User {\n  id: string;\n  user_id: string;\n  email: string;\n  encrypted_nickname?: string;  // 加密后的昵称（端到端加密）\n  nickname_iv?: string;          // 昵称加密的初始化向量\n}\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  refreshToken: string | null;       // 🔐 Refresh Token（7天有效期）\n  tokenExpiresAt: number | null;     // 🔐 Access Token 过期时间（Unix 毫秒时间戳）\n\n  login: (user: User, token: string, refreshToken?: string, expiresIn?: number) => void;\n  logout: () => void;\n  setToken: (token: string, expiresIn?: number) => void;\n  updateUserNickname: (nickname: { encrypted_nickname: string; nickname_iv: string } | null) => void;  // 更新用户昵称（加密）\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      isAuthenticated: false,\n      user: null,\n      token: null,\n      refreshToken: null,\n      tokenExpiresAt: null,\n\n      login: (user, token, refreshToken, expiresIn) => {\n        const expiresAt = expiresIn ? Date.now() + expiresIn * 1000 : null;\n        set({\n          isAuthenticated: true,\n          user,\n          token,\n          refreshToken: refreshToken || null,\n          tokenExpiresAt: expiresAt,\n        });\n      },\n\n      logout: () => {\n        set({\n          isAuthenticated: false,\n          user: null,\n          token: null,\n          refreshToken: null,\n          tokenExpiresAt: null,\n        });\n        // 仅清空认证数据，保留主题设置等其他数据\n        localStorage.removeItem('anynote-auth-storage');\n      },\n\n      setToken: (token, expiresIn) => {\n        const expiresAt = expiresIn ? Date.now() + expiresIn * 1000 : null;\n        set({ token, tokenExpiresAt: expiresAt });\n      },\n\n      updateUserNickname: (nickname) => {\n        set((state) => ({\n          user: state.user ? {\n            ...state.user,\n            encrypted_nickname: nickname?.encrypted_nickname || undefined,\n            nickname_iv: nickname?.nickname_iv || undefined,\n          } : null,\n        }));\n      },\n    }),\n    {\n      name: 'anynote-auth-storage',\n      // 💡 关键修复：Zustand 从 localStorage 恢复数据后，同步 token 和 refresh_token 到 api 客户端\n      onRehydrateStorage: () => (state) => {\n        if (state?.token) {\n          api.setToken(state.token, state.tokenExpiresAt);\n        }\n        if (state?.refreshToken) {\n          api.setRefreshToken(state.refreshToken);\n        }\n      },\n    }\n  )\n);\n","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nexport type Theme = 'light' | 'dark';\nexport type Language = 'zh-CN' | 'en-US';\nexport type ItemsPerPage = 25 | 50 | 100;\n\ninterface SettingsState {\n  theme: Theme;\n  language: Language;\n  itemsPerPage: ItemsPerPage; // 分页大小\n\n  setTheme: (theme: Theme) => void;\n  setLanguage: (language: Language) => void;\n  setItemsPerPage: (itemsPerPage: ItemsPerPage) => void;\n\n  // 获取实际应用的主题\n  getResolvedTheme: () => 'light' | 'dark';\n  // 获取实际应用的语言（考虑浏览器语言）\n  getResolvedLanguage: () => Language;\n}\n\n// 检测浏览器主题偏好\nconst getSystemTheme = (): 'light' | 'dark' => {\n  if (typeof window === 'undefined') return 'dark';\n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n};\n\n// 更新主题色 meta 标签（PWA 支持）\nconst updateThemeColorMeta = (theme: 'light' | 'dark') => {\n  if (typeof window === 'undefined') return;\n\n  const themeColor = theme === 'dark' ? '#1e293b' : '#3b82f6';\n  let metaTag = document.querySelector('meta[name=\"theme-color\"]');\n\n  if (!metaTag) {\n    metaTag = document.createElement('meta');\n    metaTag.setAttribute('name', 'theme-color');\n    document.head.appendChild(metaTag);\n  }\n\n  metaTag.setAttribute('content', themeColor);\n};\n\n// 检测浏览器语言偏好\nconst getSystemLanguage = (): Language => {\n  if (typeof window === 'undefined') return 'zh-CN';\n  const lang = navigator.language || 'zh-CN';\n  return lang.startsWith('zh') ? 'zh-CN' : 'en-US';\n};\n\nexport const useSettingsStore = create<SettingsState>()(\n  persist(\n    (set, get) => ({\n      // 初始主题根据系统偏好自动设置\n      theme: getSystemTheme(),\n      // 初始语言根据浏览器语言自动设置\n      language: getSystemLanguage(),\n      // 默认分页大小：25 条/页\n      itemsPerPage: 25,\n\n      setTheme: (theme) => {\n        set({ theme });\n\n        // 应用主题到 DOM\n        if (theme === 'dark') {\n          document.documentElement.classList.add('dark');\n        } else {\n          document.documentElement.classList.remove('dark');\n        }\n\n        // 更新 PWA 主题色\n        updateThemeColorMeta(theme);\n      },\n\n      setLanguage: (language) => {\n        set({ language });\n      },\n\n      setItemsPerPage: (itemsPerPage) => {\n        set({ itemsPerPage });\n      },\n\n      getResolvedTheme: () => {\n        const { theme } = get();\n        return theme;\n      },\n\n      getResolvedLanguage: () => {\n        const { language } = get();\n        return language;\n      },\n    }),\n    {\n      name: 'anynote-settings-storage',\n      onRehydrateStorage: () => (state) => {\n        // 恢复状态后立即应用主题\n        if (state) {\n          if (state.theme === 'dark') {\n            document.documentElement.classList.add('dark');\n          } else {\n            document.documentElement.classList.remove('dark');\n          }\n          // 更新 PWA 主题色\n          updateThemeColorMeta(state.theme);\n        }\n      },\n    }\n  )\n);\n","/**\n * LoadingSpinner 组件\n * 用于路由懒加载时的 Suspense fallback\n */\nexport default function LoadingSpinner() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n      <div className=\"flex flex-col items-center gap-4\">\n        {/* 旋转加载图标 */}\n        <div className=\"w-12 h-12 border-4 border-blue-200 dark:border-blue-900 border-t-blue-500 dark:border-t-blue-400 rounded-full animate-spin\"></div>\n\n        {/* 加载文本 */}\n        <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n          正在加载...\n        </p>\n      </div>\n    </div>\n  );\n}\n","/**\n * Demo 模式模拟数据\n * 用于展示界面功能，无需后端 API\n */\n\nexport interface DemoNote {\n  id: string;\n  user_id: string;\n  title: string;\n  encrypted_content: string;\n  iv: string;\n  created_at: number;\n  updated_at: number;\n  version: number;\n  tags?: string[];\n}\n\nexport interface DemoPassword {\n  id: string;\n  user_id: string;\n  encrypted_site: string;\n  encrypted_username: string;\n  encrypted_password: string;\n  encrypted_notes: string;\n  iv: string;\n  created_at: number;\n  updated_at: number;\n  version: number;\n}\n\nexport interface DemoSession {\n  id: string;\n  device_name: string | null;\n  device_type: string | null;\n  browser_name: string | null;\n  os_name: string | null;\n  ip_address: string | null;\n  location: string | null;\n  is_active: boolean;\n  is_current: boolean;\n  created_at: number;\n  last_active: number;\n}\n\n/**\n * 模拟用户数据\n */\nexport const demoUser = {\n  id: 'demo-user-id',\n  user_id: 'demo-user-id',\n  email: 'demo@anynote.app',\n  encrypted_nickname: '', // Demo 模式下使用明文昵称\n  nickname_iv: '',\n};\n\n/**\n * 模拟用户昵称（明文）\n */\nexport const demoNickname = '演示用户';\n\n/**\n * 模拟 JWT Token\n */\nexport const demoToken = 'demo-jwt-token-for-display-only';\n\n/**\n * 模拟笔记数据（3 篇示例笔记）\n */\nexport const demoNotes: DemoNote[] = [\n  {\n    id: 'demo-note-1',\n    user_id: 'demo-user-id',\n    title: '欢迎使用 AnyNote 📝',\n    encrypted_content: `# 欢迎使用 AnyNote\n\n这是一个**端到端加密**的笔记与密码管理器。\n\n## 主要特性\n\n- ✅ **零知识加密**：主密码永不上传服务器\n- ✅ **Markdown 支持**：支持 GitHub 风格 Markdown (GFM)\n- ✅ **密码管理**：安全存储网站账号密码\n- ✅ **自动保存**：5 分钟防抖自动保存\n- ✅ **深色模式**：支持浅色/深色/跟随系统\n- ✅ **国际化**：支持中英文切换\n\n## 开始使用\n\n1. 点击左侧\"新建笔记\"创建新笔记\n2. 使用 Markdown 语法编辑内容\n3. 切换到\"密码\"标签页管理密码\n4. 点击右上角设置图标自定义主题\n\n## Markdown 示例\n\n### 代码高亮\n\n\\`\\`\\`javascript\nfunction hello() {\n  console.log(\"Hello, AnyNote!\");\n}\n\\`\\`\\`\n\n### 表格\n\n| 功能 | 状态 |\n|------|------|\n| 笔记编辑 | ✅ |\n| 密码管理 | ✅ |\n| 数据导出 | ✅ |\n\n### 数学公式（KaTeX）\n\n行内公式：$E = mc^2$\n\n显示公式：\n\n$$\n\\\\int_{-\\\\infty}^{\\\\infty} e^{-x^2} dx = \\\\sqrt{\\\\pi}\n$$\n\n---\n\n**这是一个 Demo 演示版本，所有数据仅存储在浏览器本地，不会上传到服务器。**`,\n    iv: 'demo-iv-1',\n    created_at: Date.now() - 86400000 * 2, // 2 天前\n    updated_at: Date.now() - 86400000 * 1, // 1 天前\n    version: 1,\n    tags: ['教程', '欢迎'],\n  },\n  {\n    id: 'demo-note-2',\n    user_id: 'demo-user-id',\n    title: '技术笔记 - React Hooks',\n    encrypted_content: `# React Hooks 最佳实践\n\n## useState 基础用法\n\n\\`\\`\\`tsx\nconst [count, setCount] = useState(0);\n\n// 函数式更新（推荐）\nsetCount(prev => prev + 1);\n\\`\\`\\`\n\n## useEffect 依赖项\n\n\\`\\`\\`tsx\nuseEffect(() => {\n  // 副作用逻辑\n  return () => {\n    // 清理逻辑\n  };\n}, [dependency]); // 依赖项数组\n\\`\\`\\`\n\n## useMemo 性能优化\n\n\\`\\`\\`tsx\nconst expensiveValue = useMemo(() => {\n  return computeExpensiveValue(a, b);\n}, [a, b]);\n\\`\\`\\`\n\n## 自定义 Hook\n\n\\`\\`\\`tsx\nfunction useLocalStorage(key: string, initialValue: string) {\n  const [value, setValue] = useState(() => {\n    return localStorage.getItem(key) || initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [key, value]);\n\n  return [value, setValue] as const;\n}\n\\`\\`\\`\n\n---\n\n**标签**：React, JavaScript, 前端开发`,\n    iv: 'demo-iv-2',\n    created_at: Date.now() - 86400000 * 7, // 7 天前\n    updated_at: Date.now() - 86400000 * 3, // 3 天前\n    version: 1,\n    tags: ['React', '前端', '技术'],\n  },\n  {\n    id: 'demo-note-3',\n    user_id: 'demo-user-id',\n    title: '会议记录 - 产品规划',\n    encrypted_content: `# 产品规划会议记录\n\n**日期**：2025-10-20\n**参与者**：产品团队、技术团队\n\n## 讨论议题\n\n1. **移动端优化**\n   - 响应式布局改进\n   - PWA 功能增强\n   - 触摸手势支持\n\n2. **安全性提升**\n   - 双因素认证（2FA）\n   - 设备管理功能\n   - 自动锁屏机制\n\n3. **功能扩展**\n   - Markdown 导入导出\n   - 笔记标签系统\n   - 搜索功能优化\n\n## 待办事项\n\n- [ ] UI/UX 设计稿（下周三前）\n- [ ] 技术方案评审（下周五）\n- [ ] 原型开发（两周内）\n\n## 下次会议\n\n**时间**：2025-10-27 14:00\n**地点**：会议室 A\n\n---\n\n**备注**：本次会议达成共识，优先实现移动端优化和安全性提升。`,\n    iv: 'demo-iv-3',\n    created_at: Date.now() - 86400000 * 1, // 1 天前\n    updated_at: Date.now() - 3600000, // 1 小时前\n    version: 1,\n    tags: ['会议', '产品'],\n  },\n];\n\n/**\n * 模拟密码数据（3 个示例密码）\n */\nexport const demoPasswords: DemoPassword[] = [\n  {\n    id: 'demo-password-1',\n    user_id: 'demo-user-id',\n    encrypted_site: 'GitHub',\n    encrypted_username: 'demo@example.com',\n    encrypted_password: 'MySecurePassword123!',\n    encrypted_notes: 'GitHub 主账号，用于开源项目开发',\n    iv: 'demo-iv-pw-1',\n    created_at: Date.now() - 86400000 * 30, // 30 天前\n    updated_at: Date.now() - 86400000 * 5, // 5 天前\n    version: 1,\n  },\n  {\n    id: 'demo-password-2',\n    user_id: 'demo-user-id',\n    encrypted_site: 'Gmail',\n    encrypted_username: 'myemail@gmail.com',\n    encrypted_password: 'EmailPassword456@',\n    encrypted_notes: '主邮箱账号，启用了双因素认证',\n    iv: 'demo-iv-pw-2',\n    created_at: Date.now() - 86400000 * 60, // 60 天前\n    updated_at: Date.now() - 86400000 * 10, // 10 天前\n    version: 1,\n  },\n  {\n    id: 'demo-password-3',\n    user_id: 'demo-user-id',\n    encrypted_site: 'Cloudflare',\n    encrypted_username: 'admin@mydomain.com',\n    encrypted_password: 'CloudflareToken789#',\n    encrypted_notes: 'Cloudflare 账号，用于管理 Workers 和 Pages',\n    iv: 'demo-iv-pw-3',\n    created_at: Date.now() - 86400000 * 15, // 15 天前\n    updated_at: Date.now() - 86400000 * 2, // 2 天前\n    version: 1,\n  },\n];\n\n/**\n * 模拟设备会话数据（3 个示例设备）\n */\nexport const demoSessions: DemoSession[] = [\n  {\n    id: 'demo-session-1',\n    device_name: 'MacBook Pro 16\"',\n    device_type: 'desktop',\n    browser_name: 'Chrome',\n    os_name: 'macOS 15',\n    ip_address: '203.0.113.12',\n    location: 'Beijing · CN',\n    is_active: true,\n    is_current: true, // 当前设备\n    created_at: Date.now() - 86400000 * 7, // 7 天前\n    last_active: Date.now(), // 刚刚活跃\n  },\n  {\n    id: 'demo-session-2',\n    device_name: 'iPhone 16 Pro',\n    device_type: 'mobile',\n    browser_name: 'Safari',\n    os_name: 'iOS 18',\n    ip_address: '198.51.100.8',\n    location: 'Shanghai · CN',\n    is_active: true,\n    is_current: false,\n    created_at: Date.now() - 86400000 * 3, // 3 天前\n    last_active: Date.now() - 3600000 * 2, // 2 小时前\n  },\n  {\n    id: 'demo-session-3',\n    device_name: 'iPad Air',\n    device_type: 'tablet',\n    browser_name: 'Safari',\n    os_name: 'iPadOS 18',\n    ip_address: '192.0.2.15',\n    location: 'Shenzhen · CN',\n    is_active: true,\n    is_current: false,\n    created_at: Date.now() - 86400000 * 10, // 10 天前\n    last_active: Date.now() - 86400000, // 1 天前\n  },\n];\n\n/**\n * 检查是否启用 Demo 模式\n */\nexport const isDemoMode = (): boolean => {\n  return import.meta.env.VITE_DEMO_MODE === 'true';\n};\n\n/**\n * Demo 模式提示消息\n */\nexport const DEMO_MODE_MESSAGE = {\n  'zh-CN': '🎭 Demo 演示模式：所有数据仅用于展示，不会保存到服务器',\n  'en-US': '🎭 Demo Mode: All data is for display only and will not be saved to the server',\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { useEffect, lazy, Suspense } from 'react';\nimport { useAuthStore } from '@/stores/auth-store';\nimport { useSettingsStore } from '@/stores/settings-store';\nimport LoadingSpinner from '@/components/LoadingSpinner';\nimport { isDemoMode, demoUser, demoToken } from '@/lib/demo-data';\n\n// 路由级代码分割：懒加载页面组件\nconst LoginPage = lazy(() => import('@/pages/LoginPage'));\nconst RegisterPage = lazy(() => import('@/pages/RegisterPage'));\nconst NotesPage = lazy(() => import('@/pages/NotesPage'));\nconst AdminInviteCodesPage = lazy(() => import('@/pages/AdminInviteCodesPage'));\n\nfunction App() {\n  const isAuthenticated = useAuthStore((state) => state.isAuthenticated);\n  const login = useAuthStore((state) => state.login);\n  const theme = useSettingsStore((state) => state.theme);\n  const setTheme = useSettingsStore((state) => state.setTheme);\n\n  // 🎭 Demo 模式：自动登录\n  useEffect(() => {\n    if (isDemoMode() && !isAuthenticated) {\n      console.log('🎭 Demo 模式已启用，自动登录...');\n      login(demoUser, demoToken);\n    }\n  }, [isAuthenticated, login]);\n\n  // 初始化主题\n  useEffect(() => {\n    // 应用主题（触发 setTheme 确保 DOM 更新）\n    setTheme(theme);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 overflow-x-hidden max-w-full\">\n      <Suspense fallback={<LoadingSpinner />}>\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={!isAuthenticated ? <LoginPage /> : <Navigate to=\"/notes\" replace />}\n          />\n          <Route\n            path=\"/register\"\n            element={!isAuthenticated ? <RegisterPage /> : <Navigate to=\"/notes\" replace />}\n          />\n          <Route\n            path=\"/notes\"\n            element={isAuthenticated ? <NotesPage /> : <Navigate to=\"/login\" replace />}\n          />\n          <Route\n            path=\"/admin\"\n            element={isAuthenticated ? <AdminInviteCodesPage /> : <Navigate to=\"/login\" replace />}\n          />\n          <Route\n            path=\"/\"\n            element={<Navigate to={isAuthenticated ? \"/notes\" : \"/login\"} replace />}\n          />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App.tsx';\nimport './index.css';\n\n// 禁用 React DevTools 下载提示\nif (typeof window !== 'undefined') {\n  // @ts-ignore\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = {\n    isDisabled: true,\n    supportsFiber: true,\n    inject: () => {},\n    onCommitFiberRoot: () => {},\n    onCommitFiberUnmount: () => {},\n  };\n}\n\n// Demo 模式下设置 basename（GitHub Pages 子路径部署）\nconst basename = import.meta.env.VITE_DEMO_MODE === 'true' ? '/AnyNote' : undefined;\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <BrowserRouter\n      basename={basename}\n      future={{\n        v7_startTransition: true,\n        v7_relativeSplatPath: true,\n      }}\n    >\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n"],"file":"assets/index-Dt62Q5Mp.js"}