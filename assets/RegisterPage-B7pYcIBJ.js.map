{"version":3,"mappings":"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","names":["RegisterPage","navigate","useNavigate","login","useAuthStore","state","getResolvedTheme","useSettingsStore","useTranslation","useEffect","__vitePreload","email","setEmail","useState","password","setPassword","confirmPassword","setConfirmPassword","inviteCode","setInviteCode","loading","setLoading","error","setError","passwordStrength","setPasswordStrength","turnstileToken","setTurnstileToken","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","inviteCodeError","setInviteCodeError","validateEmail","value","validatePassword","validateConfirmPassword","validateInviteCode","handleEmailChange","handlePasswordChange","strength","crypto","handleConfirmPasswordChange","handleInviteCodeChange","getStrengthColor","getStrengthText","handleSubmit","e","salt","authHash","response","api","errorMsg","_a","_b","_c","user","token","userWithId","err","jsx","jsxs","Turnstile","Link"],"ignoreList":[],"sources":["../../src/pages/RegisterPage.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Turnstile } from '@marsidev/react-turnstile';\nimport { useAuthStore } from '@/stores/auth-store';\nimport { useSettingsStore } from '@/stores/settings-store';\nimport { api } from '@/lib/api';\nimport { crypto } from '@/lib/crypto';\nimport { useTranslation } from '@/i18n';\n\nexport default function RegisterPage() {\n  const navigate = useNavigate();\n  const login = useAuthStore((state) => state.login);\n  const { getResolvedTheme } = useSettingsStore();\n  const { t } = useTranslation();\n\n  // 预加载 NotesPage：用户打开注册页时，后台就开始下载笔记页面\n  useEffect(() => {\n    const preloadNotesPage = () => import('@/pages/NotesPage');\n    preloadNotesPage();\n  }, []);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [inviteCode, setInviteCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [passwordStrength, setPasswordStrength] = useState(0);\n  const [turnstileToken, setTurnstileToken] = useState<string>('');\n\n  // 实时验证错误\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [inviteCodeError, setInviteCodeError] = useState('');\n\n  // 邮箱实时验证\n  const validateEmail = (value: string) => {\n    if (value.length > 0 && value.length < 12) {\n      setEmailError(t.errors.emailTooShort);\n      return false;\n    }\n    if (value.length > 32) {\n      setEmailError(t.errors.emailTooLong);\n      return false;\n    }\n    if (value.length >= 12 && !value.includes('@')) {\n      setEmailError(t.errors.emailInvalidFormat);\n      return false;\n    }\n    setEmailError('');\n    return true;\n  };\n\n  // 密码实时验证\n  const validatePassword = (value: string) => {\n    if (value.length > 0 && value.length < 12) {\n      setPasswordError(t.errors.passwordMinLength);\n      return false;\n    }\n    if (value.length > 32) {\n      setPasswordError(t.errors.passwordMaxLength);\n      return false;\n    }\n    setPasswordError('');\n    return true;\n  };\n\n  // 确认密码实时验证\n  const validateConfirmPassword = (value: string) => {\n    if (value.length > 0 && value !== password) {\n      setConfirmPasswordError(t.errors.confirmPasswordMismatch);\n      return false;\n    }\n    setConfirmPasswordError('');\n    return true;\n  };\n\n  // 邀请码实时验证\n  const validateInviteCode = (value: string) => {\n    if (value.length > 32) {\n      setInviteCodeError(t.errors.inviteCodeMaxLength);\n      return false;\n    }\n    setInviteCodeError('');\n    return true;\n  };\n\n  const handleEmailChange = (value: string) => {\n    setEmail(value);\n    validateEmail(value);\n  };\n\n  const handlePasswordChange = (value: string) => {\n    setPassword(value);\n    const strength = crypto.calculatePasswordStrength(value);\n    setPasswordStrength(strength);\n    validatePassword(value);\n    // 同时重新验证确认密码（当用户修改密码时）\n    if (confirmPassword.length > 0) {\n      validateConfirmPassword(confirmPassword);\n    }\n  };\n\n  const handleConfirmPasswordChange = (value: string) => {\n    setConfirmPassword(value);\n    validateConfirmPassword(value);\n  };\n\n  const handleInviteCodeChange = (value: string) => {\n    setInviteCode(value);\n    validateInviteCode(value);\n  };\n\n  const getStrengthColor = () => {\n    if (passwordStrength < 40) return 'bg-red-500';\n    if (passwordStrength < 60) return 'bg-yellow-500';\n    if (passwordStrength < 80) return 'bg-blue-500';\n    return 'bg-green-500';\n  };\n\n  const getStrengthText = () => {\n    if (passwordStrength < 40) return t.register.passwordStrength.weak;\n    if (passwordStrength < 60) return t.register.passwordStrength.medium;\n    if (passwordStrength < 80) return t.register.passwordStrength.strong;\n    return t.register.passwordStrength.veryStrong;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    // 验证 Turnstile token\n    if (!turnstileToken) {\n      setError(t.errors.turnstileRequired);\n      return;\n    }\n\n    // 验证邀请码\n    if (!inviteCode.trim()) {\n      setError(t.errors.inviteCodeRequired);\n      return;\n    }\n\n    // 验证密码\n    if (password !== confirmPassword) {\n      setError(t.errors.passwordMismatch);\n      return;\n    }\n\n    if (passwordStrength < 60) {\n      setError(t.errors.passwordTooWeak);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      // 1. 初始化加密管理器（生成盐值和派生密钥）\n      const { salt, authHash } = await crypto.initialize(password, email);\n\n      // 2. 调用注册 API（传入盐值、邀请码和 Turnstile token）\n      const response = await api.register(email, authHash, salt, inviteCode, turnstileToken);\n\n      if (!response.success || !response.data) {\n        let errorMsg = '注册失败，请稍后重试';\n\n        // 根据错误代码提供详细提示\n        if (response.error?.code === 'TIMEOUT') {\n          errorMsg = '网络请求超时，请检查网络连接后重试';\n        } else if (response.error?.code === 'NETWORK_ERROR') {\n          errorMsg = '网络连接失败，请检查网络后重试';\n        } else if (response.error?.message) {\n          errorMsg = response.error.message;\n        }\n\n        setError(errorMsg);\n        setLoading(false);\n        return;\n      }\n\n      // 3. 保存认证信息\n      const { user, token } = response.data;\n      api.setToken(token);\n      // 添加 user_id 字段（与 id 相同）\n      const userWithId = { ...user, user_id: user.id };\n      login(userWithId, token);\n\n      // 4. 跳转到笔记页面\n      navigate('/notes');\n    } catch (err: any) {\n      let errorMsg = '注册失败，请稍后重试';\n\n      // 捕获特定错误类型\n      if (err.name === 'TypeError' && err.message.includes('fetch')) {\n        errorMsg = '网络连接失败，请检查您的网络连接';\n      } else if (err.message) {\n        errorMsg = err.message;\n      }\n\n      setError(errorMsg);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center px-4 py-12 bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 dark:from-gray-900 dark:via-purple-900/20 dark:to-blue-900/20\">\n      <div className=\"max-w-md w-full\">\n        <div className=\"card\">\n          {/* Logo + 标题 */}\n          <div className=\"flex items-center gap-4 mb-6\">\n            <img src=\"/logo.svg\" alt=\"AnyNote\" className=\"w-16 h-16 flex-shrink-0\" />\n            <div className=\"flex-1\">\n              <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-2\">\n                {t.register.title}\n              </h2>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {t.register.securityNote}\n              </p>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/30 border border-red-300 dark:border-red-800 rounded-lg\">\n              <p className=\"text-sm text-red-800 dark:text-red-200\">{error}</p>\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n              >\n                {t.register.email}\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => handleEmailChange(e.target.value)}\n                  required\n                  autoComplete=\"email\"\n                  minLength={12}\n                  maxLength={32}\n                  className={`w-full px-4 py-2 pr-16 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 outline-none ${\n                    emailError\n                      ? 'border-2 border-red-500 dark:border-red-500'\n                      : 'border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-primary-500 focus:border-transparent'\n                  }`}\n                  placeholder={t.register.emailPlaceholder}\n                />\n                <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                  {email.length}/32\n                </span>\n              </div>\n              {emailError && (\n                <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">\n                  {emailError}\n                </p>\n              )}\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"password\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n              >\n                {t.register.password}\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e) => {\n                    // 实时阻止空格输入\n                    const value = e.target.value.replace(/\\s/g, '');\n                    handlePasswordChange(value);\n                  }}\n                  onKeyDown={(e) => {\n                    // 阻止空格键\n                    if (e.key === ' ') {\n                      e.preventDefault();\n                    }\n                  }}\n                  required\n                  autoComplete=\"new-password\"\n                  minLength={12}\n                  maxLength={32}\n                  className={`w-full px-4 py-2 pr-16 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 outline-none ${\n                    passwordError\n                      ? 'border-2 border-red-500 dark:border-red-500'\n                      : 'border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-primary-500 focus:border-transparent'\n                  }`}\n                  placeholder={t.register.passwordPlaceholder}\n                />\n                <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                  {password.length}/32\n                </span>\n              </div>\n              {passwordError && (\n                <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">\n                  {passwordError}\n                </p>\n              )}\n              {password && !passwordError && (\n                <div className=\"mt-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"flex-1 h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                      <div\n                        className={`h-full transition-all duration-300 ${getStrengthColor()}`}\n                        style={{ width: `${passwordStrength}%` }}\n                      />\n                    </div>\n                    <span className=\"text-xs font-medium text-gray-600 dark:text-gray-400\">\n                      {getStrengthText()}\n                    </span>\n                  </div>\n                  <p className=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n                    {t.register.passwordStrength.recommendation}\n                  </p>\n                </div>\n              )}\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"confirmPassword\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n              >\n                {t.register.confirmPassword}\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword}\n                  onChange={(e) => {\n                    // 实时阻止空格输入\n                    const value = e.target.value.replace(/\\s/g, '');\n                    handleConfirmPasswordChange(value);\n                  }}\n                  onKeyDown={(e) => {\n                    // 阻止空格键\n                    if (e.key === ' ') {\n                      e.preventDefault();\n                    }\n                  }}\n                  required\n                  autoComplete=\"new-password\"\n                  minLength={12}\n                  maxLength={32}\n                  className={`w-full px-4 py-2 pr-16 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 outline-none ${\n                    confirmPasswordError\n                      ? 'border-2 border-red-500 dark:border-red-500'\n                      : 'border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-primary-500 focus:border-transparent'\n                  }`}\n                  placeholder={t.register.confirmPasswordPlaceholder}\n                />\n                <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                  {confirmPassword.length}/32\n                </span>\n              </div>\n              {confirmPasswordError && (\n                <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">\n                  {confirmPasswordError}\n                </p>\n              )}\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"inviteCode\"\n                className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\"\n              >\n                {t.register.inviteCode}\n              </label>\n              <div className=\"relative\">\n                <input\n                  id=\"inviteCode\"\n                  type=\"text\"\n                  value={inviteCode}\n                  onChange={(e) => handleInviteCodeChange(e.target.value)}\n                  required\n                  maxLength={32}\n                  className={`w-full px-4 py-2 pr-16 rounded-lg bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100 outline-none ${\n                    inviteCodeError\n                      ? 'border-2 border-red-500 dark:border-red-500'\n                      : 'border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-primary-500 focus:border-transparent'\n                  }`}\n                  placeholder={t.register.inviteCodePlaceholder}\n                />\n                <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                  {inviteCode.length}/32\n                </span>\n              </div>\n              {inviteCodeError && (\n                <p className=\"mt-1 text-xs text-red-600 dark:text-red-400\">\n                  {inviteCodeError}\n                </p>\n              )}\n            </div>\n\n            <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3\">\n              <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                {t.register.warningMessage}\n              </p>\n            </div>\n\n            {/* Cloudflare Turnstile 人机验证 */}\n            <div className=\"w-full\">\n              <Turnstile\n                siteKey={import.meta.env.VITE_TURNSTILE_SITE_KEY || '1x00000000000000000000AA'}\n                onSuccess={(token) => setTurnstileToken(token)}\n                onError={() => setTurnstileToken('')}\n                onExpire={() => setTurnstileToken('')}\n                options={{\n                  theme: getResolvedTheme(),\n                  size: 'flexible',\n                }}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading || !turnstileToken}\n              className=\"w-full btn-primary disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? t.register.registering : t.register.registerButton}\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              {t.register.hasAccount}{' '}\n              <Link\n                to=\"/login\"\n                className=\"font-medium text-primary-600 hover:text-primary-500 dark:text-primary-400\"\n              >\n                {t.register.login}\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"file":"assets/RegisterPage-B7pYcIBJ.js"}