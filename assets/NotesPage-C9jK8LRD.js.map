{"version":3,"file":"NotesPage-C9jK8LRD.js","sources":["../../src/components/MarkdownErrorBoundary.tsx","../../src/lib/simple-markdown.tsx","../../src/lib/pwned-password.ts","../../src/lib/lru-cache.ts","../../src/pages/NotesPage.tsx"],"sourcesContent":["import { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n}\n\n/**\n * Markdown 渲染错误边界组件\n * 专门用于捕获 ReactMarkdown 在旧版 Safari (iOS 16) 上的崩溃问题\n */\nexport class MarkdownErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // 更新状态，下次渲染时显示降级 UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // 记录错误到控制台（生产环境可改为发送到监控服务）\n    console.error('[MarkdownErrorBoundary] 捕获到 Markdown 渲染错误:', error, errorInfo);\n\n    // 调用自定义错误处理器\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // 如果提供了自定义降级 UI，使用它\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // 默认降级 UI：提供友好的提示和解决方案\n      return (\n        <div className=\"bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 border-2 border-yellow-400 dark:border-yellow-500/50 rounded-lg p-5 shadow-sm\">\n          <div className=\"flex items-start gap-4\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n              </svg>\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"text-base font-bold text-yellow-900 dark:text-yellow-100 mb-2\">\n                😔 笔记渲染遇到问题\n              </h3>\n              <p className=\"text-sm text-yellow-800 dark:text-yellow-200 mb-3 leading-relaxed\">\n                您的设备可能不支持复杂的 Markdown 渲染（数学公式、代码高亮等）。\n              </p>\n              <div className=\"bg-white dark:bg-gray-900/50 border border-yellow-300 dark:border-yellow-600/30 rounded-lg p-3 mb-3\">\n                <p className=\"text-xs font-semibold text-gray-700 dark:text-gray-300 mb-2\">💡 建议解决方案：</p>\n                <ul className=\"text-xs text-gray-600 dark:text-gray-400 space-y-1.5 list-disc list-inside\">\n                  <li>切换到<strong className=\"text-blue-600 dark:text-blue-400\">编辑模式</strong>查看原始内容</li>\n                  <li>更新浏览器到最新版本（推荐 iOS 17+）</li>\n                  <li>简化笔记内容，避免复杂的 LaTeX 公式</li>\n                </ul>\n              </div>\n              <div className=\"flex items-center gap-2 flex-wrap\">\n                <button\n                  onClick={() => this.setState({ hasError: false, error: null })}\n                  className=\"text-sm px-4 py-2 rounded-lg bg-yellow-600 dark:bg-yellow-500 text-white font-medium hover:bg-yellow-700 dark:hover:bg-yellow-600 transition-colors shadow-sm\"\n                >\n                  🔄 重试渲染\n                </button>\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    // 触发父组件切换到编辑模式（通过全局事件）\n                    window.dispatchEvent(new CustomEvent('switchToEditMode'));\n                  }}\n                  className=\"text-sm px-4 py-2 rounded-lg bg-blue-600 dark:bg-blue-500 text-white font-medium hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors shadow-sm\"\n                >\n                  ✏️ 切换到编辑模式\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","/**\n * 简化版 Markdown 渲染器\n * 专为 iOS 16 Safari 设计，完全不依赖 ReactMarkdown\n * 只支持基础语法，保证 100% 稳定性\n */\n\nimport React from 'react';\n\ninterface SimpleMarkdownProps {\n  content: string;\n  className?: string;\n}\n\n/**\n * 简单的 Markdown 转 HTML\n * 支持：标题、段落、列表、加粗、斜体、链接、代码\n */\nexport function SimpleMarkdownRenderer({ content, className = '' }: SimpleMarkdownProps) {\n  const parseMarkdown = (text: string): React.ReactNode[] => {\n    const lines = text.split('\\n');\n    const elements: React.ReactNode[] = [];\n    let listItems: string[] = [];\n    let orderedListItems: string[] = [];\n    let inCodeBlock = false;\n    let codeBlockContent: string[] = [];\n    let key = 0;\n\n    const flushList = () => {\n      if (listItems.length > 0) {\n        elements.push(\n          <ul key={`ul-${key++}`} className=\"list-disc list-inside my-4 text-gray-700 dark:text-gray-100 space-y-1\">\n            {listItems.map((item, idx) => (\n              <li key={idx} className=\"text-base leading-relaxed ml-4\" dangerouslySetInnerHTML={{ __html: parseInline(item) }} />\n            ))}\n          </ul>\n        );\n        listItems = [];\n      }\n      if (orderedListItems.length > 0) {\n        elements.push(\n          <ol key={`ol-${key++}`} className=\"list-decimal list-inside my-4 text-gray-700 dark:text-gray-100 space-y-1\">\n            {orderedListItems.map((item, idx) => (\n              <li key={idx} className=\"text-base leading-relaxed ml-4\" dangerouslySetInnerHTML={{ __html: parseInline(item) }} />\n            ))}\n          </ol>\n        );\n        orderedListItems = [];\n      }\n    };\n\n    const flushCodeBlock = () => {\n      if (codeBlockContent.length > 0) {\n        elements.push(\n          <pre key={`pre-${key++}`} className=\"bg-gray-100 dark:bg-gray-800 p-4 rounded-lg border border-gray-300 dark:border-gray-700 my-4 overflow-x-auto\">\n            <code className=\"text-sm text-gray-900 dark:text-gray-100 font-mono\">\n              {codeBlockContent.join('\\n')}\n            </code>\n          </pre>\n        );\n        codeBlockContent = [];\n      }\n    };\n\n    lines.forEach((line) => {\n      // 代码块检测\n      if (line.startsWith('```')) {\n        if (inCodeBlock) {\n          flushCodeBlock();\n          inCodeBlock = false;\n        } else {\n          flushList();\n          inCodeBlock = true;\n        }\n        return;\n      }\n\n      if (inCodeBlock) {\n        codeBlockContent.push(line);\n        return;\n      }\n\n      // 标题\n      if (line.startsWith('#')) {\n        flushList();\n        const match = line.match(/^(#{1,6})\\s+(.+)$/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          const Tag = `h${level}` as keyof JSX.IntrinsicElements;\n          const classNames = [\n            'text-3xl font-bold text-gray-900 dark:text-white mb-4 mt-2 leading-tight',\n            'text-2xl font-bold text-gray-900 dark:text-white mb-4 mt-6 pb-2 border-b border-gray-300 dark:border-gray-700 leading-snug',\n            'text-xl font-bold text-gray-900 dark:text-white mb-3 mt-5 leading-snug',\n            'text-lg font-bold text-gray-900 dark:text-white mb-2 mt-4 leading-normal',\n            'text-base font-bold text-gray-900 dark:text-white mb-2 mt-3 leading-normal',\n            'text-sm font-bold text-gray-900 dark:text-white mb-2 mt-2 leading-normal',\n          ];\n          elements.push(\n            <Tag key={`h${level}-${key++}`} className={classNames[level - 1]} dangerouslySetInnerHTML={{ __html: parseInline(text) }} />\n          );\n        }\n        return;\n      }\n\n      // 无序列表\n      if (line.match(/^[\\*\\-\\+]\\s+/)) {\n        orderedListItems = [];\n        const text = line.replace(/^[\\*\\-\\+]\\s+/, '');\n        listItems.push(text);\n        return;\n      }\n\n      // 有序列表\n      if (line.match(/^\\d+\\.\\s+/)) {\n        listItems = [];\n        const text = line.replace(/^\\d+\\.\\s+/, '');\n        orderedListItems.push(text);\n        return;\n      }\n\n      // 分割线\n      if (line.match(/^(\\-{3,}|\\*{3,}|_{3,})$/)) {\n        flushList();\n        elements.push(<hr key={`hr-${key++}`} className=\"border-gray-300 dark:border-gray-600 my-6\" />);\n        return;\n      }\n\n      // 引用\n      if (line.startsWith('>')) {\n        flushList();\n        const text = line.replace(/^>\\s*/, '');\n        elements.push(\n          <blockquote key={`quote-${key++}`} className=\"border-l-4 border-blue-500 bg-blue-50 dark:bg-blue-500/5 pl-4 pr-4 py-2 my-4 italic text-gray-700 dark:text-gray-300\">\n            <p dangerouslySetInnerHTML={{ __html: parseInline(text) }} />\n          </blockquote>\n        );\n        return;\n      }\n\n      // 空行\n      if (line.trim() === '') {\n        flushList();\n        return;\n      }\n\n      // 普通段落\n      flushList();\n      elements.push(\n        <p key={`p-${key++}`} className=\"text-base text-gray-700 dark:text-gray-100 mb-3 leading-relaxed\" dangerouslySetInnerHTML={{ __html: parseInline(line) }} />\n      );\n    });\n\n    flushList();\n    flushCodeBlock();\n\n    return elements;\n  };\n\n  /**\n   * 解析行内元素：加粗、斜体、行内代码、链接\n   */\n  const parseInline = (text: string): string => {\n    // 转义 HTML 特殊字符\n    let result = text\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n\n    // 加粗：**text** 或 __text__\n    result = result.replace(/\\*\\*(.+?)\\*\\*/g, '<strong class=\"font-bold text-gray-900 dark:text-white\">$1</strong>');\n    result = result.replace(/__(.+?)__/g, '<strong class=\"font-bold text-gray-900 dark:text-white\">$1</strong>');\n\n    // 斜体：*text* 或 _text_\n    result = result.replace(/\\*(.+?)\\*/g, '<em class=\"italic text-gray-700 dark:text-gray-200\">$1</em>');\n    result = result.replace(/_(.+?)_/g, '<em class=\"italic text-gray-700 dark:text-gray-200\">$1</em>');\n\n    // 行内代码：`code`\n    result = result.replace(/`(.+?)`/g, '<code class=\"text-sm text-pink-600 dark:text-pink-400 bg-gray-200 dark:bg-gray-800 px-1.5 py-0.5 rounded font-mono\">$1</code>');\n\n    // 链接：[text](url)\n    result = result.replace(/\\[(.+?)\\]\\((.+?)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-blue-600 dark:text-blue-400 underline decoration-blue-600/30 dark:decoration-blue-400/30 hover:decoration-blue-600 dark:hover:decoration-blue-400 transition-colors\">$1</a>');\n\n    return result;\n  };\n\n  const elements = parseMarkdown(content);\n\n  return (\n    <div className={`simple-markdown ${className}`}>\n      {elements.length > 0 ? elements : (\n        <p className=\"text-base text-gray-500 dark:text-gray-400 italic\">\n          暂无内容\n        </p>\n      )}\n    </div>\n  );\n}\n","/**\n * Have I Been Pwned (HIBP) 密码泄露检测\n * 使用 k-匿名性协议保护隐私\n */\n\n/**\n * 计算 SHA-1 哈希\n */\nasync function sha1(message: string): Promise<string> {\n  const msgBuffer = new TextEncoder().encode(message);\n  const hashBuffer = await crypto.subtle.digest('SHA-1', msgBuffer);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  return hashHex.toUpperCase();\n}\n\n/**\n * 检查密码是否在泄露数据库中\n *\n * @param password - 要检查的密码\n * @returns 泄露次数（0 表示未泄露）\n */\nexport async function checkPasswordBreach(password: string): Promise<number> {\n  try {\n    // 1. 计算密码的 SHA-1 哈希\n    const hash = await sha1(password);\n\n    // 2. 仅发送哈希的前 5 位（k-匿名性协议）\n    const prefix = hash.substring(0, 5);\n    const suffix = hash.substring(5);\n\n    // 3. 请求 HIBP API（移除 User-Agent 头以避免 CORS 错误）\n    const response = await fetch(`https://api.pwnedpasswords.com/range/${prefix}`, {\n      method: 'GET',\n    });\n\n    if (!response.ok) {\n      throw new Error(`HIBP API error: ${response.status}`);\n    }\n\n    // 4. 解析响应（格式：后缀:次数\\r\\n后缀:次数\\r\\n...）\n    const text = await response.text();\n    const lines = text.split('\\r\\n');\n\n    // 5. 在返回的哈希列表中查找匹配项\n    for (const line of lines) {\n      const [hashSuffix, count] = line.split(':');\n      if (hashSuffix === suffix) {\n        return parseInt(count, 10);\n      }\n    }\n\n    // 6. 未找到匹配，说明未泄露\n    return 0;\n  } catch (error) {\n    console.error('Password breach check failed:', error);\n    throw error;\n  }\n}\n\n/**\n * 密码泄露检测结果类型\n */\nexport interface BreachCheckResult {\n  breached: boolean;        // 是否泄露\n  count: number;            // 泄露次数\n  severity: 'safe' | 'low' | 'medium' | 'high' | 'critical'; // 严重程度\n}\n\n/**\n * 检查密码泄露并返回详细结果\n */\nexport async function checkPasswordBreachWithDetails(password: string): Promise<BreachCheckResult> {\n  const count = await checkPasswordBreach(password);\n\n  let severity: BreachCheckResult['severity'];\n  if (count === 0) {\n    severity = 'safe';\n  } else if (count < 10) {\n    severity = 'low';\n  } else if (count < 100) {\n    severity = 'medium';\n  } else if (count < 10000) {\n    severity = 'high';\n  } else {\n    severity = 'critical';\n  }\n\n  return {\n    breached: count > 0,\n    count,\n    severity,\n  };\n}\n\n/**\n * 简单的缓存机制（避免重复检查同一密码）\n */\nconst breachCheckCache = new Map<string, { result: BreachCheckResult; timestamp: number }>();\nconst CACHE_TTL = 7 * 24 * 60 * 60 * 1000; // 7 天\n\n/**\n * 带缓存的密码泄露检测\n */\nexport async function checkPasswordBreachCached(password: string): Promise<BreachCheckResult> {\n  // 1. 计算密码哈希作为缓存 key（不存储明文密码）\n  const cacheKey = await sha1(password);\n\n  // 2. 检查缓存\n  const cached = breachCheckCache.get(cacheKey);\n  if (cached && Date.now() - cached.timestamp < CACHE_TTL) {\n    return cached.result;\n  }\n\n  // 3. 执行检查\n  const result = await checkPasswordBreachWithDetails(password);\n\n  // 4. 存入缓存\n  breachCheckCache.set(cacheKey, {\n    result,\n    timestamp: Date.now(),\n  });\n\n  return result;\n}\n\n/**\n * 清除缓存（用于测试或手动刷新）\n */\nexport function clearBreachCheckCache() {\n  breachCheckCache.clear();\n}\n","/**\n * LRU（最近最少使用）缓存实现\n * 用于缓存解密结果，避免重复解密操作\n */\n\nexport class LRUCache<K, V> {\n  private maxSize: number;\n  private cache: Map<K, V>;\n\n  constructor(maxSize: number = 200) {\n    this.maxSize = maxSize;\n    this.cache = new Map();\n  }\n\n  /**\n   * 获取缓存值\n   * @param key 缓存键\n   * @returns 缓存值，如果不存在则返回 undefined\n   */\n  get(key: K): V | undefined {\n    if (!this.cache.has(key)) {\n      return undefined;\n    }\n\n    // LRU 策略：将访问的项移到最后（最新）\n    const value = this.cache.get(key)!;\n    this.cache.delete(key);\n    this.cache.set(key, value);\n\n    return value;\n  }\n\n  /**\n   * 设置缓存值\n   * @param key 缓存键\n   * @param value 缓存值\n   */\n  set(key: K, value: V): void {\n    // 如果已存在，先删除（为了更新顺序）\n    if (this.cache.has(key)) {\n      this.cache.delete(key);\n    }\n\n    // 如果缓存已满，删除最旧的项（第一个）\n    if (this.cache.size >= this.maxSize) {\n      const firstKey = this.cache.keys().next().value;\n      if (firstKey !== undefined) {\n        this.cache.delete(firstKey);\n      }\n    }\n\n    // 添加新项到末尾（最新）\n    this.cache.set(key, value);\n  }\n\n  /**\n   * 检查缓存中是否存在指定键\n   * @param key 缓存键\n   * @returns 是否存在\n   */\n  has(key: K): boolean {\n    return this.cache.has(key);\n  }\n\n  /**\n   * 删除缓存项\n   * @param key 缓存键\n   */\n  delete(key: K): void {\n    this.cache.delete(key);\n  }\n\n  /**\n   * 清空所有缓存\n   */\n  clear(): void {\n    this.cache.clear();\n  }\n\n  /**\n   * 获取当前缓存大小\n   * @returns 缓存项数量\n   */\n  size(): number {\n    return this.cache.size;\n  }\n\n  /**\n   * 获取缓存容量\n   * @returns 最大缓存项数量\n   */\n  capacity(): number {\n    return this.maxSize;\n  }\n}\n","import { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ReactMarkdown from 'react-markdown';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport rehypeHighlight from 'rehype-highlight';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeKatex from 'rehype-katex';\nimport 'katex/dist/katex.min.css';\nimport { useAuthStore } from '@/stores/auth-store';\nimport { useSettingsStore } from '@/stores/settings-store';\nimport { api } from '@/lib/api';\nimport { crypto } from '@/lib/crypto';\nimport { getEncryptionKey, clearAllKeys, getKeyExpiry, clearEncryptionKey } from '@/lib/key-storage';\nimport { getOrCreateDeviceId } from '@/lib/device';\nimport { useTranslation } from '@/i18n';\nimport { MarkdownErrorBoundary } from '@/components/MarkdownErrorBoundary';\nimport { SimpleMarkdownRenderer } from '@/lib/simple-markdown';\nimport { checkPasswordBreachCached, type BreachCheckResult } from '@/lib/pwned-password';\nimport { LRUCache } from '@/lib/lru-cache';\nimport { useConfirmDialog, type ConfirmDialogOptions } from '@/hooks/useConfirmDialog';\nimport { useToast } from '@/hooks/useToast';\nimport { Toast } from '@/components/Toast';\nimport { isDemoMode, demoNotes, demoPasswords, demoNickname, demoSessions, DEMO_MODE_MESSAGE } from '@/lib/demo-data';\n\ninterface Note {\n  id: string;\n  title: string | null;\n  encrypted_content: string;\n  iv: string;\n  created_at: number;\n  updated_at: number;\n  version: number;\n  content?: string;\n  tags?: string[]; // 标签列表（解密后）\n}\n\ninterface Password {\n  id: string;\n  encrypted_site: string;\n  encrypted_username: string;\n  encrypted_password: string;\n  encrypted_notes?: string;\n  iv: string;\n  created_at: number;\n  updated_at: number;\n  version: number;\n  site?: string;\n  username?: string;\n  password?: string;\n  notes?: string;\n}\n\ninterface ConflictData {\n  noteId: string;\n  localContent: string;\n  localTitle: string;\n  localTags: string[];\n  localVersion: number;\n  serverContent: string;\n  serverTitle: string;\n  serverTags: string[];\n  serverVersion: number;\n  serverEncryptedContent: string;\n  serverIv: string;\n  timestamp: number;\n}\n\n// 行差异类型\ninterface DiffLine {\n  lineNumber: number;\n  content: string;\n  type: 'same' | 'modified' | 'added' | 'removed';\n}\n\n// 改进的行级 diff 算法（减少误判）\nfunction computeLineDiff(localText: string, serverText: string): { localLines: DiffLine[], serverLines: DiffLine[] } {\n  const localLines = localText.split('\\n');\n  const serverLines = serverText.split('\\n');\n\n  // 使用 LCS（最长公共子序列）算法找出真正相同的行\n  const lcs = findLCS(localLines, serverLines);\n  const lcsSet = new Set(lcs.map((item) => `${item.localIndex}-${item.serverIndex}`));\n\n  const localResult: DiffLine[] = [];\n  const serverResult: DiffLine[] = [];\n\n  let localIndex = 0;\n  let serverIndex = 0;\n\n  while (localIndex < localLines.length || serverIndex < serverLines.length) {\n    const isLCS = lcsSet.has(`${localIndex}-${serverIndex}`);\n\n    if (isLCS) {\n      // 相同行\n      localResult.push({ lineNumber: localIndex + 1, content: localLines[localIndex], type: 'same' });\n      serverResult.push({ lineNumber: serverIndex + 1, content: serverLines[serverIndex], type: 'same' });\n      localIndex++;\n      serverIndex++;\n    } else {\n      // 检查是否有后续匹配\n      const hasLocalMatch = lcs.some((item) => item.localIndex === localIndex);\n      const hasServerMatch = lcs.some((item) => item.serverIndex === serverIndex);\n\n      if (!hasLocalMatch && localIndex < localLines.length) {\n        // 本地行在服务器中不存在 → 新增行\n        localResult.push({ lineNumber: localIndex + 1, content: localLines[localIndex], type: 'added' });\n        localIndex++;\n      } else if (!hasServerMatch && serverIndex < serverLines.length) {\n        // 服务器行在本地中不存在 → 删除行\n        serverResult.push({ lineNumber: serverIndex + 1, content: serverLines[serverIndex], type: 'removed' });\n        serverIndex++;\n      } else {\n        // 两边都有但内容不同 → 修改行\n        if (localIndex < localLines.length && serverIndex < serverLines.length) {\n          localResult.push({ lineNumber: localIndex + 1, content: localLines[localIndex], type: 'modified' });\n          serverResult.push({ lineNumber: serverIndex + 1, content: serverLines[serverIndex], type: 'modified' });\n          localIndex++;\n          serverIndex++;\n        } else if (localIndex < localLines.length) {\n          localResult.push({ lineNumber: localIndex + 1, content: localLines[localIndex], type: 'added' });\n          localIndex++;\n        } else if (serverIndex < serverLines.length) {\n          serverResult.push({ lineNumber: serverIndex + 1, content: serverLines[serverIndex], type: 'removed' });\n          serverIndex++;\n        }\n      }\n    }\n  }\n\n  return { localLines: localResult, serverLines: serverResult };\n}\n\n// 简化的 LCS 算法（最长公共子序列）\nfunction findLCS(arr1: string[], arr2: string[]): Array<{ localIndex: number; serverIndex: number }> {\n  const m = arr1.length;\n  const n = arr2.length;\n  const dp: number[][] = Array(m + 1).fill(0).map(() => Array(n + 1).fill(0));\n\n  // 构建 DP 表\n  for (let i = 1; i <= m; i++) {\n    for (let j = 1; j <= n; j++) {\n      if (arr1[i - 1] === arr2[j - 1]) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n\n  // 回溯找出 LCS 的索引对\n  const result: Array<{ localIndex: number; serverIndex: number }> = [];\n  let i = m, j = n;\n  while (i > 0 && j > 0) {\n    if (arr1[i - 1] === arr2[j - 1]) {\n      result.unshift({ localIndex: i - 1, serverIndex: j - 1 });\n      i--;\n      j--;\n    } else if (dp[i - 1][j] > dp[i][j - 1]) {\n      i--;\n    } else {\n      j--;\n    }\n  }\n\n  return result;\n}\n\ntype ViewMode = 'edit' | 'preview';\ntype ActivePanel = 'notes' | 'passwords';\n\n// 解密结果缓存类型\ninterface DecryptedNoteData {\n  content: string;\n  tags: string[];\n}\n\ninterface DecryptedPasswordData {\n  site: string;\n  username: string;\n  password: string;\n  notes: string;\n}\n\nexport default function NotesPage() {\n  const navigate = useNavigate();\n  const { user, token, logout } = useAuthStore();\n  const { theme, language, setTheme, setLanguage, itemsPerPage } = useSettingsStore();\n  const { t } = useTranslation();\n  const { confirm: showConfirm, ConfirmDialog } = useConfirmDialog();\n  const { toast, showToast, hideToast } = useToast();\n\n  // 💡 LRU 解密缓存（最多 200 条）\n  const noteDecryptCacheRef = useRef(new LRUCache<string, DecryptedNoteData>(200));\n  const passwordDecryptCacheRef = useRef(new LRUCache<string, DecryptedPasswordData>(200));\n\n  // 笔记状态\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n  const [noteContent, setNoteContent] = useState('');\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteTags, setNoteTags] = useState<string[]>([]); // 当前笔记的标签\n  const [tagInput, setTagInput] = useState(''); // 标签输入框的值\n\n  const confirmProceed = useCallback(\n    (description: string, options: Partial<ConfirmDialogOptions> = {}) => {\n      return showConfirm({\n        title: options.title ?? t.common.confirm,\n        description,\n        confirmLabel: options.confirmLabel ?? t.common.continue,\n        cancelLabel: options.cancelLabel ?? t.common.cancel,\n        variant: options.variant ?? 'danger',\n      });\n    },\n    [showConfirm, t],\n  );\n\n  // 笔记配额状态\n  const [notesQuota, setNotesQuota] = useState<{\n    allowed: boolean;\n    warning: boolean;\n    message?: string;\n    current: number;\n    softLimit: number;\n    hardLimit: number;\n  } | null>(null);\n  const [notesQuotaDismissed, setNotesQuotaDismissed] = useState(false); // 是否已关闭笔记配额提示\n\n  // 密码状态\n  const [passwords, setPasswords] = useState<Password[]>([]);\n  const [selectedPassword, setSelectedPassword] = useState<Password | null>(null);\n  const [passwordSite, setPasswordSite] = useState('');\n  const [passwordUsername, setPasswordUsername] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n  const [passwordNotes, setPasswordNotes] = useState('');\n\n  // 密码配额状态\n  const [passwordsQuota, setPasswordsQuota] = useState<{\n    allowed: boolean;\n    warning: boolean;\n    message?: string;\n    current: number;\n    softLimit: number;\n    hardLimit: number;\n  } | null>(null);\n  const [passwordsQuotaDismissed, setPasswordsQuotaDismissed] = useState(false); // 是否已关闭密码配额提示\n\n  // 密码生成器配置\n  const [showPasswordGenerator, setShowPasswordGenerator] = useState(false);\n  const [passwordLength, setPasswordLength] = useState(16);\n  const [includeUppercase, setIncludeUppercase] = useState(true);\n  const [includeLowercase, setIncludeLowercase] = useState(true);\n  const [includeDigits, setIncludeDigits] = useState(true);\n  const [includeSymbols, setIncludeSymbols] = useState(true);\n\n  // UI 状态\n  const [activePanel, setActivePanel] = useState<ActivePanel>('notes');\n  const [viewMode, setViewMode] = useState<ViewMode>('edit');\n  const [passwordViewMode, setPasswordViewMode] = useState<ViewMode>('preview');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [copiedRecently, setCopiedRecently] = useState(false); // 最近是否完成复制（用于按钮反馈）\n  const [showNoteEditor, setShowNoteEditor] = useState(false); // 是否显示笔记编辑器\n  const [isFullscreen, setIsFullscreen] = useState(false); // 全屏编辑模式\n  const [showUserMenu, setShowUserMenu] = useState(false); // 用户菜单显示状态\n  const [showNicknameDialog, setShowNicknameDialog] = useState(false); // 昵称编辑对话框显示状态\n  const [editingNickname, setEditingNickname] = useState(''); // 正在编辑的昵称（明文）\n  const [decryptedNickname, setDecryptedNickname] = useState<string>(''); // 解密后的昵称（用于显示）\n  const [savingNickname, setSavingNickname] = useState(false); // 正在保存昵称\n  const [nicknameError, setNicknameError] = useState(''); // 昵称编辑错误提示（对话框内部显示）\n  const [passwordModified, setPasswordModified] = useState(false); // 💡 密码是否被修改（用于返回保护）\n\n  // 密码泄露检测状态\n  const [breachCheckResult, setBreachCheckResult] = useState<BreachCheckResult | null>(null); // 泄露检测结果\n  const [checkingBreach, setCheckingBreach] = useState(false); // 是否正在检查泄露\n\n  // 搜索和过滤状态\n  const [searchQuery, setSearchQuery] = useState(''); // 搜索关键词（实际生效）\n  const [searchQueryPassword, setSearchQueryPassword] = useState(''); // 密码搜索关键词（实际生效）\n  const [searchInput, setSearchInput] = useState(''); // 笔记搜索输入框临时值\n  const [searchInputPassword, setSearchInputPassword] = useState(''); // 密码搜索输入框临时值\n\n  // 💡 分页状态\n  const [noteCurrentPage, setNoteCurrentPage] = useState(1); // 笔记当前页\n  const [passwordCurrentPage, setPasswordCurrentPage] = useState(1); // 密码当前页\n  const [notePaginationMode, setNotePaginationMode] = useState<'client' | 'server'>('client'); // 笔记分页模式\n  const [passwordPaginationMode, setPasswordPaginationMode] = useState<'client' | 'server'>('client'); // 密码分页模式\n  const [totalNotes, setTotalNotes] = useState(0); // 笔记总数（后端分页时使用）\n  const [totalPasswords, setTotalPasswords] = useState(0); // 密码总数（后端分页时使用）\n\n  // 强制登出提示状态\n  const [logoutMessage, setLogoutMessage] = useState<string>(''); // 登出提示文本\n  const [logoutCountdown, setLogoutCountdown] = useState<number>(15); // 倒计时秒数\n  const logoutTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // 版本冲突状态\n  const [showConflictDialog, setShowConflictDialog] = useState(false); // 是否显示冲突对话框\n  const [conflictData, setConflictData] = useState<ConflictData | null>(null); // 冲突数据\n\n  // 会话恢复状态\n  const [showSessionRestoreDialog, setShowSessionRestoreDialog] = useState(false); // 是否显示会话恢复对话框\n  const [restoreMasterPassword, setRestoreMasterPassword] = useState(''); // 恢复会话时输入的主密码\n  const [restoreError, setRestoreError] = useState(''); // 恢复会话时的错误提示\n  const [restoring, setRestoring] = useState(false); // 是否正在恢复会话\n\n  // 数据管理对话框状态\n  const [showDataManagementDialog, setShowDataManagementDialog] = useState(false);\n  const [importing, setImporting] = useState(false);\n  const [exportProgress, setExportProgress] = useState({ current: 0, total: 0 });\n  const [importProgress, setImportProgress] = useState({ current: 0, total: 0 });\n  const [dataManagementMessage, setDataManagementMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // 设备管理对话框状态\n  const [showDevicesDialog, setShowDevicesDialog] = useState(false);\n  const [sessions, setSessions] = useState<Array<{\n    id: string;\n    device_name: string | null;\n    device_type: string | null;\n    browser_name: string | null;\n    os_name: string | null;\n    ip_address: string | null;\n    location: string | null;\n    is_active: boolean;\n    is_current: boolean;\n    created_at: number;\n  }>>([]);\n  const [maxDevices, setMaxDevices] = useState(3);\n  const [devicesLoading, setDevicesLoading] = useState(false);\n  const [devicesError, setDevicesError] = useState('');\n  const [devicesRefreshing, setDevicesRefreshing] = useState(false);\n  const [visibleIPs, setVisibleIPs] = useState<Set<string>>(new Set());\n  const [loggingOut, setLoggingOut] = useState<Set<string>>(new Set());\n  const [devicesSuccessMessage, setDevicesSuccessMessage] = useState('');\n  const [autoUnlockExpiry, setAutoUnlockExpiry] = useState<number | null>(null);\n  const [currentDeviceId, setCurrentDeviceId] = useState('');\n\n  // 加密导出相关状态\n  const [showEncryptedExportDialog, setShowEncryptedExportDialog] = useState(false);\n  const [exportPassword, setExportPassword] = useState('');\n  const [confirmExportPassword, setConfirmExportPassword] = useState('');\n  const [encryptedExporting, setEncryptedExporting] = useState(false);\n  const [exportPasswordError, setExportPasswordError] = useState('');\n\n  // 加密导入相关状态\n  const [showDecryptDialog, setShowDecryptDialog] = useState(false);\n  const [importDecryptPassword, setImportDecryptPassword] = useState('');\n  const [pendingEncryptedFile, setPendingEncryptedFile] = useState<File | null>(null);\n\n  // 自动保存状态\n  type SaveStatus = 'saved' | 'saving' | 'unsaved' | 'error';\n  const [saveStatus, setSaveStatus] = useState<SaveStatus>('saved');\n  const lastSaveTimeRef = useRef<number>(Date.now());\n  const autoSaveTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // 🐛 修复：iOS 16 Safari 兼容性状态\n  const [isRenderingNote, setIsRenderingNote] = useState(false); // 是否正在渲染笔记（防止快速切换）\n\n  // 检测 iOS 版本\n  const detectOldIOSRef = useRef<boolean | null>(null);\n  const isOldIOSSafari = useCallback(() => {\n    if (detectOldIOSRef.current !== null) return detectOldIOSRef.current;\n\n    const ua = navigator.userAgent;\n    const isIOS = /iPad|iPhone|iPod/.test(ua) && !(window as any).MSStream;\n    if (!isIOS) {\n      detectOldIOSRef.current = false;\n      return false;\n    }\n\n    // 检测 iOS 版本 (iOS 16 及以下)\n    const match = ua.match(/OS (\\d+)_/);\n    if (match && match[1]) {\n      const version = parseInt(match[1], 10);\n      detectOldIOSRef.current = version <= 16;\n      return version <= 16;\n    }\n\n    detectOldIOSRef.current = false;\n    return false;\n  }, []);\n\n  // 💡 辅助函数：解密单条笔记（带缓存）\n  const decryptNote = useCallback(async (note: Note): Promise<Note> => {\n    const cacheKey = `${note.id}-${note.updated_at}`;\n    const noteDecryptCache = noteDecryptCacheRef.current;\n\n    // 1. 检查缓存\n    const cached = noteDecryptCache.get(cacheKey);\n    if (cached) {\n      return {\n        ...note,\n        content: cached.content,\n        tags: cached.tags,\n      };\n    }\n\n    // 2. 缓存未命中，执行解密\n    try {\n      const decryptedContent = await crypto.decrypt({\n        ciphertext: note.encrypted_content,\n        iv: note.iv,\n        algorithm: 'AES-256-GCM',\n      }, false);\n\n      // 尝试解析为 JSON（新格式：{ content, tags }）\n      try {\n        const parsed = JSON.parse(decryptedContent);\n\n        if (typeof parsed === 'object' && parsed !== null && 'content' in parsed) {\n          const content = typeof parsed.content === 'string'\n            ? parsed.content\n            : (typeof parsed.content === 'object' ? JSON.stringify(parsed.content) : String(parsed.content));\n          const tags = Array.isArray(parsed.tags) ? parsed.tags : [];\n\n          // 3. 存入缓存\n          noteDecryptCache.set(cacheKey, { content, tags });\n\n          return { ...note, content, tags };\n        }\n\n        // 格式不对，转为字符串\n        const content = typeof parsed === 'string' ? parsed : JSON.stringify(parsed);\n        noteDecryptCache.set(cacheKey, { content, tags: [] });\n        return { ...note, content, tags: [] };\n      } catch (parseErr) {\n        // JSON 解析失败，旧格式（纯文本）\n        const content = typeof decryptedContent === 'string' ? decryptedContent : JSON.stringify(decryptedContent);\n        noteDecryptCache.set(cacheKey, { content, tags: [] });\n        return { ...note, content, tags: [] };\n      }\n    } catch (err) {\n      console.error('[decryptNote] 解密笔记失败:', err);\n      return { ...note, content: t.errors.decryptFailed, tags: [] };\n    }\n  }, [t]);\n\n  // 解密用户昵称（组件挂载时 + user 变化时）\n  useEffect(() => {\n    const decryptUserNickname = async () => {\n      // 🎭 Demo 模式：使用虚拟昵称\n      if (isDemoMode()) {\n        setDecryptedNickname(demoNickname);\n        return;\n      }\n\n      // 如果昵称为空或未设置，直接清空显示\n      if (!user?.encrypted_nickname || user.encrypted_nickname === '' ||\n          !user?.nickname_iv || user.nickname_iv === '' ||\n          !crypto.isInitialized()) {\n        setDecryptedNickname('');\n        return;\n      }\n\n      try {\n        // 构造 EncryptedPayload 对象\n        const payload = {\n          ciphertext: user.encrypted_nickname,\n          iv: user.nickname_iv,\n          algorithm: 'aes-256-gcm'\n        };\n        const decrypted = await crypto.decrypt(payload, false); // 昵称是纯文本，不需要 JSON 解析\n        setDecryptedNickname(decrypted);\n      } catch (err) {\n        console.error('[decryptUserNickname] 解密昵称失败:', err);\n        setDecryptedNickname('');\n      }\n    };\n\n    decryptUserNickname();\n  }, [user?.encrypted_nickname, user?.nickname_iv, crypto.isInitialized()]);\n\n  // 💡 混合分页策略：阈值配置（超过500条切换为后端分页）\n  const PAGINATION_THRESHOLD = 500;\n\n  // 加载笔记列表（混合分页策略）\n  const loadNotes = useCallback(async (page = 1, perPage = itemsPerPage) => {\n    try {\n      setLoading(true);\n\n      // 🎭 Demo 模式：使用模拟数据\n      if (isDemoMode()) {\n        const mockNotes = demoNotes.map((note) => ({\n          ...note,\n          content: note.encrypted_content, // Demo 模式下直接使用明文\n          tags: note.tags || [],\n        }));\n        setNotes(mockNotes);\n        setTotalNotes(mockNotes.length);\n        setNotePaginationMode('client');\n        setLoading(false);\n        return;\n      }\n\n      // 1. 先获取总数\n      const countResponse = await api.getNotesCount();\n      if (!countResponse.success || !countResponse.data) {\n        setError(t.errors.loadNotesFailed);\n        setLoading(false);\n        return;\n      }\n\n      const total = countResponse.data.total;\n      setTotalNotes(total);\n\n      // 2. 根据总数选择分页模式\n      if (total <= PAGINATION_THRESHOLD) {\n        // 📊 小数据量：客户端分页（一次性加载全部）\n        const response = await api.getNotes(total || 1000, 0);\n        if (!response.success || !response.data) {\n          setError(t.errors.loadNotesFailed);\n          setLoading(false);\n          return;\n        }\n\n        // 💡 保存配额状态\n        if ((response.data as any).quota) {\n          setNotesQuota((response.data as any).quota);\n\n          // 检查用户是否已关闭此配额提示\n          const dismissedKey = `quota-dismissed-notes-${user!.user_id}`;\n          const dismissed = localStorage.getItem(dismissedKey);\n          if (dismissed) {\n            setNotesQuotaDismissed(true);\n          } else {\n            setNotesQuotaDismissed(false); // 新的配额警告，重新显示\n          }\n        }\n\n        // 💡 使用缓存解密笔记\n        const decryptedNotes = await Promise.all(\n          response.data.notes.map((note: Note) => decryptNote(note))\n        );\n\n        // 最终验证：确保所有 content 都是字符串\n        const safeNotes = decryptedNotes.map(note => ({\n          ...note,\n          content: typeof note.content === 'string' ? note.content : JSON.stringify(note.content),\n          tags: Array.isArray(note.tags) ? note.tags : [],\n        }));\n\n        setNotes(safeNotes);\n        setNotePaginationMode('client');\n      } else {\n        // 📊 大数据量：后端分页（按需加载）\n        const offset = (page - 1) * perPage;\n        const response = await api.getNotes(perPage, offset);\n        if (!response.success || !response.data) {\n          setError(t.errors.loadNotesFailed);\n          setLoading(false);\n          return;\n        }\n\n        // 💡 保存配额状态\n        if ((response.data as any).quota) {\n          setNotesQuota((response.data as any).quota);\n\n          // 检查用户是否已关闭此配额提示\n          const dismissedKey = `quota-dismissed-notes-${user!.user_id}`;\n          const dismissed = localStorage.getItem(dismissedKey);\n          if (dismissed) {\n            setNotesQuotaDismissed(true);\n          } else {\n            setNotesQuotaDismissed(false); // 新的配额警告，重新显示\n          }\n        }\n\n        // 💡 使用缓存解密笔记\n        const decryptedNotes = await Promise.all(\n          response.data.notes.map((note: Note) => decryptNote(note))\n        );\n\n        // 最终验证：确保所有 content 都是字符串\n        const safeNotes = decryptedNotes.map(note => ({\n          ...note,\n          content: typeof note.content === 'string' ? note.content : JSON.stringify(note.content),\n          tags: Array.isArray(note.tags) ? note.tags : [],\n        }));\n\n        setNotes(safeNotes);\n        setNotePaginationMode('server');\n      }\n    } catch (err: any) {\n      setError(err.message || t.errors.loadNotesFailed);\n    } finally {\n      setLoading(false);\n    }\n  }, [t, itemsPerPage, decryptNote]);\n\n  // 💡 辅助函数：解密单条密码（带缓存）\n  const decryptPassword = useCallback(async (pwd: Password): Promise<Password> => {\n    const cacheKey = `${pwd.id}-${pwd.updated_at}`;\n    const passwordDecryptCache = passwordDecryptCacheRef.current;\n\n    // 1. 检查缓存\n    const cached = passwordDecryptCache.get(cacheKey);\n    if (cached) {\n      return {\n        ...pwd,\n        site: cached.site,\n        username: cached.username,\n        password: cached.password,\n        notes: cached.notes,\n      };\n    }\n\n    // 2. 缓存未命中，执行解密\n    try {\n      const decryptedJson = await crypto.decrypt(\n        {\n          ciphertext: pwd.encrypted_site,\n          iv: pwd.iv,\n          algorithm: 'AES-256-GCM',\n        },\n        false\n      );\n\n      try {\n        // 尝试解析为 JSON（新格式）\n        const passwordData = JSON.parse(decryptedJson);\n\n        const decryptedData = {\n          site: String(passwordData.site || ''),\n          username: String(passwordData.username || ''),\n          password: String(passwordData.password || ''),\n          notes: String(passwordData.notes || ''),\n        };\n\n        // 3. 存入缓存\n        passwordDecryptCache.set(cacheKey, decryptedData);\n\n        return { ...pwd, ...decryptedData };\n      } catch {\n        // 旧格式，分别解密各字段\n        const username = await crypto.decrypt(\n          { ciphertext: pwd.encrypted_username, iv: pwd.iv, algorithm: 'AES-256-GCM' },\n          false\n        );\n        const password = await crypto.decrypt(\n          { ciphertext: pwd.encrypted_password, iv: pwd.iv, algorithm: 'AES-256-GCM' },\n          false\n        );\n\n        let notes = '';\n        if (pwd.encrypted_notes) {\n          try {\n            notes = await crypto.decrypt(\n              { ciphertext: pwd.encrypted_notes, iv: pwd.iv, algorithm: 'AES-256-GCM' },\n              false\n            );\n          } catch {}\n        }\n\n        const decryptedData = {\n          site: decryptedJson,\n          username,\n          password,\n          notes,\n        };\n\n        // 3. 存入缓存\n        passwordDecryptCache.set(cacheKey, decryptedData);\n\n        return { ...pwd, ...decryptedData };\n      }\n    } catch (err) {\n      console.error('[decryptPassword] 解密密码失败:', err);\n      return {\n        ...pwd,\n        site: '[解密失败]',\n        username: '[解密失败]',\n        password: '[解密失败]',\n        notes: '',\n      };\n    }\n  }, []);\n\n  // 加载密码列表（混合分页策略）\n  const loadPasswords = useCallback(async (page = 1, perPage = itemsPerPage) => {\n    try {\n      // 🎭 Demo 模式：使用模拟数据\n      if (isDemoMode()) {\n        const mockPasswords = demoPasswords.map((pwd) => ({\n          ...pwd,\n          site: pwd.encrypted_site, // Demo 模式下直接使用明文\n          username: pwd.encrypted_username,\n          password: pwd.encrypted_password,\n          notes: pwd.encrypted_notes,\n        }));\n        setPasswords(mockPasswords);\n        setTotalPasswords(mockPasswords.length);\n        setPasswordPaginationMode('client');\n        return;\n      }\n\n      // 1. 先获取总数\n      const countResponse = await api.getPasswordsCount();\n      if (!countResponse.success || !countResponse.data) {\n        setError(t.errors.loadPasswordsFailed);\n        return;\n      }\n\n      const total = countResponse.data.total;\n      setTotalPasswords(total);\n\n      // 2. 根据总数选择分页模式\n      if (total <= PAGINATION_THRESHOLD) {\n        // 📊 小数据量：客户端分页（一次性加载全部）\n        const response = await api.getPasswords(total || 1000, 0);\n        if (!response.success || !response.data) {\n          setError(t.errors.loadPasswordsFailed);\n          return;\n        }\n\n        // 💡 保存配额状态\n        if ((response.data as any).quota) {\n          setPasswordsQuota((response.data as any).quota);\n\n          // 检查用户是否已关闭此配额提示\n          const dismissedKey = `quota-dismissed-passwords-${user!.user_id}`;\n          const dismissed = localStorage.getItem(dismissedKey);\n          if (dismissed) {\n            setPasswordsQuotaDismissed(true);\n          } else {\n            setPasswordsQuotaDismissed(false); // 新的配额警告，重新显示\n          }\n        }\n\n        // 💡 使用缓存解密密码\n        const decryptedPasswords = await Promise.all(\n          response.data.passwords.map((pwd: Password) => decryptPassword(pwd))\n        );\n\n        setPasswords(decryptedPasswords);\n        setPasswordPaginationMode('client');\n      } else {\n        // 📊 大数据量：后端分页（按需加载）\n        const offset = (page - 1) * perPage;\n        const response = await api.getPasswords(perPage, offset);\n        if (!response.success || !response.data) {\n          setError(t.errors.loadPasswordsFailed);\n          return;\n        }\n\n        // 💡 保存配额状态\n        if ((response.data as any).quota) {\n          setPasswordsQuota((response.data as any).quota);\n\n          // 检查用户是否已关闭此配额提示\n          const dismissedKey = `quota-dismissed-passwords-${user!.user_id}`;\n          const dismissed = localStorage.getItem(dismissedKey);\n          if (dismissed) {\n            setPasswordsQuotaDismissed(true);\n          } else {\n            setPasswordsQuotaDismissed(false); // 新的配额警告，重新显示\n          }\n        }\n\n        // 💡 使用缓存解密密码\n        const decryptedPasswords = await Promise.all(\n          response.data.passwords.map((pwd: Password) => decryptPassword(pwd))\n        );\n\n        setPasswords(decryptedPasswords);\n        setPasswordPaginationMode('server');\n      }\n    } catch (err: any) {\n      setError(err.message || t.errors.loadPasswordsFailed);\n    }\n  }, [t, itemsPerPage, decryptPassword]);\n\n  // 设置 API 401 未授权处理器（会话失效时自动登出）\n  useEffect(() => {\n    api.setUnauthorizedHandler((errorCode: string) => {\n      // 根据错误码显示不同的提示信息\n      let message = '';\n      if (errorCode === 'SESSION_INVALID') {\n        // 会话被登出（其他设备登录或超过设备数量限制）\n        message = t.errors.sessionRevokedTitle;\n      } else {\n        // 默认：Token 过期\n        message = t.errors.sessionExpiredTitle;\n      }\n\n      // 设置登出提示\n      setLogoutMessage(message);\n      setLogoutCountdown(15);\n\n      // 启动倒计时\n      let countdown = 15;\n      logoutTimerRef.current = setInterval(() => {\n        countdown -= 1;\n        setLogoutCountdown(countdown);\n\n        if (countdown <= 0) {\n          // 倒计时结束，执行登出\n          if (logoutTimerRef.current) {\n            clearInterval(logoutTimerRef.current);\n          }\n          handleForceLogout();\n        }\n      }, 1000);\n    });\n\n    // 清理定时器\n    return () => {\n      if (logoutTimerRef.current) {\n        clearInterval(logoutTimerRef.current);\n      }\n    };\n  }, [logout, navigate, t]);\n\n  // 执行强制登出\n  const handleForceLogout = useCallback(async () => {\n    // 清理加密密钥和认证状态\n    crypto.clear();\n    await clearAllKeys(); // 清除 IndexedDB 中的持久化密钥\n    logout();\n    // 跳转到登录页\n    navigate('/login');\n  }, [logout, navigate]);\n\n  // 初始化加载\n  useEffect(() => {\n    const initializeApp = async () => {\n      // 🎭 Demo 模式：跳过加密检查，直接加载数据\n      if (isDemoMode()) {\n        loadNotes();\n        loadPasswords();\n        return;\n      }\n\n      if (!crypto.isInitialized()) {\n        // 🔄 会话恢复：检测到加密密钥丢失（PWA 重启/页面刷新），但 token 还有效\n        if (token && user) {\n          // 💡 优先尝试从 IndexedDB 自动解锁\n          const deviceId = getOrCreateDeviceId();\n          const persistedKey = await getEncryptionKey(deviceId);\n\n          if (persistedKey) {\n            // ✅ 从 IndexedDB 恢复加密密钥\n            crypto.setEncryptionKey(persistedKey);\n\n            // 🔍 验证 token 是否仍然有效\n            try {\n              const heartbeatResponse = await api.heartbeat();\n\n              if (!heartbeatResponse.success) {\n                // Token 已过期，清除密钥并显示会话恢复对话框\n                crypto.clear();\n                await clearAllKeys(); // 清除过期的持久化密钥\n                setShowSessionRestoreDialog(true);\n                return;\n              }\n\n              // ✅ Token 有效，继续加载数据\n              loadNotes();\n              loadPasswords();\n              return;\n            } catch (err) {\n              // 网络错误或其他问题，仍然尝试加载（可能是离线状态）\n              console.warn('[会话恢复] 心跳检测失败，但继续加载数据', err);\n              loadNotes();\n              loadPasswords();\n              return;\n            }\n          }\n\n          // ❌ IndexedDB 中没有有效密钥，显示会话恢复对话框\n          setShowSessionRestoreDialog(true);\n          return;\n        }\n\n        // 如果连 token 都没有，说明用户确实需要重新登录\n        crypto.clear();\n        logout();\n        navigate('/login');\n        return;\n      }\n\n      loadNotes();\n      loadPasswords();\n    };\n\n    initializeApp();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // 💡 心跳检测：定期验证会话是否有效（60秒间隔）\n  useEffect(() => {\n    // 只有在加密密钥已初始化时才启动心跳检测\n    if (!crypto.isInitialized()) {\n      return;\n    }\n\n    const HEARTBEAT_INTERVAL = 60000; // 60秒\n\n    const heartbeatTimer = setInterval(async () => {\n      // 再次检查 crypto 是否已初始化（防止在定时器执行时 crypto 被清理）\n      if (!crypto.isInitialized()) {\n        return;\n      }\n\n      try {\n        const response = await api.heartbeat();\n        if (!response.success) {\n          // 401 错误会自动触发 onUnauthorized 回调，显示登出提示\n        }\n      } catch (error) {\n        // 忽略网络错误，避免误判\n        console.error('[心跳检测] 失败', error);\n      }\n    }, HEARTBEAT_INTERVAL);\n\n    return () => {\n      clearInterval(heartbeatTimer);\n    };\n  }, [crypto.isInitialized()]); // 依赖 crypto 初始化状态，crypto 初始化后才启动定时器\n\n  // 🔐 安全增强：60分钟无活动自动清理缓存并登出\n  useEffect(() => {\n    // 只有在加密密钥已初始化时才启动自动清理\n    if (!crypto.isInitialized()) {\n      return;\n    }\n\n    const INACTIVITY_TIMEOUT = 60 * 60 * 1000; // 60分钟\n    let inactivityTimer: NodeJS.Timeout;\n\n    const resetTimer = () => {\n      // 清除之前的定时器\n      if (inactivityTimer) {\n        clearTimeout(inactivityTimer);\n      }\n\n      // 设置新的定时器\n      inactivityTimer = setTimeout(async () => {\n        // 清空所有缓存\n        noteDecryptCacheRef.current.clear();\n        passwordDecryptCacheRef.current.clear();\n        crypto.clear();\n\n        // 清除持久化密钥\n        await clearAllKeys();\n\n        // 登出并跳转到登录页\n        logout();\n        navigate('/login');\n\n        // 显示提示信息\n        console.log('[安全] 已自动登出（60分钟无活动）');\n      }, INACTIVITY_TIMEOUT);\n    };\n\n    // 监听所有用户活动事件\n    const events = ['mousedown', 'keydown', 'scroll', 'touchstart'];\n    events.forEach((event) => window.addEventListener(event, resetTimer));\n\n    // 初始化定时器\n    resetTimer();\n\n    // 清理函数\n    return () => {\n      if (inactivityTimer) {\n        clearTimeout(inactivityTimer);\n      }\n      events.forEach((event) => window.removeEventListener(event, resetTimer));\n    };\n  }, [crypto.isInitialized(), logout, navigate]);\n\n  // 🐛 修复：监听 ErrorBoundary 的\"切换到编辑模式\"事件\n  useEffect(() => {\n    const handleSwitchToEditMode = () => {\n      if (selectedNote && viewMode === 'preview') {\n        setViewMode('edit');\n        console.log('[NotesPage] ErrorBoundary 触发切换到编辑模式');\n      }\n    };\n\n    window.addEventListener('switchToEditMode', handleSwitchToEditMode);\n    return () => window.removeEventListener('switchToEditMode', handleSwitchToEditMode);\n  }, [selectedNote, viewMode]);\n\n  // 💡 优化：自动保存逻辑（5分钟防抖，静默执行）\n  useEffect(() => {\n    // 清除之前的定时器\n    if (autoSaveTimerRef.current) {\n      clearTimeout(autoSaveTimerRef.current);\n    }\n\n    // 不在编辑状态或没有选中笔记，不触发自动保存\n    if (!selectedNote || viewMode !== 'edit' || activePanel !== 'notes') {\n      return;\n    }\n\n    // 💡 不再设置 'unsaved' 状态，保持显示上次保存的时间戳\n    // setSaveStatus('unsaved'); // 删除这行，让时间戳持续显示\n\n    const triggerAutoSave = async () => {\n      if (!selectedNote || !noteContent.trim() || viewMode !== 'edit') {\n        return;\n      }\n      await handleSaveNote(true);\n    };\n\n    // 设置 5 分钟防抖定时器\n    const autoSaveDelay = 300000; // 5分钟 = 300000毫秒\n    autoSaveTimerRef.current = setTimeout(() => {\n      triggerAutoSave();\n    }, autoSaveDelay);\n\n    // 清理函数\n    return () => {\n      if (autoSaveTimerRef.current) {\n        clearTimeout(autoSaveTimerRef.current);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [noteContent, noteTitle, selectedNote, viewMode, activePanel]);\n\n  // 💡 笔记搜索按钮/Enter 处理（手动触发搜索）\n  const handleNoteSearchSubmit = useCallback(() => {\n    setSearchQuery(searchInput);\n  }, [searchInput]);\n\n  // 💡 密码搜索按钮/Enter 处理（手动触发搜索）\n  const handlePasswordSearchSubmit = useCallback(() => {\n    setSearchQueryPassword(searchInputPassword);\n  }, [searchInputPassword]);\n\n  // 💡 混合分页：搜索时自动加载全部数据\n  useEffect(() => {\n    const handleNoteSearch = async () => {\n      if (searchQuery.trim()) {\n        // 有搜索：加载全部笔记到内存，切换到客户端分页\n        if (totalNotes > PAGINATION_THRESHOLD && notePaginationMode === 'server') {\n          setLoading(true);\n          try {\n            const response = await api.getNotes(totalNotes || 1000, 0);\n            if (response.success && response.data) {\n              const decryptedNotes = await Promise.all(\n                response.data.notes.map((note: Note) => decryptNote(note))\n              );\n              const safeNotes = decryptedNotes.map(note => ({\n                ...note,\n                content: typeof note.content === 'string' ? note.content : JSON.stringify(note.content),\n                tags: Array.isArray(note.tags) ? note.tags : [],\n              }));\n              setNotes(safeNotes);\n              setNotePaginationMode('client');\n            }\n          } catch (err: any) {\n            setError(err.message || t.errors.loadNotesFailed);\n          } finally {\n            setLoading(false);\n          }\n        }\n        setNoteCurrentPage(1);\n      } else {\n        // 无搜索：如果当前是客户端模式且数据量大，恢复后端分页\n        if (totalNotes > PAGINATION_THRESHOLD && notePaginationMode === 'client') {\n          loadNotes(1, itemsPerPage);\n        }\n        setNoteCurrentPage(1);\n      }\n    };\n    handleNoteSearch();\n  }, [searchQuery, totalNotes, notePaginationMode, itemsPerPage, decryptNote, t, loadNotes]);\n\n  useEffect(() => {\n    const handlePasswordSearch = async () => {\n      if (searchQueryPassword.trim()) {\n        // 有搜索：加载全部密码到内存，切换到客户端分页\n        if (totalPasswords > PAGINATION_THRESHOLD && passwordPaginationMode === 'server') {\n          setLoading(true);\n          try {\n            const response = await api.getPasswords(totalPasswords || 1000, 0);\n            if (response.success && response.data) {\n              const decryptedPasswords = await Promise.all(\n                response.data.passwords.map((pwd: Password) => decryptPassword(pwd))\n              );\n              setPasswords(decryptedPasswords);\n              setPasswordPaginationMode('client');\n            }\n          } catch (err: any) {\n            setError(err.message || t.errors.loadPasswordsFailed);\n          } finally {\n            setLoading(false);\n          }\n        }\n        setPasswordCurrentPage(1);\n      } else {\n        // 无搜索：如果当前是客户端模式且数据量大，恢复后端分页\n        if (totalPasswords > PAGINATION_THRESHOLD && passwordPaginationMode === 'client') {\n          loadPasswords(1, itemsPerPage);\n        }\n        setPasswordCurrentPage(1);\n      }\n    };\n    handlePasswordSearch();\n  }, [searchQueryPassword, totalPasswords, passwordPaginationMode, itemsPerPage, decryptPassword, t, loadPasswords]);\n\n  // 页面卸载前保存和安全退出提醒\n  useEffect(() => {\n    const handleBeforeUnload = async (e: BeforeUnloadEvent) => {\n      // 1. 检查标签输入框是否有未生成的内容\n      if (tagInput.trim()) {\n        e.preventDefault();\n        e.returnValue = '';\n        return;\n      }\n\n      // 2. 如果有未保存的笔记，尝试保存并提示\n      if (selectedNote && activePanel === 'notes' && saveStatus === 'unsaved') {\n        // 尝试同步保存（浏览器可能会阻止异步操作）\n        if (selectedNote && noteContent.trim() && viewMode === 'edit') {\n          await handleSaveNote(true);\n        }\n        e.preventDefault();\n        e.returnValue = '';\n        return;\n      }\n\n      // 3. 用户已登录时，提醒应该点击\"退出登录\"按钮\n      // 注意：现代浏览器无法自定义提示文本，会显示通用警告\n      // 提示：\"确定要离开此网站吗？系统可能不会保存您所做的更改。\"\n      if (user && token) {\n        e.preventDefault();\n        e.returnValue = '';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedNote, activePanel, saveStatus, noteContent, viewMode, user, token, tagInput]);\n\n  // 选择笔记\n  const handleSelectNote = async (note: Note) => {\n    // 🐛 修复：防止重复点击导致渲染混乱\n    if (isRenderingNote) {\n      console.log('[handleSelectNote] 正在渲染笔记，忽略新的点击');\n      return;\n    }\n\n    // ⚠️ 第一优先级：如果点击的是已选中的笔记，走返回逻辑（而非切换逻辑）\n    if (selectedNote?.id === note.id && activePanel === 'notes') {\n      // 返回前检查标签输入框是否有未生成的内容\n      if (tagInput.trim()) {\n        const confirmMessage = language === 'zh-CN'\n          ? '标签输入框中有未生成的内容，返回后将丢失。是否继续？'\n          : 'You have unsaved tag input. It will be lost if you go back. Continue?';\n        const confirmed = await confirmProceed(confirmMessage);\n        if (!confirmed) {\n          return; // 用户取消返回\n        }\n      }\n\n      // 返回前检查未保存更改\n      if (saveStatus === 'unsaved' && noteContent.trim()) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消返回\n        }\n      }\n\n      // 执行返回：取消选中，清空所有状态\n      setSelectedNote(null);\n      setNoteTitle('');\n      setNoteContent('');\n      setNoteTags([]); // 清空标签\n      setTagInput(''); // 清空标签输入框\n      setShowNoteEditor(false);\n      setSaveStatus('saved'); // 重置保存状态\n      setIsRenderingNote(false);\n      return;\n    }\n\n    // ⚠️ 第二优先级：不同笔记，走切换逻辑\n    // 检查标签输入框是否有未生成的内容\n    if (tagInput.trim()) {\n      const confirmMessage = language === 'zh-CN'\n        ? '标签输入框中有未生成的内容，切换笔记后将丢失。是否继续？'\n        : 'You have unsaved tag input. It will be lost if you switch notes. Continue?';\n      const confirmed = await confirmProceed(confirmMessage);\n      if (!confirmed) {\n        return; // 用户取消切换\n      }\n    }\n\n    // 检查当前笔记是否有未保存的更改（无论编辑还是预览模式）\n    if (selectedNote && saveStatus === 'unsaved' && noteContent.trim()) {\n      const confirmed = await confirmProceed(t.errors.unsavedChangesSwitch);\n      if (!confirmed) {\n        return; // 用户取消切换\n      }\n    }\n\n    try {\n      // 🐛 修复：iOS 16 Safari 性能优化 - 渐进式延迟渲染\n      setIsRenderingNote(true);\n      setError(''); // 清空之前的错误\n\n      // 先设置基本状态（不触发渲染）\n      setActivePanel('notes');\n      setSelectedPassword(null);\n      setShowNoteEditor(true);\n      setViewMode('preview'); // 自动进入预览模式\n      setSaveStatus('saved');\n      lastSaveTimeRef.current = note.updated_at * 1000; // 后端存储的是秒，需要转换为毫秒\n\n      // 🐛 优化：分片渲染策略\n      const oldIOSDelay = isOldIOSSafari() ? 300 : 0; // iOS 16 延迟 300ms（优化前 100ms）\n\n      // 🔧 强制类型安全：确保 content 和 tags 都是正确的类型\n      let safeContent: string;\n      let safeTags: string[];\n\n      try {\n        // 如果 content 是对象，尝试提取正确的值\n        if (typeof note.content === 'object' && note.content !== null) {\n          const obj = note.content as any;\n          if ('content' in obj && typeof obj.content === 'string') {\n            safeContent = obj.content;\n            safeTags = Array.isArray(obj.tags) ? obj.tags : [];\n          } else {\n            safeContent = JSON.stringify(note.content);\n            safeTags = [];\n          }\n        } else {\n          safeContent = String(note.content || '');\n          safeTags = Array.isArray(note.tags) ? note.tags : [];\n        }\n      } catch (err) {\n        console.error('[handleSelectNote] 内容类型转换失败', err);\n        safeContent = '';\n        safeTags = [];\n      }\n\n      // 第一步：先设置 note 对象（显示加载骨架屏）\n      setTimeout(() => {\n        setSelectedNote({ ...note, content: safeContent, tags: safeTags });\n        setNoteTitle(note.title || '');\n        setTagInput(''); // ⚠️ 清空标签输入框\n\n        // 第二步：延迟设置内容，给 Safari 更多时间准备\n        setTimeout(() => {\n          try {\n            setNoteContent(safeContent);\n            setNoteTags(safeTags);\n          } catch (err) {\n            console.error('[handleSelectNote] 设置笔记内容失败', err);\n            setError('笔记渲染失败，内容过于复杂。请尝试编辑模式查看。');\n          } finally {\n            // 渲染完成后解除锁定（延迟 500ms 确保 DOM 更新完成）\n            setTimeout(() => setIsRenderingNote(false), 500);\n          }\n        }, oldIOSDelay); // iOS 16 再延迟 300ms\n      }, oldIOSDelay); // iOS 16 第一次延迟 300ms\n    } catch (err) {\n      console.error('[handleSelectNote] 选择笔记失败', err);\n      setError('加载笔记失败，请重试');\n      setIsRenderingNote(false);\n    }\n  };\n\n  // 创建新笔记\n  const handleNewNote = async () => {\n    // 确保 noteContent 是字符串\n    const content = String(noteContent || '');\n\n    // 检查标签输入框是否有未生成的内容\n    if (tagInput.trim()) {\n      const confirmMessage = language === 'zh-CN'\n        ? '标签输入框中有未生成的内容，创建新笔记后将丢失。是否继续？'\n        : 'You have unsaved tag input. It will be lost if you create a new note. Continue?';\n      const confirmed = await confirmProceed(confirmMessage);\n      if (!confirmed) {\n        return; // 用户取消创建新笔记\n      }\n    }\n\n    // ⚠️ 关键修复：检查当前是否有未保存的更改（无论编辑还是预览模式）\n    // 移除 viewMode === 'edit' 检查\n    if (selectedNote && saveStatus === 'unsaved' && content.trim()) {\n      const confirmed = await confirmProceed(t.errors.unsavedChangesNew);\n      if (!confirmed) {\n        return; // 用户取消创建新笔记\n      }\n    }\n\n    setActivePanel('notes');\n    setSelectedNote(null);\n    setNoteTitle('');\n    setNoteContent('');\n    setNoteTags([]); // 清空标签\n    setTagInput(''); // 清空标签输入\n    setShowNoteEditor(true); // 显示编辑器\n    setSelectedPassword(null);\n    setError('');\n    setViewMode('edit');\n    // 新建笔记不显示保存状态（没有时间戳）\n    setSaveStatus('saved');\n    lastSaveTimeRef.current = 0; // 清空时间戳\n  };\n\n  // 关闭配额提示\n  const handleDismissNotesQuota = () => {\n    const dismissedKey = `quota-dismissed-notes-${user!.user_id}`;\n    localStorage.setItem(dismissedKey, 'true');\n    setNotesQuotaDismissed(true);\n  };\n\n  const handleDismissPasswordsQuota = () => {\n    const dismissedKey = `quota-dismissed-passwords-${user!.user_id}`;\n    localStorage.setItem(dismissedKey, 'true');\n    setPasswordsQuotaDismissed(true);\n  };\n\n  // 保存笔记\n  const handleSaveNote = async (isAutoSave = false) => {\n    // 🛡️ 防止重复保存（前端第一层防护）\n    if (saving) {\n      console.warn('[handleSaveNote] 保存中，忽略重复请求');\n      return;\n    }\n\n    // 确保 noteContent 是字符串\n    const content = String(noteContent || '');\n\n    if (!content.trim()) {\n      if (!isAutoSave) {\n        setError(t.errors.noteContentEmpty);\n      }\n      return;\n    }\n\n    // 💡 自动添加未按回车的标签\n    let finalTags = [...noteTags];\n    if (tagInput.trim() && !finalTags.includes(tagInput.trim())) {\n      finalTags.push(tagInput.trim());\n      setNoteTags(finalTags);\n      setTagInput(''); // 清空输入框\n    }\n\n    try {\n      setSaving(true);\n      if (isAutoSave) {\n        setSaveStatus('saving');\n      } else {\n        setError('');\n      }\n\n      const encrypted = await crypto.encrypt(JSON.stringify({\n        content: content,\n        tags: finalTags,\n      }));\n\n      if (selectedNote) {\n        const response = await api.updateNote(selectedNote.id, {\n          title: noteTitle || undefined,\n          encrypted_content: encrypted.ciphertext,\n          iv: encrypted.iv,\n          version: selectedNote.version,\n        });\n\n        if (!response.success || !response.data) {\n          // 🔥 检测版本冲突\n          if (response.error?.code === 'VERSION_CONFLICT') {\n            // 1. 暂停自动保存（避免进一步冲突）\n            if (autoSaveTimerRef.current) {\n              clearTimeout(autoSaveTimerRef.current);\n            }\n\n            // 3. 获取服务器最新版本\n            try {\n              const serverNoteResponse = await api.getNote(selectedNote.id);\n              if (serverNoteResponse.success && serverNoteResponse.data) {\n                const serverNote = serverNoteResponse.data;\n\n                // 4. 解密服务器版本内容\n                const decryptedServerContent = await crypto.decrypt({\n                  ciphertext: serverNote.encrypted_content,\n                  iv: serverNote.iv,\n                  algorithm: 'AES-256-GCM',\n                });\n\n                // 5. 解析服务器版本的内容和标签\n                let serverContent = decryptedServerContent;\n                let serverTags: string[] = [];\n                try {\n                  const parsed = JSON.parse(decryptedServerContent);\n                  if (typeof parsed === 'object' && parsed.content !== undefined) {\n                    serverContent = parsed.content;\n                    serverTags = parsed.tags || [];\n                  }\n                } catch {\n                  // 旧格式，纯文本内容\n                }\n\n                // 6. 设置冲突数据并显示对话框\n                setConflictData({\n                  noteId: selectedNote.id,\n                  localContent: noteContent,\n                  localTitle: noteTitle,\n                  localTags: noteTags,\n                  localVersion: selectedNote.version,\n                  serverContent: serverContent,\n                  serverTitle: serverNote.title || '',\n                  serverTags: serverTags,\n                  serverVersion: serverNote.version,\n                  serverEncryptedContent: serverNote.encrypted_content,\n                  serverIv: serverNote.iv,\n                  timestamp: Date.now()\n                });\n                setShowConflictDialog(true);\n                setSaveStatus('error');\n              }\n            } catch (fetchError) {\n              console.error('Failed to fetch server version:', fetchError);\n              setError(t.errors.saveNoteFailed + ' (无法获取服务器版本)');\n            }\n\n            setSaving(false);\n            return;\n          }\n\n          // 🛡️ 速率限制错误（友好提示）\n          if (response.error?.code === 'NOTE_UPDATE_RATE_LIMIT') {\n            const remainingSeconds = (response.error as any).remainingSeconds || 60;\n            const message = language === 'zh-CN'\n              ? `${t.errors.rateLimitMessage}\\n\\n${t.errors.rateLimitWait.replace('{seconds}', String(remainingSeconds))}`\n              : `${t.errors.rateLimitMessage}\\n\\n${t.errors.rateLimitWait.replace('{seconds}', String(remainingSeconds))}`;\n            setError(message);\n            setSaving(false);\n            return;\n          }\n\n          // 其他错误的处理\n          if (isAutoSave) {\n            setSaveStatus('error');\n            console.error('Auto-save failed:', response.error?.message);\n          } else {\n            setError(response.error?.message || t.errors.saveNoteFailed);\n          }\n          setSaving(false);\n          return;\n        }\n\n        setNotes((prev) =>\n          prev.map((note) =>\n            note.id === selectedNote.id\n              ? { ...response.data, content: content, tags: finalTags }\n              : note\n          )\n        );\n        setSelectedNote({ ...response.data, content: content, tags: finalTags });\n\n        if (isAutoSave) {\n          setSaveStatus('saved');\n          lastSaveTimeRef.current = Date.now();\n          // 自动保存成功提示\n          showToast(t.common.autoSaved, { variant: 'info', duration: 2000 });\n        } else {\n          // 手动保存成功：同样更新状态和时间戳\n          setSaveStatus('saved');\n          lastSaveTimeRef.current = Date.now();\n          showToast(t.common.saved, { variant: 'success' });\n        }\n      } else {\n        // 新建笔记不自动保存\n        if (isAutoSave) {\n          setSaving(false);\n          return;\n        }\n\n        const response = await api.createNote({\n          title: noteTitle || undefined,\n          encrypted_content: encrypted.ciphertext,\n          iv: encrypted.iv,\n        });\n\n        if (!response.success || !response.data) {\n          setError(response.error?.message || t.errors.createNoteFailed);\n          setSaving(false);\n          return;\n        }\n\n        const newNote = { ...response.data, content: content, tags: finalTags };\n        setNotes((prev) => [newNote, ...prev]);\n        setSelectedNote(newNote);\n\n        // 手动保存成功：更新状态和时间戳\n        setSaveStatus('saved');\n        lastSaveTimeRef.current = Date.now();\n        showToast(t.common.saved, { variant: 'success' });\n      }\n    } catch (err: any) {\n      if (isAutoSave) {\n        setSaveStatus('error');\n        console.error('Auto-save error:', err);\n      } else {\n        setError(err.message || t.errors.saveNoteFailed);\n      }\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 🔥 冲突解决：使用本地版本（强制覆盖服务器）\n  const handleUseLocalVersion = async () => {\n    if (!conflictData) return;\n\n    try {\n      setSaving(true);\n\n      // 使用服务器最新版本号强制覆盖\n      const encrypted = await crypto.encrypt(JSON.stringify({\n        content: conflictData.localContent,\n        tags: conflictData.localTags,\n      }));\n      const response = await api.updateNote(conflictData.noteId, {\n        title: conflictData.localTitle || undefined,\n        encrypted_content: encrypted.ciphertext,\n        iv: encrypted.iv,\n        version: conflictData.serverVersion, // 使用服务器最新版本号\n      });\n\n      if (response.success && response.data) {\n        // 更新本地状态\n        const updatedNote = { ...response.data, content: conflictData.localContent, tags: conflictData.localTags };\n        setNotes((prev) =>\n          prev.map((note) =>\n            note.id === conflictData.noteId ? updatedNote : note\n          )\n        );\n        setSelectedNote(updatedNote);\n        setNoteContent(conflictData.localContent);\n        setNoteTitle(conflictData.localTitle);\n        setNoteTags(conflictData.localTags);\n\n        // 关闭对话框\n        setShowConflictDialog(false);\n        setConflictData(null);\n        setSaveStatus('saved');\n        lastSaveTimeRef.current = Date.now();\n        showToast(t.conflicts?.useLocalSuccess || '已使用你的版本覆盖服务器', { variant: 'success' });\n      } else {\n        setError(t.errors.saveNoteFailed);\n      }\n    } catch (err: any) {\n      setError(t.errors.saveNoteFailed + ': ' + err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 🔥 冲突解决：使用服务器版本（放弃本地修改）\n  const handleUseServerVersion = async () => {\n    if (!conflictData) return;\n\n    // 再次确认（防止误操作）\n    const confirmed = await confirmProceed(\n      t.conflicts?.confirmUseServer || '确定要放弃你的修改吗？\\n\\n你的本地版本已备份到浏览器存储中，稍后可以恢复。',\n      { confirmLabel: t.common.confirm },\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    // 更新编辑器为服务器版本\n    setNoteContent(conflictData.serverContent);\n    setNoteTitle(conflictData.serverTitle);\n    setNoteTags(conflictData.serverTags);\n    setSelectedNote({\n      ...selectedNote!,\n      content: conflictData.serverContent,\n      title: conflictData.serverTitle,\n      tags: conflictData.serverTags,\n      version: conflictData.serverVersion,\n      encrypted_content: conflictData.serverEncryptedContent,\n      iv: conflictData.serverIv\n    });\n\n    // 更新笔记列表\n    setNotes((prev) =>\n      prev.map((note) =>\n        note.id === conflictData.noteId\n          ? {\n              ...note,\n              content: conflictData.serverContent,\n              title: conflictData.serverTitle,\n              tags: conflictData.serverTags,\n              version: conflictData.serverVersion\n            }\n          : note\n      )\n    );\n\n    // 关闭对话框，当前设备的修改已被放弃\n    setShowConflictDialog(false);\n    setConflictData(null);\n    setSaveStatus('saved');\n    lastSaveTimeRef.current = Date.now();\n    setError(t.conflicts?.useServerInfo || '已切换到服务器版本。你在当前设备的修改已被放弃。');\n    setTimeout(() => setError(''), 5000);\n  };\n\n  // 🔥 冲突解决：手动合并（对话框内编辑模式）\n  const [mergeMode, setMergeMode] = useState(false); // 是否进入合并编辑模式\n  const [mergedContent, setMergedContent] = useState(''); // 合并后的内容\n\n  const handleManualMerge = () => {\n    if (!conflictData) return;\n\n    // 初始化合并内容为本地版本\n    setMergedContent(conflictData.localContent);\n    setMergeMode(true);\n  };\n\n  // 应用合并结果\n  const handleApplyMerge = async () => {\n    if (!conflictData || !mergedContent.trim()) {\n      setError(t.errors.noteContentEmpty);\n      return;\n    }\n\n    try {\n      setSaving(true);\n\n      // 使用服务器最新版本号强制覆盖\n      const encrypted = await crypto.encrypt(JSON.stringify({\n        content: mergedContent,\n        tags: conflictData.localTags,  // 使用本地标签（手动合并时暂不支持标签合并）\n      }));\n      const response = await api.updateNote(conflictData.noteId, {\n        title: conflictData.localTitle || undefined,\n        encrypted_content: encrypted.ciphertext,\n        iv: encrypted.iv,\n        version: conflictData.serverVersion, // 使用服务器最新版本号\n      });\n\n      if (response.success && response.data) {\n        // 更新本地状态\n        const updatedNote = { ...response.data, content: mergedContent, tags: conflictData.localTags };\n        setNotes((prev) =>\n          prev.map((note) =>\n            note.id === conflictData.noteId ? updatedNote : note\n          )\n        );\n        setSelectedNote(updatedNote);\n        setNoteContent(mergedContent);\n        setNoteTitle(conflictData.localTitle);\n        setNoteTags(conflictData.localTags);\n\n        // 关闭对话框和合并模式\n        setShowConflictDialog(false);\n        setConflictData(null);\n        setMergeMode(false);\n        setMergedContent('');\n        setSaveStatus('saved');\n        lastSaveTimeRef.current = Date.now();\n        showToast(t.conflicts?.applyMergeSuccess || '合并成功并已保存', { variant: 'success' });\n      } else {\n        setError(t.errors.saveNoteFailed);\n      }\n    } catch (err: any) {\n      setError(t.errors.saveNoteFailed + ': ' + err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 取消合并\n  const handleCancelMerge = async () => {\n    if (mergedContent !== conflictData?.localContent) {\n      const confirmed = await confirmProceed(\n        t.conflicts?.confirmCancelMerge || '确定要放弃合并吗？未保存的修改将会丢失。',\n        { variant: 'danger' },\n      );\n      if (!confirmed) {\n        return;\n      }\n    }\n    setMergeMode(false);\n    setMergedContent('');\n  };\n\n  // 删除笔记\n  const handleDeleteNote = async () => {\n    if (!selectedNote) return;\n\n    const confirmed = await confirmProceed(t.notes.deleteConfirm, {\n      confirmLabel: t.common.delete,\n    });\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await api.deleteNote(selectedNote.id);\n\n      if (!response.success) {\n        setError(t.errors.deleteNoteFailed);\n        return;\n      }\n\n      setNotes((prev) => prev.filter((note) => note.id !== selectedNote.id));\n      // 删除后清空所有状态，返回教程页\n      setSelectedNote(null);\n      setNoteTitle('');\n      setNoteContent('');\n      setNoteTags([]);\n      setViewMode('edit');\n      showToast(t.notes.deleteSuccess, { variant: 'success' });\n    } catch (err: any) {\n      setError(err.message || t.errors.deleteNoteFailed);\n    }\n  };\n  // 选择密码\n  const handleSelectPassword = async (pwd: Password) => {\n    // ⚠️ 第一优先级：如果点击的是已选中的密码，走返回逻辑（而非切换逻辑）\n    if (selectedPassword?.id === pwd.id && activePanel === 'passwords') {\n      // 返回前检查未保存更改\n      if (passwordModified && (passwordSite.trim() || passwordUsername.trim() || passwordValue.trim() || passwordNotes.trim())) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消返回\n        }\n      }\n\n      // 执行返回：取消选中，清空所有状态\n      setSelectedPassword(null);\n      setPasswordSite('');\n      setPasswordUsername('');\n      setPasswordValue('');\n      setPasswordNotes('');\n      setPasswordModified(false); // 重置修改状态\n      setBreachCheckResult(null); // 清空泄露检测结果\n      // 保持在密码面板，显示密码教程页（不切换到笔记面板）\n      return;\n    }\n\n    // ⚠️ 第二优先级：不同密码，走切换逻辑\n    // 检查当前密码是否有未保存的更改（无论编辑还是预览模式）\n    if (selectedPassword && passwordModified &&\n        (passwordSite.trim() || passwordUsername.trim() || passwordValue.trim() || passwordNotes.trim())) {\n      const confirmed = await confirmProceed(t.errors.unsavedChangesSwitch);\n      if (!confirmed) {\n        return; // 用户取消切换\n      }\n    }\n\n    setActivePanel('passwords');\n    setSelectedPassword(pwd);\n    setPasswordSite(pwd.site || '');\n    setPasswordUsername(pwd.username || '');\n    setPasswordValue(pwd.password || '');\n    setPasswordNotes(pwd.notes || '');\n    setPasswordViewMode('preview'); // 自动进入预览模式\n    setSelectedNote(null);\n    setShowNoteEditor(false); // 隐藏笔记编辑器\n    setError('');\n    setPasswordModified(false); // 重置修改状态\n    setBreachCheckResult(null); // 清空泄露检测结果\n  };\n\n  // 创建新密码\n  const handleNewPassword = async () => {\n    // 🐛 修复：检查当前是否有未保存的密码更改（无论编辑还是预览模式）\n    if (selectedPassword && passwordModified &&\n        (passwordSite.trim() || passwordUsername.trim() || passwordValue.trim() || passwordNotes.trim())) {\n      const confirmed = await confirmProceed(t.errors.unsavedChangesNew);\n      if (!confirmed) {\n        return; // 用户取消创建新密码\n      }\n    }\n\n    setActivePanel('passwords');\n    setSelectedPassword(null);\n    setPasswordSite('');\n    setPasswordUsername('');\n    setPasswordValue('');\n    setPasswordNotes('');\n    setPasswordViewMode('edit'); // 新建时进入编辑模式\n    setSelectedNote(null);\n    setShowNoteEditor(false); // 隐藏笔记编辑器\n    setError('');\n    setShowPassword(false);\n    setPasswordModified(false); // 重置修改状态\n    setBreachCheckResult(null); // 清空泄露检测结果\n  };\n\n  // 生成随机密码\n  const handleGeneratePassword = () => {\n    // 至少需要选择一种字符类型\n    if (!includeUppercase && !includeLowercase && !includeDigits && !includeSymbols) {\n      setError(t.passwords.generator.error);\n      return;\n    }\n\n    const options = {\n      uppercase: includeUppercase,\n      lowercase: includeLowercase,\n      digits: includeDigits,\n      symbols: includeSymbols,\n    };\n\n    const generated = crypto.generatePassword(passwordLength, options as any);\n    setPasswordValue(generated);\n    setShowPassword(true);\n    setShowPasswordGenerator(false);\n    setError('');\n  };\n\n  // 检查密码泄露\n  const handleCheckBreach = async () => {\n    if (!passwordValue) {\n      setError(language === 'zh-CN' ? '请先输入密码' : 'Please enter a password first');\n      return;\n    }\n\n    setCheckingBreach(true);\n    setError('');\n\n    try {\n      const result = await checkPasswordBreachCached(passwordValue);\n      setBreachCheckResult(result);\n    } catch (error) {\n      console.error('密码泄露检测失败:', error);\n      setError(language === 'zh-CN' ? '检测失败，请稍后重试' : 'Check failed, please try again later');\n    } finally {\n      setCheckingBreach(false);\n    }\n  };\n\n  // 保存密码\n  const handleSavePassword = async () => {\n    // 🛡️ 防止重复保存（前端第一层防护）\n    if (saving) {\n      console.warn('[handleSavePassword] 保存中，忽略重复请求');\n      return;\n    }\n\n    // 只要求网站名称不为空，其他字段都允许为空（支持保存 token、密钥等场景）\n    if (!passwordSite.trim()) {\n      setError(t.errors.passwordSiteEmpty);\n      return;\n    }\n\n    try {\n      setSaving(true);\n      setError('');\n\n      // 将所有字段打包成一个 JSON 对象进行加密（避免 IV 重用问题）\n      const passwordData = {\n        site: passwordSite,\n        username: passwordUsername || '',\n        password: passwordValue || '',\n        notes: passwordNotes || '',\n      };\n\n      const encrypted = await crypto.encrypt(JSON.stringify(passwordData));\n\n      if (selectedPassword) {\n        const response = await api.updatePassword(selectedPassword.id, {\n          encrypted_site: encrypted.ciphertext,\n          encrypted_username: encrypted.ciphertext,  // 所有字段使用同一个密文\n          encrypted_password: encrypted.ciphertext,\n          encrypted_notes: encrypted.ciphertext,\n          iv: encrypted.iv,\n          version: selectedPassword.version,\n        });\n\n        if (!response.success || !response.data) {\n          // 🛡️ 速率限制错误（友好提示）\n          if (response.error?.code === 'PASSWORD_UPDATE_RATE_LIMIT') {\n            const remainingSeconds = (response.error as any).remainingSeconds || 60;\n            const message = language === 'zh-CN'\n              ? `${t.errors.rateLimitMessage}\\n\\n${t.errors.rateLimitWait.replace('{seconds}', String(remainingSeconds))}`\n              : `${t.errors.rateLimitMessage}\\n\\n${t.errors.rateLimitWait.replace('{seconds}', String(remainingSeconds))}`;\n            setError(message);\n            setSaving(false);\n            return;\n          }\n\n          setError(response.error?.message || t.errors.saveNoteFailed);\n          setSaving(false);\n          return;\n        }\n\n        const updated = {\n          ...response.data,\n          site: passwordSite,\n          username: passwordUsername || '',\n          password: passwordValue || '',\n          notes: passwordNotes || '',\n        };\n\n        setPasswords((prev) =>\n          prev.map((pwd) => (pwd.id === selectedPassword.id ? updated : pwd))\n        );\n        setSelectedPassword(updated);\n        setPasswordModified(false); // 保存成功后重置修改状态\n\n        // 保存成功提示\n        showToast(t.common.saved, { variant: 'success' });\n      } else {\n        const response = await api.createPassword({\n          encrypted_site: encrypted.ciphertext,\n          encrypted_username: encrypted.ciphertext,  // 所有字段使用同一个密文\n          encrypted_password: encrypted.ciphertext,\n          encrypted_notes: encrypted.ciphertext,\n          iv: encrypted.iv,\n        });\n\n        if (!response.success || !response.data) {\n          setError(response.error?.message || t.errors.createNoteFailed);\n          setSaving(false);\n          return;\n        }\n\n        const newPassword = {\n          ...response.data,\n          site: passwordSite,\n          username: passwordUsername || '',\n          password: passwordValue || '',\n          notes: passwordNotes || '',\n        };\n\n        setPasswords((prev) => [newPassword, ...prev]);\n        setSelectedPassword(newPassword);\n        setPasswordModified(false); // 保存成功后重置修改状态\n\n        // 保存成功提示\n        showToast(t.common.saved, { variant: 'success' });\n      }\n    } catch (err: any) {\n      setError(err.message || t.errors.saveNoteFailed);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // 删除密码\n  const handleDeletePassword = async () => {\n    if (!selectedPassword) return;\n\n    const confirmed = await confirmProceed(t.passwords.deleteConfirm, {\n      confirmLabel: t.common.delete,\n    });\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const response = await api.deletePassword(selectedPassword.id);\n\n      if (!response.success) {\n        setError(t.errors.deleteNoteFailed);\n        return;\n      }\n\n      setPasswords((prev) => prev.filter((pwd) => pwd.id !== selectedPassword.id));\n      handleNewPassword();\n      showToast(t.passwords.deleteSuccess, { variant: 'success' });\n    } catch (err: any) {\n      setError(err.message || t.errors.deleteNoteFailed);\n    }\n  };\n\n  // 复制到剪贴板\n  const handleCopy = async (text: string, label: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      const message = label === t.passwords.username ? t.passwords.usernameCopied : t.passwords.passwordCopied;\n      showToast(message, { variant: 'success', duration: 2000 });\n    } catch (err) {\n      showToast(t.errors.copyFailed, { variant: 'error' });\n    }\n  };\n\n  // 检测是否为有效的 URL\n  const isValidUrl = (text: string): boolean => {\n    try {\n      const url = new URL(text);\n      return url.protocol === 'http:' || url.protocol === 'https:';\n    } catch {\n      // 如果不是完整 URL，尝试检测是否是域名格式\n      const domainPattern = /^([a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n      return domainPattern.test(text);\n    }\n  };\n\n  // 格式化 URL（如果是域名格式，添加 https://）\n  const formatUrl = (text: string): string => {\n    try {\n      new URL(text);\n      return text;\n    } catch {\n      return `https://${text}`;\n    }\n  };\n\n  // 处理 Markdown 链接点击：锚点链接滚动到指定位置，外部链接在新标签页打开\n  const handleMarkdownLinkClick = (e: React.MouseEvent<HTMLAnchorElement>, href?: string) => {\n    if (!href) return;\n\n    // 如果是锚点链接（以 # 开头）\n    if (href.startsWith('#')) {\n      e.preventDefault();\n      const targetId = href.substring(1); // 移除 # 号\n      const targetElement = document.getElementById(targetId);\n\n      if (targetElement) {\n        // 平滑滚动到目标元素\n        targetElement.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n        });\n      } else {\n        // 如果找不到元素，尝试通过文本内容查找标题\n        const decodedId = decodeURIComponent(targetId);\n        const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6');\n        for (const heading of headings) {\n          if (heading.textContent === decodedId || heading.id === decodedId) {\n            heading.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n            });\n            break;\n          }\n        }\n      }\n    }\n    // 外部链接已通过 target=\"_blank\" 自动在新标签页打开\n  };\n\n  // 复制代码块内容\n  const handleCopyCode = async (code: string) => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopiedRecently(true);\n      showToast(t.common.copied, { variant: 'success', duration: 2000 });\n      setTimeout(() => setCopiedRecently(false), 2000);\n    } catch (err) {\n      console.error('复制失败:', err);\n      showToast(t.errors.copyFailed, { variant: 'error' });\n    }\n  };\n\n  // 自定义代码块组件（带复制按钮）\n  const CodeBlock = ({ children, className }: { children: React.ReactNode; className?: string }) => {\n    const [showCopyButton, setShowCopyButton] = useState(false);\n\n    // 提取代码内容（递归处理 React children）\n    const extractText = (node: React.ReactNode): string => {\n      if (typeof node === 'string') return node;\n      if (typeof node === 'number') return String(node);\n      if (Array.isArray(node)) return node.map(extractText).join('');\n      if (node && typeof node === 'object' && 'props' in node) {\n        return extractText((node as any).props.children);\n      }\n      return '';\n    };\n\n    const codeContent = extractText(children);\n\n    return (\n      <div\n        className=\"relative group\"\n        onMouseEnter={() => setShowCopyButton(true)}\n        onMouseLeave={() => setShowCopyButton(false)}\n      >\n        <pre className={`bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 rounded-lg border border-gray-300 dark:border-gray-700 my-4 overflow-hidden ${className || ''}`}>\n          {children}\n        </pre>\n        {/* 复制按钮 */}\n        <button\n          onClick={() => handleCopyCode(codeContent)}\n          className={`absolute top-2 right-2 px-3 py-1.5 text-xs rounded-md bg-gray-700/80 hover:bg-gray-600 dark:bg-gray-600/80 dark:hover:bg-gray-500 text-white transition-all flex items-center gap-1.5 backdrop-blur-sm ${\n            showCopyButton ? 'opacity-100' : 'opacity-0'\n          }`}\n          title={t.common.copy}\n        >\n          {copiedRecently ? (\n            <>\n              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n              </svg>\n              {t.common.copied}\n            </>\n          ) : (\n            <>\n              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n              </svg>\n              {t.common.copy}\n            </>\n          )}\n        </button>\n      </div>\n    );\n  };\n\n  // ⚡ Markdown 渲染配置（提取为常量，避免重复定义）\n  const markdownComponents = useMemo(() => ({\n    h1: ({node, ...props}: any) => <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4 mt-2 leading-tight\" {...props} />,\n    h2: ({node, ...props}: any) => <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4 mt-6 pb-2 border-b border-gray-300 dark:border-gray-700 leading-snug\" {...props} />,\n    h3: ({node, ...props}: any) => <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-3 mt-5 leading-snug\" {...props} />,\n    h4: ({node, ...props}: any) => <h4 className=\"text-lg font-bold text-gray-900 dark:text-white mb-2 mt-4 leading-normal\" {...props} />,\n    h5: ({node, ...props}: any) => <h5 className=\"text-base font-bold text-gray-900 dark:text-white mb-2 mt-3 leading-normal\" {...props} />,\n    h6: ({node, ...props}: any) => <h6 className=\"text-sm font-bold text-gray-900 dark:text-white mb-2 mt-2 leading-normal\" {...props} />,\n    p: ({node, ...props}: any) => <p className=\"text-base text-gray-700 dark:text-gray-100 mb-3 leading-relaxed\" {...props} />,\n    a: ({node, href, ...props}: any) => <a className=\"text-blue-600 dark:text-blue-400 underline decoration-blue-600/30 dark:decoration-blue-400/30 hover:decoration-blue-600 dark:hover:decoration-blue-400 transition-colors\" onClick={(e) => handleMarkdownLinkClick(e, href)} target={href?.startsWith('#') ? undefined : '_blank'} rel={href?.startsWith('#') ? undefined : 'noopener noreferrer'} href={href} {...props} />,\n    strong: ({node, ...props}: any) => <strong className=\"font-bold text-gray-900 dark:text-white\" {...props} />,\n    em: ({node, ...props}: any) => <em className=\"italic text-gray-700 dark:text-gray-200\" {...props} />,\n    code: ({node, inline, ...props}: any) =>\n      inline\n        ? <code className=\"text-sm text-pink-600 dark:text-pink-400 px-1.5 py-0.5 rounded font-mono inline-code-bg\" {...props} />\n        : <code className=\"block text-sm p-4 rounded-lg my-4 overflow-x-auto font-mono\" {...props} />,\n    pre: ({node, children, ...props}: any) => <CodeBlock {...props}>{children}</CodeBlock>,\n    blockquote: ({node, ...props}: any) => <blockquote className=\"border-l-4 border-blue-500 bg-blue-50 dark:bg-blue-500/5 pl-4 pr-4 py-2 my-4 italic text-gray-700 dark:text-gray-300\" {...props} />,\n    ul: ({node, ...props}: any) => <ul className=\"list-disc list-inside my-4 text-gray-700 dark:text-gray-100 space-y-1\" {...props} />,\n    ol: ({node, ...props}: any) => <ol className=\"list-decimal list-inside my-4 text-gray-700 dark:text-gray-100 space-y-1\" {...props} />,\n    li: ({node, ...props}: any) => <li className=\"text-base text-gray-700 dark:text-gray-100 leading-relaxed ml-4\" {...props} />,\n    hr: ({node, ...props}: any) => <hr className=\"border-gray-300 dark:border-gray-600 my-6\" {...props} />,\n    table: ({node, ...props}: any) => <table className=\"border-collapse my-4 w-full text-gray-900 dark:text-gray-100\" {...props} />,\n    thead: ({node, ...props}: any) => <thead className=\"border-b-2 border-gray-300 dark:border-gray-600\" {...props} />,\n    th: ({node, ...props}: any) => <th className=\"bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white font-semibold p-3 text-left border border-gray-300 dark:border-gray-700\" {...props} />,\n    td: ({node, ...props}: any) => <td className=\"p-3 border border-gray-300 dark:border-gray-700 text-gray-900 dark:text-gray-100\" {...props} />,\n    img: ({node, ...props}: any) => <img className=\"rounded-lg shadow-xl my-6 max-w-full\" {...props} />,\n  }), [handleMarkdownLinkClick]); // 仅在 handleMarkdownLinkClick 变化时重新创建\n\n  // ⚡ Markdown 插件配置\n  const isOldSafari = isOldIOSSafari();\n  const remarkPlugins = useMemo(() =>\n    isOldSafari ? [remarkGfm] : [remarkGfm, remarkMath],\n    [isOldSafari]\n  );\n  const rehypePlugins = useMemo(() =>\n    isOldSafari ? [rehypeRaw] : [rehypeHighlight, rehypeRaw, rehypeKatex],\n    [isOldSafari]\n  );\n\n  // ⚡ Markdown 渲染缓存（核心优化：避免重复渲染）\n  const cachedMarkdownPreview = useMemo(() => {\n    const content = String(noteContent || `*${t.notes.previewPlaceholder}*`);\n    return (\n      <ReactMarkdown\n        remarkPlugins={remarkPlugins}\n        rehypePlugins={rehypePlugins}\n        components={markdownComponents}\n      >\n        {content}\n      </ReactMarkdown>\n    );\n  }, [noteContent, remarkPlugins, rehypePlugins, markdownComponents, t.notes.previewPlaceholder]);\n\n  // ⚡ 全屏分屏模式 Markdown 缓存（占位符文本不同）\n  const cachedFullscreenMarkdown = useMemo(() => {\n    const content = String(noteContent || '*开始输入以查看预览...*');\n    return (\n      <ReactMarkdown\n        remarkPlugins={remarkPlugins}\n        rehypePlugins={rehypePlugins}\n        components={markdownComponents}\n      >\n        {content}\n      </ReactMarkdown>\n    );\n  }, [noteContent, remarkPlugins, rehypePlugins, markdownComponents]);\n\n  // ⚡ 普通预览模式 Markdown 缓存（支持多语言占位符）\n  const cachedNormalMarkdown = useMemo(() => {\n    const placeholder = language === 'zh-CN' ? '暂无内容' : 'No content';\n    const content = String(noteContent || `*${placeholder}*`);\n    return (\n      <ReactMarkdown\n        remarkPlugins={remarkPlugins}\n        rehypePlugins={rehypePlugins}\n        components={markdownComponents}\n      >\n        {content}\n      </ReactMarkdown>\n    );\n  }, [noteContent, remarkPlugins, rehypePlugins, markdownComponents, language]);\n\n  // 返回功能：桌面端返回教程页，移动端返回列表页\n  const handleBack = async () => {\n    if (activePanel === 'notes') {\n      // 🐛 修复：无论是编辑模式还是预览模式，只要有未保存内容就提示\n      // 用户可能在编辑模式下修改后切换到预览模式，此时 saveStatus 仍是 'unsaved'\n      if (selectedNote && saveStatus === 'unsaved' && noteContent.trim()) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消返回\n        }\n      }\n      setSelectedNote(null);\n      setNoteTitle('');\n      setNoteContent('');\n      setNoteTags([]); // 清空标签\n      setTagInput(''); // ⚠️ 清空标签输入框\n      setShowNoteEditor(false); // 隐藏编辑器，显示教程\n      setViewMode('edit');\n      setIsFullscreen(false); // 退出全屏模式\n      setSaveStatus('saved'); // 重置保存状态\n    } else {\n      // 🐛 修复：密码编辑时返回也需要保护提示\n      if (passwordModified && (passwordSite.trim() || passwordUsername.trim() || passwordValue.trim() || passwordNotes.trim())) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消返回\n        }\n      }\n      setSelectedPassword(null);\n      setPasswordSite('');\n      setPasswordUsername('');\n      setPasswordValue('');\n      setPasswordNotes('');\n      setPasswordViewMode('preview');\n      setPasswordModified(false); // 重置修改状态\n      // 保持在密码面板，返回密码教程页（不切换到笔记面板）\n    }\n  };\n\n  // 🐛 修复：标签页切换时检查未保存更改\n  const handlePanelSwitch = async (targetPanel: 'notes' | 'passwords') => {\n    // 如果切换到相同标签页，不做任何操作\n    if (activePanel === targetPanel) {\n      return;\n    }\n\n    // 从笔记切换到密码：检查笔记是否有未保存的更改（无论编辑还是预览模式）\n    if (activePanel === 'notes' && targetPanel === 'passwords') {\n      if (selectedNote && saveStatus === 'unsaved' && noteContent.trim()) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消切换\n        }\n      }\n    }\n\n    // 从密码切换到笔记：检查密码是否有未保存的更改（无论编辑还是预览模式）\n    if (activePanel === 'passwords' && targetPanel === 'notes') {\n      if (selectedPassword && passwordModified &&\n          (passwordSite.trim() || passwordUsername.trim() || passwordValue.trim() || passwordNotes.trim())) {\n        const confirmed = await confirmProceed(t.errors.unsavedChangesBack);\n        if (!confirmed) {\n          return; // 用户取消切换\n        }\n      }\n    }\n\n    // 执行切换\n    setActivePanel(targetPanel);\n  };\n\n  // 过滤笔记列表（根据搜索关键词）\n  const filteredNotes = useMemo(() => {\n    let result = notes;\n\n    // 搜索关键词过滤\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase();\n      result = result.filter((note) => {\n        // 搜索标题\n        if (note.title && note.title.toLowerCase().includes(query)) {\n          return true;\n        }\n        // 搜索内容\n        if (note.content && note.content.toLowerCase().includes(query)) {\n          return true;\n        }\n        // 搜索标签\n        if (note.tags && note.tags.some(tag => tag.toLowerCase().includes(query))) {\n          return true;\n        }\n        return false;\n      });\n    }\n\n    return result;\n  }, [notes, searchQuery]);\n\n  // 过滤密码列表（根据搜索关键词）\n  const filteredPasswords = useMemo(() => {\n    if (!searchQueryPassword.trim()) {\n      return passwords;\n    }\n\n    const query = searchQueryPassword.toLowerCase();\n    return passwords.filter((pwd) => {\n      // 搜索网站名称\n      if (pwd.site && pwd.site.toLowerCase().includes(query)) {\n        return true;\n      }\n      // 搜索用户名\n      if (pwd.username && pwd.username.toLowerCase().includes(query)) {\n        return true;\n      }\n      // 搜索备注\n      if (pwd.notes && pwd.notes.toLowerCase().includes(query)) {\n        return true;\n      }\n      return false;\n    });\n  }, [passwords, searchQueryPassword]);\n\n  // 💡 分页计算：笔记（兼容客户端和后端分页）\n  const notePagination = useMemo(() => {\n    if (notePaginationMode === 'client') {\n      // 客户端分页：使用本地过滤后的数据\n      const totalItems = filteredNotes.length;\n      const totalPages = Math.ceil(totalItems / itemsPerPage);\n      const start = (noteCurrentPage - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      const items = filteredNotes.slice(start, end);\n\n      return {\n        items,\n        totalItems,\n        totalPages,\n        currentPage: noteCurrentPage,\n        hasNextPage: noteCurrentPage < totalPages,\n        hasPrevPage: noteCurrentPage > 1,\n      };\n    } else {\n      // 后端分页：直接显示当前页数据（搜索功能在后端分页模式下暂不支持）\n      const totalPages = Math.ceil(totalNotes / itemsPerPage);\n\n      return {\n        items: notes, // 当前页数据\n        totalItems: totalNotes,\n      totalPages,\n      currentPage: noteCurrentPage,\n      hasNextPage: noteCurrentPage < totalPages,\n      hasPrevPage: noteCurrentPage > 1,\n      };\n    }\n  }, [notePaginationMode, filteredNotes, notes, totalNotes, noteCurrentPage, itemsPerPage]);\n\n  // 💡 分页计算：密码（兼容客户端和后端分页）\n  const passwordPagination = useMemo(() => {\n    if (passwordPaginationMode === 'client') {\n      // 客户端分页：使用本地过滤后的数据\n      const totalItems = filteredPasswords.length;\n      const totalPages = Math.ceil(totalItems / itemsPerPage);\n      const start = (passwordCurrentPage - 1) * itemsPerPage;\n      const end = start + itemsPerPage;\n      const items = filteredPasswords.slice(start, end);\n\n      return {\n        items,\n        totalItems,\n        totalPages,\n        currentPage: passwordCurrentPage,\n        hasNextPage: passwordCurrentPage < totalPages,\n        hasPrevPage: passwordCurrentPage > 1,\n      };\n    } else {\n      // 后端分页：直接显示当前页数据（搜索功能在后端分页模式下暂不支持）\n      const totalPages = Math.ceil(totalPasswords / itemsPerPage);\n\n      return {\n        items: passwords, // 当前页数据\n        totalItems: totalPasswords,\n        totalPages,\n        currentPage: passwordCurrentPage,\n        hasNextPage: passwordCurrentPage < totalPages,\n        hasPrevPage: passwordCurrentPage > 1,\n      };\n    }\n  }, [passwordPaginationMode, filteredPasswords, passwords, totalPasswords, passwordCurrentPage, itemsPerPage]);\n\n  // 💡 分页器组件（紧凑型，桌面端和移动端统一）\n  const Paginator = ({\n    currentPage,\n    totalPages,\n    totalItems,\n    onPageChange,\n  }: {\n    currentPage: number;\n    totalPages: number;\n    totalItems: number;\n    onPageChange: (page: number) => void;\n  }) => {\n    const [showJumpInput, setShowJumpInput] = useState(false);\n    const [jumpValue, setJumpValue] = useState('');\n\n    // 处理跳转\n    const handleJump = () => {\n      const page = parseInt(jumpValue);\n      if (page >= 1 && page <= totalPages) {\n        onPageChange(page);\n        setShowJumpInput(false);\n        setJumpValue('');\n      }\n    };\n\n    // 多语言文本\n    const paginationText = language === 'zh-CN'\n      ? { prev: '上一页', next: '下一页', total: `共 ${totalItems} 条`, jump: '点击跳转到指定页' }\n      : { prev: 'Previous', next: 'Next', total: `Total ${totalItems}`, jump: 'Click to jump to page' };\n\n    return (\n      <div className=\"flex items-center justify-center gap-1 py-1.5\">\n        {/* 上一页按钮 */}\n        <button\n          onClick={() => onPageChange(currentPage - 1)}\n          disabled={currentPage === 1}\n          className=\"p-1 rounded border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-200 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors\"\n          title={paginationText.prev}\n        >\n          <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n\n        {/* 页码显示（可点击跳转） */}\n        {showJumpInput ? (\n          <div className=\"flex items-center gap-0.5\">\n            <input\n              type=\"number\"\n              min=\"1\"\n              max={totalPages}\n              value={jumpValue}\n              onChange={(e) => setJumpValue(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') handleJump();\n                if (e.key === 'Escape') {\n                  setShowJumpInput(false);\n                  setJumpValue('');\n                }\n              }}\n              className=\"w-10 px-1 py-0.5 text-xs text-center border border-blue-500 rounded bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-200 focus:outline-none focus:ring-1 focus:ring-blue-500\"\n              placeholder={currentPage.toString()}\n              autoFocus\n            />\n            <button\n              onClick={handleJump}\n              className=\"px-1.5 py-0.5 text-xs font-medium text-white bg-blue-500 rounded hover:bg-blue-600\"\n            >\n              GO\n            </button>\n            <button\n              onClick={() => {\n                setShowJumpInput(false);\n                setJumpValue('');\n              }}\n              className=\"px-1 py-0.5 text-xs font-medium text-slate-600 dark:text-slate-400 hover:text-slate-800 dark:hover:text-slate-200\"\n            >\n              ✕\n            </button>\n          </div>\n        ) : (\n          <button\n            onClick={() => totalPages > 1 && setShowJumpInput(true)}\n            className={`px-1.5 py-0.5 text-xs font-medium text-slate-700 dark:text-slate-200 transition-colors ${\n              totalPages > 1 ? 'hover:text-blue-500 dark:hover:text-blue-400 cursor-pointer' : 'cursor-default'\n            }`}\n            title={totalPages > 1 ? paginationText.jump : ''}\n          >\n            {currentPage}/{totalPages}\n          </button>\n        )}\n\n        {/* 下一页按钮 */}\n        <button\n          onClick={() => onPageChange(currentPage + 1)}\n          disabled={currentPage === totalPages}\n          className=\"p-1 rounded border border-slate-300 dark:border-slate-600 bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-200 disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-50 dark:hover:bg-slate-600 transition-colors\"\n          title={paginationText.next}\n        >\n          <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n\n        {/* 分隔符 */}\n        <div className=\"w-px h-4 bg-slate-300 dark:bg-slate-600 mx-0.5\"></div>\n\n        {/* 总条数 */}\n        <span className=\"text-[11px] text-slate-600 dark:text-slate-400 whitespace-nowrap\">\n          {paginationText.total}\n        </span>\n      </div>\n    );\n  };\n\n  // 根据邮箱生成头像颜色（确保同一邮箱颜色一致）\n  const getAvatarColor = (email: string): string => {\n    const colors = [\n      'bg-blue-500',\n      'bg-blue-500',\n      'bg-pink-500',\n      'bg-red-500',\n      'bg-orange-500',\n      'bg-yellow-500',\n      'bg-green-500',\n      'bg-teal-500',\n      'bg-cyan-500',\n      'bg-indigo-500',\n    ];\n\n    // 简单哈希函数，基于邮箱字符串生成索引\n    let hash = 0;\n    for (let i = 0; i < email.length; i++) {\n      hash = email.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    const index = Math.abs(hash) % colors.length;\n    return colors[index];\n  };\n\n  // 获取邮箱首字母\n  const getAvatarInitial = (email: string): string => {\n    return email.charAt(0).toUpperCase();\n  };\n\n  // 邮箱加密显示（例如：test@example.com → t***@example.com）\n  const maskEmail = (email: string): string => {\n    if (!email || !email.includes('@')) return email;\n    const [localPart, domain] = email.split('@');\n    if (!localPart || localPart.length === 0) return email;\n\n    // 只显示第一个字符，其余用 *** 替代\n    const maskedLocal = localPart.charAt(0) + '***';\n    return `${maskedLocal}@${domain}`;\n  };\n\n  // 💡 格式化保存时间（静态绝对时间，零性能开销）\n  const formatSaveTime = useCallback((timestamp: number): string => {\n    const date = new Date(timestamp);\n    const now = new Date();\n\n    // 今天：显示\"今天 HH:mm\"\n    if (date.toDateString() === now.toDateString()) {\n      return `${t.common.today} ${date.toLocaleTimeString(language === 'zh-CN' ? 'zh-CN' : 'en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    }\n\n    // 昨天：显示\"昨天 HH:mm\"\n    const yesterday = new Date(now);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === yesterday.toDateString()) {\n      return `${t.common.yesterday} ${date.toLocaleTimeString(language === 'zh-CN' ? 'zh-CN' : 'en-US', {\n        hour: '2-digit',\n        minute: '2-digit'\n      })}`;\n    }\n\n    // 其他：显示\"MM/DD HH:mm\"\n    return date.toLocaleString(language === 'zh-CN' ? 'zh-CN' : 'en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }, [language, t]);\n\n  // 会话恢复：重新输入主密码恢复加密密钥\n  const handleSessionRestore = async () => {\n    if (!user || !restoreMasterPassword.trim()) {\n      setRestoreError(language === 'zh-CN' ? '请输入主密码' : 'Please enter master password');\n      return;\n    }\n\n    setRestoring(true);\n    setRestoreError('');\n\n    try {\n      // 获取盐值（优先从 localStorage，如果没有则从服务器获取）\n      let salt = crypto.getSalt(user.email);\n      if (!salt) {\n        // 本地没有盐值，从服务器获取\n        const saltResponse = await api.getSalt(user.email);\n        if (!saltResponse.success || !saltResponse.data) {\n          setRestoreError(language === 'zh-CN'\n            ? '无法获取加密密钥，请稍后重试'\n            : 'Failed to get encryption key, please try again later');\n          setRestoring(false);\n          return;\n        }\n        salt = saltResponse.data.salt;\n      }\n\n      // 使用主密码和盐值重新派生加密密钥\n      await crypto.restore(restoreMasterPassword, user.email, salt);\n\n      // 验证认证哈希是否正确（通过心跳检测验证）\n      const response = await api.heartbeat();\n      if (!response.success) {\n        throw new Error('Session invalid');\n      }\n\n      // 恢复成功\n      setShowSessionRestoreDialog(false);\n      setRestoreMasterPassword('');\n      setRestoreError('');\n\n      // 加载数据\n      await loadNotes();\n      await loadPasswords();\n    } catch (err: any) {\n      console.error('Session restore failed:', err);\n      setRestoreError(language === 'zh-CN'\n        ? '主密码错误或会话已过期，请重新登录'\n        : 'Invalid password or session expired, please login again');\n    } finally {\n      setRestoring(false);\n    }\n  };\n\n  // 取消会话恢复，直接登出\n  const handleCancelSessionRestore = async () => {\n    setShowSessionRestoreDialog(false);\n    setRestoreMasterPassword('');\n    setRestoreError('');\n    crypto.clear();\n    await clearAllKeys(); // 清除 IndexedDB 中的持久化密钥\n    logout();\n    navigate('/login');\n  };\n\n  // 打开昵称编辑对话框\n  const handleOpenNicknameDialog = () => {\n    // 输入框为空，当前昵称仅作为 placeholder 提示\n    setEditingNickname('');\n    setNicknameError(''); // 清空之前的错误提示\n    setShowNicknameDialog(true);\n    setShowUserMenu(false);\n  };\n\n  // 保存昵称（端到端加密 + 速率限制保护）\n  const handleSaveNickname = async () => {\n    if (savingNickname || !crypto.isInitialized()) return;\n\n    try {\n      setSavingNickname(true);\n      setNicknameError(''); // 清空之前的错误提示\n\n      const trimmedNickname = editingNickname.trim();\n\n      // 如果昵称为空，清除昵称\n      if (!trimmedNickname) {\n        const response = await api.updateNickname('', '');\n        if (!response.success) {\n          // 处理速率限制错误\n          if (response.error?.code === 'NICKNAME_RATE_LIMIT') {\n            const remainingMinutes = (response.error as any).remainingMinutes || 60;\n            const message = language === 'zh-CN'\n              ? `修改昵称过于频繁，请在 ${remainingMinutes} 分钟后再试`\n              : `Nickname update too frequent, please try again in ${remainingMinutes} minutes`;\n            setNicknameError(message);\n          } else {\n            setNicknameError(response.error?.message || (language === 'zh-CN' ? '更新昵称失败' : 'Failed to update nickname'));\n          }\n          return;\n        }\n\n        // 更新本地状态\n        const { updateUserNickname } = useAuthStore.getState();\n        updateUserNickname(null);\n        setDecryptedNickname('');\n      } else {\n        // 加密昵称\n        const { ciphertext, iv } = await crypto.encrypt(trimmedNickname);\n\n        // 调用 API 更新昵称（发送密文）\n        const response = await api.updateNickname(ciphertext, iv);\n\n        if (!response.success) {\n          // 处理速率限制错误\n          if (response.error?.code === 'NICKNAME_RATE_LIMIT') {\n            const remainingMinutes = (response.error as any).remainingMinutes || 60;\n            const message = language === 'zh-CN'\n              ? `修改昵称过于频繁，请在 ${remainingMinutes} 分钟后再试`\n              : `Nickname update too frequent, please try again in ${remainingMinutes} minutes`;\n            setNicknameError(message);\n          } else {\n            setNicknameError(response.error?.message || (language === 'zh-CN' ? '更新昵称失败' : 'Failed to update nickname'));\n          }\n          return;\n        }\n\n        // 更新本地状态\n        const { updateUserNickname } = useAuthStore.getState();\n        updateUserNickname({ encrypted_nickname: ciphertext, nickname_iv: iv });\n        setDecryptedNickname(trimmedNickname);\n      }\n\n      // 显示成功提示\n      showToast(language === 'zh-CN' ? '昵称更新成功' : 'Nickname updated successfully', { variant: 'success' });\n\n      // 关闭对话框\n      setShowNicknameDialog(false);\n\n      // 强制刷新用户菜单显示（触发 useEffect 重新解密昵称）\n      setShowUserMenu(false);\n    } catch (err: any) {\n      setNicknameError(err.message || (language === 'zh-CN' ? '更新昵称失败' : 'Failed to update nickname'));\n    } finally {\n      setSavingNickname(false);\n    }\n  };\n\n  // 登出\n  const handleLogout = async () => {\n    try {\n      // 调用服务器登出 API（标记当前设备 session 为 inactive）\n      await api.logout();\n    } catch (err) {\n      // 忽略 API 错误，确保用户能成功退出\n      console.error('Server logout failed:', err);\n    } finally {\n      // 清除本地状态（无论 API 是否成功）\n      crypto.clear();\n      await clearAllKeys(); // 清除 IndexedDB 中的持久化密钥\n      logout();\n      navigate('/login');\n    }\n  };\n\n  // 加密导出数据\n  const handleEncryptedExport = async () => {\n    // 🎭 Demo 模式：禁用导出功能\n    if (isDemoMode()) {\n      setExportPasswordError(\n        language === 'zh-CN'\n          ? '🎭 Demo 模式下不支持数据导出功能'\n          : '🎭 Data export is not available in Demo mode'\n      );\n      return;\n    }\n\n    if (!token || !crypto.isInitialized()) {\n      setExportPasswordError(t.dataManagement.exportFailed);\n      return;\n    }\n\n    // 验证密码\n    if (!exportPassword || exportPassword.length < 8) {\n      setExportPasswordError(\n        language === 'zh-CN' ? '导出密码至少需要8个字符' : 'Export password must be at least 8 characters'\n      );\n      return;\n    }\n\n    if (exportPassword !== confirmExportPassword) {\n      setExportPasswordError(\n        language === 'zh-CN' ? '两次输入的密码不一致' : 'Passwords do not match'\n      );\n      return;\n    }\n\n    try {\n      setEncryptedExporting(true);\n      setExportPasswordError('');\n      setDataManagementMessage(null);\n      setShowEncryptedExportDialog(false);\n\n      api.setToken(token);\n\n      // 1. 获取所有笔记\n      const notesResponse = await api.getNotes(10000, 0);\n      if (!notesResponse.success || !notesResponse.data) {\n        throw new Error('Failed to fetch notes');\n      }\n\n      const notes = notesResponse.data.notes;\n      setExportProgress({ current: 0, total: notes.length });\n\n      // 2. 解密笔记\n      const decryptedNotes = [];\n      for (let i = 0; i < notes.length; i++) {\n        const note = notes[i];\n        const decrypted = await crypto.decrypt({\n          ciphertext: note.encrypted_content,\n          iv: note.iv,\n          algorithm: 'AES-256-GCM',\n        }, false);\n\n        let content = decrypted;\n        let tags: string[] = [];\n        try {\n          const parsed = JSON.parse(decrypted);\n          if (typeof parsed === 'object' && parsed !== null && 'content' in parsed) {\n            content = typeof parsed.content === 'string' ? parsed.content : JSON.stringify(parsed.content);\n            tags = Array.isArray(parsed.tags) ? parsed.tags : [];\n          }\n        } catch {}\n\n        decryptedNotes.push({\n          id: note.id,\n          title: note.title || t.notes.untitled,\n          content: content,\n          tags: tags,\n          created_at: note.created_at,\n          updated_at: note.updated_at,\n        });\n        setExportProgress({ current: i + 1, total: notes.length });\n      }\n\n      // 3. 获取所有密码\n      const passwordsResponse = await api.getPasswords(10000, 0);\n      if (!passwordsResponse.success || !passwordsResponse.data) {\n        throw new Error('Failed to fetch passwords');\n      }\n\n      const passwords = passwordsResponse.data.passwords;\n      setExportProgress({ current: notes.length, total: notes.length + passwords.length });\n\n      // 4. 解密密码\n      const decryptedPasswords = [];\n      for (let i = 0; i < passwords.length; i++) {\n        const pwd = passwords[i];\n\n        try {\n          const decryptedJson = await crypto.decrypt(\n            {\n              ciphertext: pwd.encrypted_site,\n              iv: pwd.iv,\n              algorithm: 'AES-256-GCM',\n            },\n            false\n          );\n\n          let passwordData;\n          try {\n            passwordData = JSON.parse(decryptedJson);\n          } catch {\n            const site = decryptedJson;\n            const username = await crypto.decrypt({\n              ciphertext: pwd.encrypted_username,\n              iv: pwd.iv,\n              algorithm: 'AES-256-GCM',\n            }, false);\n            const password = await crypto.decrypt({\n              ciphertext: pwd.encrypted_password,\n              iv: pwd.iv,\n              algorithm: 'AES-256-GCM',\n            }, false);\n            const notes = pwd.encrypted_notes ? await crypto.decrypt({\n              ciphertext: pwd.encrypted_notes,\n              iv: pwd.iv,\n              algorithm: 'AES-256-GCM',\n            }, false) : '';\n\n            passwordData = { site, username, password, notes };\n          }\n\n          decryptedPasswords.push({\n            id: pwd.id,\n            site: String(passwordData.site || ''),\n            username: String(passwordData.username || ''),\n            password: String(passwordData.password || ''),\n            notes: String(passwordData.notes || ''),\n            created_at: pwd.created_at,\n            updated_at: pwd.updated_at,\n          });\n        } catch (err) {\n          console.error('Failed to decrypt password:', err);\n        }\n\n        setExportProgress({ current: notes.length + i + 1, total: notes.length + passwords.length });\n      }\n\n      // 5. 生成导出数据\n      const exportData = {\n        version: '1.0',\n        exportedAt: new Date().toISOString(),\n        notes: decryptedNotes,\n        passwords: decryptedPasswords,\n      };\n\n      // 6. 加密导出数据\n      const plaintext = JSON.stringify(exportData, null, 2);\n      const encoder = new TextEncoder();\n      const data = encoder.encode(plaintext);\n\n      // 生成盐值\n      const salt = window.crypto.getRandomValues(new Uint8Array(16));\n\n      // 派生密钥\n      const passwordKey = await window.crypto.subtle.importKey(\n        'raw',\n        encoder.encode(exportPassword),\n        'PBKDF2',\n        false,\n        ['deriveBits', 'deriveKey']\n      );\n\n      const key = await window.crypto.subtle.deriveKey(\n        {\n          name: 'PBKDF2',\n          salt: salt,\n          iterations: 600000,\n          hash: 'SHA-256',\n        },\n        passwordKey,\n        { name: 'AES-GCM', length: 256 },\n        false,\n        ['encrypt']\n      );\n\n      // 加密数据\n      const iv = window.crypto.getRandomValues(new Uint8Array(12));\n      const encryptedData = await window.crypto.subtle.encrypt(\n        { name: 'AES-GCM', iv: iv },\n        key,\n        data\n      );\n\n      // 转换为 Base64\n      const encryptedArray = new Uint8Array(encryptedData);\n      const encryptedBase64 = btoa(String.fromCharCode(...encryptedArray));\n      const ivBase64 = btoa(String.fromCharCode(...iv));\n      const saltBase64 = btoa(String.fromCharCode(...salt));\n\n      // 7. 生成加密文件\n      const encryptedExportData = {\n        encrypted: true,\n        version: '1.0',\n        ciphertext: encryptedBase64,\n        iv: ivBase64,\n        salt: saltBase64,\n        exportedAt: new Date().toISOString(),\n      };\n\n      // 8. 下载文件\n      const blob = new Blob([JSON.stringify(encryptedExportData, null, 2)], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `anynote-encrypted-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n\n      setDataManagementMessage({\n        type: 'success',\n        text: language === 'zh-CN' ? '加密备份导出成功' : 'Encrypted backup exported successfully'\n      });\n\n      // 清空密码\n      setExportPassword('');\n      setConfirmExportPassword('');\n    } catch (error) {\n      console.error('Encrypted export failed:', error);\n      setDataManagementMessage({ type: 'error', text: t.dataManagement.exportFailed });\n    } finally {\n      setEncryptedExporting(false);\n      setExportProgress({ current: 0, total: 0 });\n    }\n  };\n\n  // 处理加密文件解密\n  const handleDecrypt = async () => {\n    if (!pendingEncryptedFile || !importDecryptPassword) {\n      return;\n    }\n\n    try {\n      setImporting(true);\n      setDataManagementMessage(null);\n      setShowDecryptDialog(false);\n\n      // 1. 读取加密文件\n      const text = await pendingEncryptedFile.text();\n      const encryptedData = JSON.parse(text);\n\n      if (!encryptedData.encrypted || !encryptedData.ciphertext || !encryptedData.iv || !encryptedData.salt) {\n        throw new Error('Invalid encrypted file format');\n      }\n\n      // 2. Base64 解码\n      const ciphertext = Uint8Array.from(atob(encryptedData.ciphertext), c => c.charCodeAt(0));\n      const iv = Uint8Array.from(atob(encryptedData.iv), c => c.charCodeAt(0));\n      const salt = Uint8Array.from(atob(encryptedData.salt), c => c.charCodeAt(0));\n\n      // 3. 派生密钥\n      const encoder = new TextEncoder();\n      const passwordKey = await window.crypto.subtle.importKey(\n        'raw',\n        encoder.encode(importDecryptPassword),\n        'PBKDF2',\n        false,\n        ['deriveBits', 'deriveKey']\n      );\n\n      const key = await window.crypto.subtle.deriveKey(\n        {\n          name: 'PBKDF2',\n          salt: salt,\n          iterations: 600000,\n          hash: 'SHA-256',\n        },\n        passwordKey,\n        { name: 'AES-GCM', length: 256 },\n        false,\n        ['decrypt']\n      );\n\n      // 4. 解密数据\n      let decryptedData;\n      try {\n        const decryptedArrayBuffer = await window.crypto.subtle.decrypt(\n          { name: 'AES-GCM', iv: iv },\n          key,\n          ciphertext\n        );\n        const decoder = new TextDecoder();\n        const decryptedText = decoder.decode(decryptedArrayBuffer);\n        decryptedData = JSON.parse(decryptedText);\n      } catch (err) {\n        setDataManagementMessage({\n          type: 'error',\n          text: language === 'zh-CN' ? '解密失败，密码错误或文件损坏' : 'Decryption failed, wrong password or corrupted file'\n        });\n        setImportDecryptPassword('');\n        setPendingEncryptedFile(null);\n        setImporting(false);\n        return;\n      }\n\n      // 5. 执行导入\n      await handleDecryptAndImport(decryptedData);\n\n      // 清空密码和文件\n      setImportDecryptPassword('');\n      setPendingEncryptedFile(null);\n    } catch (error) {\n      console.error('Decrypt and import failed:', error);\n      setDataManagementMessage({ type: 'error', text: t.dataManagement.importFailed });\n      setImporting(false);\n    }\n  };\n\n  // 解密并导入加密文件\n  const handleDecryptAndImport = async (importData: any) => {\n    try {\n      api.setToken(token);\n\n      // 验证格式\n      if (!importData.version || !importData.notes || !importData.passwords) {\n        throw new Error('Invalid file format');\n      }\n\n      const totalItems = importData.notes.length + importData.passwords.length;\n      setImportProgress({ current: 0, total: totalItems });\n\n      // 导入笔记\n      let importedNotes = 0;\n      let skippedNotes = 0;\n      const existingNotes = new Set<string>();\n\n      // 获取现有笔记列表（用于去重）\n      const notesResponse = await api.getNotes(10000, 0);\n      if (notesResponse.success && notesResponse.data) {\n        for (const note of notesResponse.data.notes) {\n          try {\n            const decrypted = await crypto.decrypt({\n              ciphertext: note.encrypted_content,\n              iv: note.iv,\n              algorithm: 'AES-256-GCM',\n            }, false);\n\n            let content = decrypted;\n            let tags = '';\n            try {\n              const parsed = JSON.parse(decrypted);\n              if (typeof parsed === 'object' && parsed.content !== undefined) {\n                content = typeof parsed.content === 'string' ? parsed.content : JSON.stringify(parsed.content);\n                tags = Array.isArray(parsed.tags) ? parsed.tags.sort().join(',') : '';\n              }\n            } catch {}\n\n            const title = String(note.title || '');\n            const identifier = `${title.trim()}|||${content.substring(0, 200)}|||${tags}`;\n            if (identifier !== '||||||') {\n              existingNotes.add(identifier);\n            }\n          } catch {}\n        }\n      }\n\n      for (let i = 0; i < importData.notes.length; i++) {\n        const note = importData.notes[i];\n\n        try {\n          // 检查是否重复：使用 title + content + tags 的组合\n          // 如果所有字段都为空，允许导入（不视为重复）\n          const content = String(note.content || '');\n          const title = String(note.title || '');\n          const tags = Array.isArray(note.tags) ? note.tags.sort().join(',') : '';\n\n          const identifier = `${title.trim()}|||${content.substring(0, 200)}|||${tags}`;\n\n          // 只有非空笔记才检查重复\n          if (identifier !== '||||||' && existingNotes.has(identifier)) {\n            skippedNotes++;\n            console.log('Skipped duplicate note:', note.title);\n            setImportProgress({ current: i + 1, total: totalItems });\n            continue;\n          }\n\n          const tagsArray = Array.isArray(note.tags) ? note.tags : [];\n\n          const encrypted = await crypto.encrypt(JSON.stringify({\n            content: content,\n            tags: tagsArray,\n          }));\n\n          const response = await api.createNote({\n            title: note.title,\n            encrypted_content: encrypted.ciphertext,\n            iv: encrypted.iv,\n          });\n\n          if (response.success) {\n            importedNotes++;\n            existingNotes.add(identifier);\n          }\n        } catch (error) {\n          console.error('Failed to import note:', error);\n        }\n\n        setImportProgress({ current: i + 1, total: totalItems });\n      }\n\n      // 导入密码\n      let importedPasswords = 0;\n      let skippedPasswords = 0;\n      const existingPasswords = new Set<string>();\n\n      // 获取现有密码列表（用于去重）\n      const passwordsResponse = await api.getPasswords(10000, 0);\n      if (passwordsResponse.success && passwordsResponse.data) {\n        for (const pwd of passwordsResponse.data.passwords) {\n          try {\n            const decrypted = await crypto.decrypt({\n              ciphertext: pwd.encrypted_site,\n              iv: pwd.iv,\n              algorithm: 'AES-256-GCM',\n            }, false);\n\n            let passwordData: { site?: string; username?: string; password?: string; notes?: string } = {};\n            try {\n              passwordData = JSON.parse(decrypted);\n            } catch {\n              // 旧格式兼容\n              const site = decrypted;\n              const username = await crypto.decrypt({\n                ciphertext: pwd.encrypted_username,\n                iv: pwd.iv,\n                algorithm: 'AES-256-GCM',\n              }, false);\n              passwordData = { site, username };\n            }\n            // 使用站点+用户名+密码作为去重标识（忽略大小写和前后空格）\n            const site = (passwordData.site || '').trim().toLowerCase();\n            const username = (passwordData.username || '').trim().toLowerCase();\n            const password = (passwordData.password || '').trim();\n            const identifier = `${site}|||${username}|||${password}`;\n            if (identifier !== '||||||') {\n              existingPasswords.add(identifier);\n            }\n          } catch {}\n        }\n      }\n\n      for (let i = 0; i < importData.passwords.length; i++) {\n        const pwd = importData.passwords[i];\n\n        try {\n          // 检查是否重复：使用 site + username + password 的组合（忽略大小写和前后空格）\n          // 如果所有字段都为空，允许导入（不视为重复）\n          const site = (pwd.site || '').trim().toLowerCase();\n          const username = (pwd.username || '').trim().toLowerCase();\n          const password = (pwd.password || '').trim();\n\n          const identifier = `${site}|||${username}|||${password}`;\n\n          // 只有非空密码才检查重复\n          if (identifier !== '||||||' && existingPasswords.has(identifier)) {\n            skippedPasswords++;\n            console.log('Skipped duplicate password:', pwd.site, pwd.username);\n            setImportProgress({ current: importData.notes.length + i + 1, total: totalItems });\n            continue;\n          }\n\n          const passwordData = {\n            site: pwd.site,\n            username: pwd.username,\n            password: pwd.password,\n            notes: pwd.notes || '',\n          };\n\n          const encrypted = await crypto.encrypt(JSON.stringify(passwordData));\n\n          const response = await api.createPassword({\n            encrypted_site: encrypted.ciphertext,\n            encrypted_username: encrypted.ciphertext,\n            encrypted_password: encrypted.ciphertext,\n            encrypted_notes: encrypted.ciphertext,\n            iv: encrypted.iv,\n          });\n\n          if (response.success) {\n            importedPasswords++;\n            existingPasswords.add(identifier); // 添加到已存在列表\n          }\n        } catch (error) {\n          console.error('Failed to import password:', error);\n        }\n\n        setImportProgress({ current: importData.notes.length + i + 1, total: totalItems });\n      }\n\n      // 显示结果\n      let resultMessage = t.dataManagement.importSuccess\n        .replace('{notes}', importedNotes.toString())\n        .replace('{passwords}', importedPasswords.toString());\n\n      if (skippedNotes > 0 || skippedPasswords > 0) {\n        const skippedParts: string[] = [];\n        if (skippedNotes > 0) {\n          skippedParts.push(language === 'zh-CN' ? `${skippedNotes} 个重复笔记` : `${skippedNotes} duplicate notes`);\n        }\n        if (skippedPasswords > 0) {\n          skippedParts.push(language === 'zh-CN' ? `${skippedPasswords} 个重复密码` : `${skippedPasswords} duplicate passwords`);\n        }\n        resultMessage += ` (${language === 'zh-CN' ? '跳过' : 'Skipped'} ${skippedParts.join(language === 'zh-CN' ? '、' : ' and ')})`;\n      }\n\n      setDataManagementMessage({\n        type: 'success',\n        text: resultMessage,\n      });\n\n      // 刷新数据\n      await loadNotes();\n      await loadPasswords();\n    } catch (error) {\n      console.error('Import failed:', error);\n      setDataManagementMessage({ type: 'error', text: t.dataManagement.importFailed });\n    } finally {\n      setImporting(false);\n      setImportProgress({ current: 0, total: 0 });\n\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // 导入数据\n  const handleImportData = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    // 🎭 Demo 模式：禁用导入功能\n    if (isDemoMode()) {\n      setDataManagementMessage({\n        type: 'error',\n        text: language === 'zh-CN'\n          ? '🎭 Demo 模式下不支持数据导入功能'\n          : '🎭 Data import is not available in Demo mode'\n      });\n      // 清空文件选择\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n      return;\n    }\n\n    if (!token || !crypto.isInitialized()) return;\n\n    try {\n      setImporting(true);\n      setDataManagementMessage(null);\n      api.setToken(token);\n\n      const text = await file.text();\n      const fileData = JSON.parse(text);\n\n      // 检测是否为加密文件\n      if (fileData.encrypted === true) {\n        // 加密文件，显示解密对话框\n        setPendingEncryptedFile(file);\n        setShowDecryptDialog(true);\n        setImporting(false);\n        return;\n      }\n\n      // 不支持明文文件导入\n      throw new Error(language === 'zh-CN' ? '仅支持加密备份文件导入，请使用加密导出功能' : 'Only encrypted backup files are supported');\n    } catch (error) {\n      console.error('Import failed:', error);\n      setDataManagementMessage({ type: 'error', text: t.dataManagement.importFailed });\n    } finally {\n      setImporting(false);\n      setImportProgress({ current: 0, total: 0 });\n      if (fileInputRef.current) fileInputRef.current.value = '';\n    }\n  };\n\n  // ========== 设备管理相关函数 ==========\n\n  // IP脱敏函数\n  const maskIP = (ip: string | null): string => {\n    if (!ip) return 'Unknown';\n    const ipv4Parts = ip.split('.');\n    if (ipv4Parts.length === 4) {\n      return `${ipv4Parts[0]}.***.***.${ipv4Parts[3]}`;\n    }\n    if (ip.includes(':')) {\n      const ipv6Parts = ip.split(':').filter(part => part !== '');\n      if (ipv6Parts.length === 0) return '::***';\n      if (ipv6Parts.length === 1) return `${ipv6Parts[0]}::***`;\n      const firstPart = ipv6Parts[0];\n      const lastPart = ipv6Parts[ipv6Parts.length - 1];\n      return `${firstPart}:****:****:****:****:****:****:${lastPart}`;\n    }\n    return ip;\n  };\n\n  // 切换IP可见性\n  const toggleIPVisibility = (sessionId: string) => {\n    setVisibleIPs(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(sessionId)) {\n        newSet.delete(sessionId);\n      } else {\n        newSet.add(sessionId);\n      }\n      return newSet;\n    });\n  };\n\n  // 加载设备列表\n  const loadSessions = async () => {\n    try {\n      setDevicesError('');\n\n      // 🎭 Demo 模式：使用虚拟设备列表\n      if (isDemoMode()) {\n        setSessions(demoSessions);\n        setMaxDevices(5);\n        setDevicesLoading(false);\n        setDevicesRefreshing(false);\n        return;\n      }\n\n      const response = await api.getSessions();\n      if (!response.success || !response.data) {\n        setDevicesError(response.error?.message || t.errors.loadNotesFailed);\n        return;\n      }\n      setSessions(response.data.sessions);\n      setMaxDevices(response.data.max_devices);\n      const deviceId = getOrCreateDeviceId();\n      setCurrentDeviceId(deviceId);\n      const expiry = await getKeyExpiry(deviceId);\n      setAutoUnlockExpiry(expiry);\n    } catch (err: any) {\n      setDevicesError(err.message || t.errors.loadNotesFailed);\n    } finally {\n      setDevicesLoading(false);\n      setDevicesRefreshing(false);\n    }\n  };\n\n  // 刷新设备列表\n  const handleRefreshDevices = () => {\n    setDevicesRefreshing(true);\n    loadSessions();\n  };\n\n  // 关闭自动解锁\n  const handleDisableAutoUnlock = async () => {\n    try {\n      await clearEncryptionKey(currentDeviceId);\n      setAutoUnlockExpiry(null);\n      setDevicesSuccessMessage(language === 'zh-CN' ? '已关闭自动解锁' : 'Auto-unlock disabled');\n      setTimeout(() => setDevicesSuccessMessage(''), 3000);\n    } catch (err: any) {\n      setDevicesError((language === 'zh-CN' ? '关闭自动解锁失败：' : 'Failed to disable auto-unlock: ') + err.message);\n    }\n  };\n\n  // 登出指定设备\n  const handleLogoutDevice = async (sessionId: string) => {\n    setLoggingOut(prev => new Set(prev).add(sessionId));\n    setDevicesError('');\n    try {\n      const response = await api.revokeSession(sessionId);\n      if (!response.success) {\n        setDevicesError(response.error?.message || t.devices.logoutFailed);\n        return;\n      }\n      setSessions(sessions.map(s => s.id === sessionId ? { ...s, is_active: false } : s));\n      setDevicesSuccessMessage(t.devices.logoutSuccess);\n      setTimeout(() => setDevicesSuccessMessage(''), 3000);\n    } catch (err: any) {\n      setDevicesError(err.message || t.devices.logoutFailed);\n    } finally {\n      setLoggingOut(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(sessionId);\n        return newSet;\n      });\n    }\n  };\n\n  // 格式化时间\n  const formatDeviceTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    if (date.toDateString() === now.toDateString()) {\n      return `${t.common.today} ${date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })}`;\n    }\n    const yesterday = new Date(now);\n    yesterday.setDate(yesterday.getDate() - 1);\n    if (date.toDateString() === yesterday.toDateString()) {\n      return `${t.common.yesterday} ${date.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' })}`;\n    }\n    return date.toLocaleString('zh-CN', { month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' });\n  };\n\n  // 格式化过期时间\n  const formatExpiryTime = (timestamp: number) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 获取设备类型翻译\n  const getDeviceTypeLabel = (type: string | null) => {\n    if (!type) return t.devices.types.unknown;\n    switch (type) {\n      case 'desktop': return t.devices.types.desktop;\n      case 'mobile': return t.devices.types.mobile;\n      case 'tablet': return t.devices.types.tablet;\n      default: return t.devices.types.unknown;\n    }\n  };\n\n  // 打开设备管理对话框时加载数据\n  useEffect(() => {\n    if (showDevicesDialog && sessions.length === 0) {\n      setDevicesLoading(true);\n      loadSessions();\n    }\n  }, [showDevicesDialog]);\n\n  return (\n    <div className=\"h-dvh overflow-hidden flex flex-col bg-gradient-to-br from-blue-50 via-purple-50 to-pink-50 dark:from-gray-900 dark:via-purple-900/20 dark:to-blue-900/20\">\n      {/* 🎭 Demo 模式横幅提示 */}\n      {isDemoMode() && (\n        <div className=\"bg-gradient-to-r from-purple-500 to-indigo-500 text-white px-6 py-3 text-center text-sm font-medium\">\n          {DEMO_MODE_MESSAGE[language]}\n        </div>\n      )}\n\n      {/* 顶部导航栏 */}\n      <header className=\"bg-white/80 dark:bg-gray-800/50 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700 sticky top-0 z-10\">\n        <div className=\"max-w-[1800px] mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-3\">\n              <img\n                src={`${import.meta.env.BASE_URL}logo.svg`}\n                alt=\"AnyNote\"\n                className=\"w-8 h-8 select-none\"\n              />\n              <h1 className=\"text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-blue-400\">\n                AnyNote\n              </h1>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              {/* 主题切换 */}\n              <button\n                onClick={() => {\n                  setTheme(theme === 'light' ? 'dark' : 'light');\n                }}\n                className=\"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors p-1.5 hover:bg-gray-200 dark:hover:bg-gray-700/50 rounded-lg\"\n                title={theme === 'light' ? t.nav.themeDark : t.nav.themeLight}\n              >\n                {theme === 'light' ? (\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n                  </svg>\n                ) : (\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n                  </svg>\n                )}\n              </button>\n\n              {/* 语言切换 */}\n              <button\n                onClick={() => setLanguage(language === 'zh-CN' ? 'en-US' : 'zh-CN')}\n                className=\"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors px-2 py-1.5 hover:bg-gray-200 dark:hover:bg-gray-700/50 rounded-lg text-sm font-medium\"\n                title={language === 'zh-CN' ? 'Switch to English' : '切换到中文'}\n              >\n                {language === 'zh-CN' ? 'EN' : '中'}\n              </button>\n\n              <div className=\"h-4 w-px bg-gray-300 dark:bg-gray-700\" />\n\n              {/* 用户头像下拉菜单 */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowUserMenu(!showUserMenu)}\n                  className=\"flex items-center gap-2 hover:opacity-80 transition-opacity\"\n                  title={user?.email}\n                >\n                  <div className={`w-8 h-8 rounded-full ${getAvatarColor(user?.email || '')} flex items-center justify-center text-white font-semibold text-sm`}>\n                    {getAvatarInitial(decryptedNickname || user?.email || '')}\n                  </div>\n                </button>\n\n                {/* 下拉菜单面板 */}\n                {showUserMenu && (\n                  <>\n                    {/* 背景遮罩（点击关闭菜单） */}\n                    <div\n                      className=\"fixed inset-0 z-10\"\n                      onClick={() => setShowUserMenu(false)}\n                    />\n\n                    {/* 菜单内容 */}\n                    <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-20 overflow-hidden\">\n                      {/* 用户信息 */}\n                      <div className=\"px-3 py-2.5 border-b border-gray-200 dark:border-gray-700\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className={`w-9 h-9 rounded-full ${getAvatarColor(user?.email || '')} flex items-center justify-center text-white font-semibold text-sm flex-shrink-0`}>\n                            {getAvatarInitial(decryptedNickname || user?.email || '')}\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                              {decryptedNickname || user?.email}\n                            </p>\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                              {decryptedNickname ? maskEmail(user?.email || '') : (t.nav.account || '账号')}\n                            </p>\n                          </div>\n                          {/* 编辑昵称按钮 */}\n                          <button\n                            onClick={handleOpenNicknameDialog}\n                            className=\"flex-shrink-0 p-1 rounded text-gray-500 hover:text-blue-500 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-colors\"\n                            title={t.nav.editNickname}\n                          >\n                            <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n\n                      {/* 设备管理按钮 */}\n                      <button\n                        onClick={() => {\n                          setShowUserMenu(false);\n                          setShowDevicesDialog(true);\n                        }}\n                        className=\"w-full px-3 py-2.5 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors flex items-center gap-2\"\n                      >\n                        <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                        </svg>\n                        <span className=\"truncate\">{t.nav.devices}</span>\n                      </button>\n\n                      {/* 数据管理按钮 */}\n                      <button\n                        onClick={() => {\n                          setShowUserMenu(false);\n                          setShowDataManagementDialog(true);\n                        }}\n                        className=\"w-full px-3 py-2.5 text-left text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors flex items-center gap-2\"\n                      >\n                        <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                        </svg>\n                        <span className=\"truncate\">{t.nav.dataManagement}</span>\n                      </button>\n\n                      {/* 退出登录按钮 */}\n                      <button\n                        onClick={handleLogout}\n                        className=\"w-full px-3 py-2.5 text-left text-sm text-red-600 dark:text-red-400 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors flex items-center gap-2\"\n                      >\n                        <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                        </svg>\n                        <span className=\"truncate\">{t.nav.logout}</span>\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* 错误提示 */}\n      {error && (\n        <div className=\"fixed top-20 right-6 z-50 animate-fade-in\">\n          <div className=\"bg-red-500/90 backdrop-blur-sm text-white px-4 py-3 rounded-lg shadow-lg flex items-center gap-2 max-w-md\">\n            <svg className=\"w-5 h-5 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <span className=\"font-medium flex-1\">{error}</span>\n            <button\n              onClick={() => setError('')}\n              className=\"ml-2 p-0.5 hover:bg-red-600/50 rounded transition-colors flex-shrink-0\"\n              title={language === 'zh-CN' ? '关闭' : 'Close'}\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {toast && <Toast message={toast.message} variant={toast.variant} onClose={hideToast} />}\n\n      {/* 主内容区域：三卡片布局 */}\n      <div className=\"flex-1 overflow-hidden flex flex-col py-6\">\n        <div className=\"max-w-[1800px] mx-auto px-4 sm:px-6 flex-1 flex flex-col min-h-0 min-w-0 w-full\">\n        {isFullscreen ? (\n          /* 全屏编辑模式 */\n          <div className=\"flex flex-col h-[calc(90vh-65px)]\">\n            {/* 全屏模式顶部工具栏 */}\n            <div className=\"flex items-center justify-between mb-4 px-3 py-3 bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg flex-shrink-0\">\n              <div className=\"flex items-center gap-3\">\n                <h2 className=\"text-base md:text-lg font-semibold text-gray-900 dark:text-white truncate\">\n                  {selectedNote ? t.notes.editNote : t.notes.newNoteTitle}<span className=\"hidden sm:inline\"> - {t.notes.fullscreenMode}</span>\n                </h2>\n                {/* 💡 优化：自动保存状态指示器（全屏模式） - 移动端隐藏 */}\n                {selectedNote && (\n                  <div className=\"hidden sm:flex items-center\">\n                    {saveStatus === 'saving' && (\n                      <span className=\"text-xs text-blue-600 dark:text-blue-400 flex items-center gap-1 ml-2 flex-shrink-0\">\n                        <svg className=\"animate-spin h-3 w-3 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        <span>{t.common.saving}</span>\n                      </span>\n                    )}\n                    {saveStatus === 'saved' && lastSaveTimeRef.current > 0 && (\n                      <span className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center gap-1 ml-2 flex-shrink-0\">\n                        <svg className=\"w-3 h-3 text-green-600 dark:text-green-400 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                        <span>{formatSaveTime(lastSaveTimeRef.current)}</span>\n                      </span>\n                    )}\n                    {saveStatus === 'error' && (\n                      <span className=\"text-xs text-red-600 dark:text-red-400 flex items-center gap-1 ml-2\">\n                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                        {t.common.saveFailed}\n                      </span>\n                    )}\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={() => setIsFullscreen(false)}\n                  className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                  title={t.notes.exitFullscreen}\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n                <button\n                  onClick={() => handleSaveNote(false)}\n                  disabled={saving}\n                  className=\"px-2.5 py-1.5 sm:px-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1.5\"\n                >\n                  {saving && (\n                    <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                  )}\n                  <span className=\"text-sm\">{t.common.save}</span>\n                </button>\n              </div>\n            </div>\n            {/* 全屏编辑区域：桌面端左右分屏，移动端仅编辑器 */}\n            <div className=\"flex-1 flex flex-col md:flex-row gap-4 md:gap-6 overflow-hidden\">\n              {/* 编辑器区域 */}\n              <div className=\"flex-1 flex flex-col\">\n                <textarea\n                  value={noteContent}\n                  onChange={(e) => {\n                    const newValue = e.target.value;\n\n                    // 达到上限时提示\n                    if (newValue.length >= 100000 && noteContent.length < 100000) {\n                      setError(language === 'zh-CN'\n                        ? '⚠️ 笔记内容已达上限（100,000 字符）'\n                        : '⚠️ Note content limit reached (100,000 chars)');\n                      setTimeout(() => setError(''), 5000);\n                    }\n\n                    setNoteContent(newValue);\n                    setSaveStatus('unsaved'); // ⚠️ 关键修复：标记为未保存\n                  }}\n                  placeholder={t.notes.contentPlaceholder}\n                  maxLength={100000}\n                  className=\"flex-1 px-4 md:px-6 py-4 bg-white/50 dark:bg-gray-900/50 backdrop-blur-sm border border-white/60 dark:border-white/10 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-600 focus:outline-none focus:border-blue-400/60 focus:bg-white/70 dark:focus:bg-gray-900/70 transition-all font-mono text-sm md:text-base resize-none overflow-y-auto leading-relaxed\"\n                  style={{\n                    fontFamily: \"'JetBrains Mono', 'Fira Code', 'Consolas', monospace\",\n                  }}\n                />\n                {/* 字符统计和警告提示 */}\n                <div className=\"flex items-center justify-between px-4 py-2 text-xs bg-gray-50 dark:bg-gray-800/50 rounded-b-lg -mt-1 border-t border-gray-200 dark:border-gray-700\">\n                  <span className={`font-medium ${\n                    noteContent.length > 90000 ? 'text-red-600 dark:text-red-400' :\n                    noteContent.length > 75000 ? 'text-orange-600 dark:text-orange-400' :\n                    'text-gray-500 dark:text-gray-400'\n                  }`}>\n                    {noteContent.length.toLocaleString()} / 100,000 {language === 'zh-CN' ? '字符' : 'chars'}\n                  </span>\n                  {noteContent.length > 75000 && noteContent.length <= 90000 && (\n                    <span className=\"flex items-center gap-1 text-orange-600 dark:text-orange-400\">\n                      <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                      </svg>\n                      {language === 'zh-CN' ? '笔记较长，建议拆分' : 'Note is long, consider splitting'}\n                    </span>\n                  )}\n                  {noteContent.length > 90000 && (\n                    <span className=\"flex items-center gap-1 text-red-600 dark:text-red-400 font-medium\">\n                      <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                      </svg>\n                      {language === 'zh-CN' ? '即将达到上限！' : 'Approaching limit!'}\n                    </span>\n                  )}\n                </div>\n              </div>\n              {/* 实时预览（仅桌面端显示） */}\n              <div className=\"hidden md:flex flex-1 flex-col overflow-hidden bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded-lg\">\n                {/* Markdown 预览内容 */}\n                <div className=\"flex-1 overflow-y-auto p-6\">\n                  <div className=\"markdown-preview prose dark:prose-invert max-w-none\">\n                  <MarkdownErrorBoundary\n                    onError={(error) => {\n                      console.error('[Markdown渲染错误]', error);\n                    }}\n                  >\n                    {cachedMarkdownPreview}\n                  </MarkdownErrorBoundary>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 flex-1 min-h-0 w-full\">\n            {/* 左侧栏：统一标签页面板（笔记 + 密码）- 移动端根据状态隐藏 */}\n            <div className={`md:col-span-1 flex flex-col min-h-0 ${\n              (showNoteEditor || selectedPassword || (activePanel === 'passwords' && passwordViewMode === 'edit')) ? 'hidden md:flex' : ''\n            }`}>\n              <div className=\"card !px-6 !py-3 bg-white/70 dark:bg-gray-900/70 backdrop-blur-2xl border border-white/60 dark:border-white/20 shadow-[0_30px_80px_-35px_rgba(37,99,235,0.4)] dark:shadow-[0_30px_80px_-35px_rgba(96,165,250,0.5)] rounded-2xl flex-1 flex flex-col overflow-hidden min-h-0\">\n\n                {/* 标签页导航栏 */}\n                <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n                  <button\n                    onClick={() => handlePanelSwitch('notes')}\n                    className={`flex-1 px-4 py-2 text-sm font-medium transition-all hover:scale-[1.02] ${\n                      activePanel === 'notes'\n                        ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400 bg-blue-50 dark:bg-blue-500/10'\n                        : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700/30'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                      </svg>\n                      {t.notes.listTitle}\n                    </div>\n                  </button>\n\n                  <button\n                    onClick={() => handlePanelSwitch('passwords')}\n                    className={`flex-1 px-4 py-2 text-sm font-medium transition-all hover:scale-[1.02] ${\n                      activePanel === 'passwords'\n                        ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400 bg-blue-50 dark:bg-blue-500/10'\n                        : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700/30'\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-center gap-2\">\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                      </svg>\n                      {t.passwords.listTitle}\n                    </div>\n                  </button>\n                </div>\n\n                {/* 笔记列表（使用 hidden 保持 DOM 状态）*/}\n                <div className={`flex-1 flex flex-col overflow-hidden ${\n                  activePanel === 'notes' ? '' : 'hidden'\n                }`}>\n                  <div className=\"py-2\">\n                    {/* 配额指示器 */}\n                    {notesQuota && notesQuota.warning && !notesQuotaDismissed && (\n                      <div className={`mb-3 px-3 py-2 rounded-lg border text-sm ${\n                        notesQuota.allowed\n                          ? 'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300'\n                          : 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-700 dark:text-red-300'\n                      }`}>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"flex-1\">\n                            {notesQuota.allowed\n                              ? (language === 'zh-CN' ? '数量较多，建议精简' : 'Too many notes, clean up')\n                              : (language === 'zh-CN' ? '已达上限，请删除旧笔记' : 'Limit reached, delete old notes')\n                            }\n                          </span>\n                          <span className=\"font-medium whitespace-nowrap\">{notesQuota.current}/{notesQuota.hardLimit}</span>\n                          <button\n                            onClick={handleDismissNotesQuota}\n                            className=\"ml-1 p-0.5 hover:bg-orange-200 dark:hover:bg-orange-800 rounded transition-colors\"\n                            title={language === 'zh-CN' ? '关闭提示' : 'Dismiss'}\n                          >\n                            <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* 搜索框 + 分页大小选择器 + 新建按钮 */}\n                    <div className=\"flex gap-2 mb-3\">\n                      {/* 搜索框 */}\n                      <div className=\"relative flex-1\">\n                        <input\n                          type=\"text\"\n                          value={searchInput}\n                          onChange={(e) => setSearchInput(e.target.value)}\n                          onKeyDown={(e) => e.key === 'Enter' && handleNoteSearchSubmit()}\n                          placeholder={language === 'zh-CN' ? '搜索笔记...' : 'Search...'}\n                          maxLength={16}\n                          className=\"w-full px-3 py-2 pl-9 pr-12 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-sm text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n                        />\n                        <svg className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                        </svg>\n                        <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-1\">\n                          {searchInput && (\n                            <button\n                              onClick={() => {\n                                setSearchInput('');\n                                setSearchQuery('');\n                              }}\n                              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                              title={language === 'zh-CN' ? '清空' : 'Clear'}\n                            >\n                              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          )}\n                          {searchInput && (\n                            <button\n                              onClick={handleNoteSearchSubmit}\n                              className=\"p-1 text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n                              title={language === 'zh-CN' ? '搜索' : 'Search'}\n                            >\n                              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n\n                      {/* 分页大小选择器 */}\n                      <select\n                        value={itemsPerPage}\n                        onChange={(e) => {\n                          const newSize = Number(e.target.value) as 25 | 50 | 100;\n                          useSettingsStore.getState().setItemsPerPage(newSize);\n                          setNoteCurrentPage(1); // 重置到第一页\n                          if (notePaginationMode === 'server') {\n                            loadNotes(1, newSize); // 后端分页：重新加载数据\n                          }\n                          // 客户端分页：useMemo 自动重新计算，无需操作\n                        }}\n                        className=\"px-2 py-2 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-sm text-gray-900 dark:text-white focus:outline-none focus:border-blue-500/50 transition-colors cursor-pointer appearance-none pr-8 bg-[url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%3E%3Cpath%20fill%3D%22%23666%22%20d%3D%22M6%209L1%204h10z%22%2F%3E%3C%2Fsvg%3E')] bg-[length:12px_12px] bg-[position:right_0.5rem_center] bg-no-repeat\"\n                        title={language === 'zh-CN' ? '每页显示数量' : 'Items per page'}\n                      >\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                      </select>\n\n                      {/* 新建按钮 */}\n                      <button\n                        onClick={handleNewNote}\n                        className=\"p-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30\"\n                        title={t.common.new}\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {loading ? (\n                    <p className=\"text-center text-gray-500 dark:text-gray-500 py-8\">{t.notes.loading}</p>\n                  ) : notePagination.totalItems === 0 ? (\n                    <p className=\"text-center text-gray-500 dark:text-gray-500 py-8 text-sm\">\n                      {searchQuery ? (language === 'zh-CN' ? `未找到包含 \"${searchQuery}\" 的笔记` : `No notes found for \"${searchQuery}\"`) : t.notes.noNotes}\n                    </p>\n                  ) : (\n                    <>\n                    <div className=\"space-y-2 overflow-y-auto py-2 flex-1\">\n                      {notePagination.items.map((note) => (\n                        <div\n                          key={note.id}\n                          className={`relative p-2 rounded-lg transition-all group ${\n                            selectedNote?.id === note.id && activePanel === 'notes'\n                              ? 'bg-blue-100/70 dark:bg-blue-500/30 backdrop-blur-md border-2 border-blue-400/60 dark:border-blue-400/40 shadow-lg shadow-blue-500/20'\n                              : 'bg-white/40 dark:bg-gray-800/40 backdrop-blur-md hover:bg-white/60 dark:hover:bg-gray-800/60 border-2 border-white/40 dark:border-white/10 hover:border-white/60 dark:hover:border-white/20 hover:shadow-md'\n                          }`}\n                        >\n                          <button\n                            onClick={() => handleSelectNote(note)}\n                            className=\"w-full text-left\"\n                          >\n                            <h3\n                              className=\"font-medium text-gray-900 dark:text-white truncate text-sm pr-8\"\n                              title={note.title || t.notes.untitled}\n                            >\n                              {note.title || t.notes.untitled}\n                            </h3>\n                            <p\n                              className=\"text-xs text-gray-600 dark:text-gray-400 truncate mt-1\"\n                              title={note.content && typeof note.content === 'string' ? note.content.substring(0, 100) : ''}\n                            >\n                              {note.content && typeof note.content === 'string' ? note.content.substring(0, 50) + '...' : ''}\n                            </p>\n\n                            {/* 标签显示 */}\n                            {note.tags && note.tags.length > 0 && (\n                              <div className=\"flex flex-wrap gap-1 mt-2\">\n                                {note.tags.slice(0, 3).map((tag, index) => (\n                                  <span\n                                    key={index}\n                                    className=\"inline-flex items-center px-2 py-0.5 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 text-xs rounded border border-blue-200 dark:border-blue-800\"\n                                  >\n                                    {tag}\n                                  </span>\n                                ))}\n                                {note.tags.length > 3 && (\n                                  <span className=\"inline-flex items-center px-2 py-0.5 text-gray-500 dark:text-gray-400 text-xs\">\n                                    +{note.tags.length - 3}\n                                  </span>\n                                )}\n                              </div>\n                            )}\n\n                            <p className=\"text-xs text-gray-500 dark:text-gray-500 mt-1\">\n                              {new Date(note.updated_at * 1000).toLocaleDateString(language === 'zh-CN' ? 'zh-CN' : 'en-US')}\n                            </p>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              setSelectedNote(note);\n                              handleDeleteNote();\n                            }}\n                            className=\"absolute top-2 right-2 visible md:invisible md:group-hover:visible text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 p-1\"\n                            title={t.common.delete}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n\n                    {/* 💡 笔记分页器 */}\n                    <Paginator\n                      currentPage={notePagination.currentPage}\n                      totalPages={notePagination.totalPages}\n                      totalItems={notePagination.totalItems}\n                      onPageChange={(newPage) => {\n                        setNoteCurrentPage(newPage);\n                        if (notePaginationMode === 'server') {\n                          loadNotes(newPage, itemsPerPage); // 后端分页：重新加载数据\n                        }\n                        // 客户端分页：useMemo 自动重新计算，无需操作\n                      }}\n                    />\n                    </>\n                  )}\n                </div>\n\n                {/* 密码列表（使用 hidden 保持 DOM 状态）*/}\n                <div className={`flex-1 flex flex-col overflow-hidden ${\n                  activePanel === 'passwords' ? '' : 'hidden'\n                }`}>\n                  <div className=\"py-2\">\n                    {/* 配额指示器 */}\n                    {passwordsQuota && passwordsQuota.warning && !passwordsQuotaDismissed && (\n                      <div className={`mb-3 px-3 py-2 rounded-lg border text-sm ${\n                        passwordsQuota.allowed\n                          ? 'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300'\n                          : 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-700 dark:text-red-300'\n                      }`}>\n                        <div className=\"flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                          </svg>\n                          <span className=\"flex-1\">\n                            {passwordsQuota.allowed\n                              ? (language === 'zh-CN' ? '数量较多，建议精简' : 'Too many passwords, clean up')\n                              : (language === 'zh-CN' ? '已达上限，请删除旧密码' : 'Limit reached, delete old passwords')\n                            }\n                          </span>\n                          <span className=\"font-medium whitespace-nowrap\">{passwordsQuota.current}/{passwordsQuota.hardLimit}</span>\n                          <button\n                            onClick={handleDismissPasswordsQuota}\n                            className=\"ml-1 p-0.5 hover:bg-orange-200 dark:hover:bg-orange-800 rounded transition-colors\"\n                            title={language === 'zh-CN' ? '关闭提示' : 'Dismiss'}\n                          >\n                            <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                          </button>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* 搜索框 + 分页大小选择器 + 新建按钮 */}\n                    <div className=\"flex gap-2 mb-3\">\n                      {/* 搜索框 */}\n                      <div className=\"relative flex-1\">\n                        <input\n                          type=\"text\"\n                          value={searchInputPassword}\n                          onChange={(e) => setSearchInputPassword(e.target.value)}\n                          onKeyDown={(e) => e.key === 'Enter' && handlePasswordSearchSubmit()}\n                          placeholder={language === 'zh-CN' ? '搜索密码...' : 'Search...'}\n                          maxLength={16}\n                          className=\"w-full px-3 py-2 pl-9 pr-12 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-sm text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n                        />\n                        <svg className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 dark:text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                        </svg>\n                        <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-1\">\n                          {searchInputPassword && (\n                            <button\n                              onClick={() => {\n                                setSearchInputPassword('');\n                                setSearchQueryPassword('');\n                              }}\n                              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                              title={language === 'zh-CN' ? '清空' : 'Clear'}\n                            >\n                              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          )}\n                          {searchInputPassword && (\n                            <button\n                              onClick={handlePasswordSearchSubmit}\n                              className=\"p-1 text-blue-500 hover:text-blue-600 dark:text-blue-400 dark:hover:text-blue-300 transition-colors\"\n                              title={language === 'zh-CN' ? '搜索' : 'Search'}\n                            >\n                              <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n\n                      {/* 分页大小选择器 */}\n                      <select\n                        value={itemsPerPage}\n                        onChange={(e) => {\n                          const newSize = Number(e.target.value) as 25 | 50 | 100;\n                          useSettingsStore.getState().setItemsPerPage(newSize);\n                          setPasswordCurrentPage(1); // 重置到第一页\n                          if (passwordPaginationMode === 'server') {\n                            loadPasswords(1, newSize); // 后端分页：重新加载数据\n                          }\n                          // 客户端分页：useMemo 自动重新计算，无需操作\n                        }}\n                        className=\"px-2 py-2 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-sm text-gray-900 dark:text-white focus:outline-none focus:border-blue-500/50 transition-colors cursor-pointer appearance-none pr-8 bg-[url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2212%22%20height%3D%2212%22%20viewBox%3D%220%200%2012%2012%22%3E%3Cpath%20fill%3D%22%23666%22%20d%3D%22M6%209L1%204h10z%22%2F%3E%3C%2Fsvg%3E')] bg-[length:12px_12px] bg-[position:right_0.5rem_center] bg-no-repeat\"\n                        title={language === 'zh-CN' ? '每页显示数量' : 'Items per page'}\n                      >\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                        <option value=\"100\">100</option>\n                      </select>\n\n                      {/* 新建按钮 */}\n                      <button\n                        onClick={handleNewPassword}\n                        className=\"p-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30\"\n                        title={t.common.new}\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n\n                  {passwordPagination.totalItems === 0 ? (\n                    <p className=\"text-center text-gray-500 dark:text-gray-500 py-8 text-sm\">\n                      {searchQueryPassword ? (language === 'zh-CN' ? `未找到包含 \"${searchQueryPassword}\" 的密码` : `No passwords found for \"${searchQueryPassword}\"`) : t.passwords.noPasswords}\n                    </p>\n                  ) : (\n                    <>\n                    <div className=\"space-y-2 overflow-y-auto py-2 flex-1\">\n                      {passwordPagination.items.map((pwd) => (\n                        <div\n                          key={pwd.id}\n                          className={`relative p-2 rounded-lg transition-all group ${\n                            selectedPassword?.id === pwd.id && activePanel === 'passwords'\n                              ? 'bg-blue-100/70 dark:bg-blue-500/30 backdrop-blur-md border-2 border-blue-400/60 dark:border-blue-400/40 shadow-lg shadow-blue-500/20'\n                              : 'bg-white/40 dark:bg-gray-800/40 backdrop-blur-md hover:bg-white/60 dark:hover:bg-gray-800/60 border-2 border-white/40 dark:border-white/10 hover:border-white/60 dark:hover:border-white/20 hover:shadow-md'\n                          }`}\n                        >\n                          <button\n                            onClick={() => handleSelectPassword(pwd)}\n                            className=\"w-full text-left\"\n                          >\n                            <h3\n                              className=\"font-medium text-gray-900 dark:text-white truncate text-sm pr-8\"\n                              title={pwd.site}\n                            >\n                              {pwd.site}\n                            </h3>\n                            <p\n                              className=\"text-xs text-gray-600 dark:text-gray-400 truncate mt-1\"\n                              title={pwd.username}\n                            >\n                              {pwd.username}\n                            </p>\n                            <p className=\"text-xs text-gray-500 dark:text-gray-500 mt-1\">\n                              {new Date(pwd.updated_at * 1000).toLocaleDateString(language === 'zh-CN' ? 'zh-CN' : 'en-US')}\n                            </p>\n                          </button>\n                          <button\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              setSelectedPassword(pwd);\n                              handleDeletePassword();\n                            }}\n                            className=\"absolute top-2 right-2 visible md:invisible md:group-hover:visible text-red-600 dark:text-red-400 hover:text-red-700 dark:hover:text-red-300 p-1\"\n                            title={t.common.delete}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                            </svg>\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n\n                    {/* 💡 密码分页器 */}\n                    <Paginator\n                      currentPage={passwordPagination.currentPage}\n                      totalPages={passwordPagination.totalPages}\n                      totalItems={passwordPagination.totalItems}\n                      onPageChange={(newPage) => {\n                        setPasswordCurrentPage(newPage);\n                        if (passwordPaginationMode === 'server') {\n                          loadPasswords(newPage, itemsPerPage); // 后端分页：重新加载数据\n                        }\n                        // 客户端分页：useMemo 自动重新计算，无需操作\n                      }}\n                    />\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n\n          {/* 右侧：编辑器卡片 - 移动端根据状态显示 */}\n          <div className={`md:col-span-2 card !px-6 !py-3 bg-white/70 dark:bg-gray-900/70 backdrop-blur-2xl border border-white/60 dark:border-white/20 shadow-[0_30px_80px_-35px_rgba(37,99,235,0.4)] dark:shadow-[0_30px_80px_-35px_rgba(96,165,250,0.5)] rounded-2xl min-h-0 ${\n            (activePanel === 'notes' && !showNoteEditor) || (activePanel === 'passwords' && !selectedPassword && passwordViewMode === 'preview') ? 'hidden md:flex md:flex-col' : 'flex flex-col'\n          }`}>\n            {/* 笔记编辑器 */}\n            {activePanel === 'notes' && (\n              <>\n                {!showNoteEditor ? (\n                  // Markdown 教程欢迎页\n                  <div className=\"flex-1 overflow-y-auto py-2\">\n                    <div className=\"max-w-3xl mx-auto\">\n                      <div className=\"prose dark:prose-invert max-w-none\">\n                        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">{t.markdownTutorial.syntaxGuide}</h2>\n\n                        <div className=\"space-y-6\">\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.heading.title}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`# ${language === 'zh-CN' ? '一级标题' : 'Heading 1'}\n## ${language === 'zh-CN' ? '二级标题' : 'Heading 2'}\n### ${language === 'zh-CN' ? '三级标题' : 'Heading 3'}\n#### ${language === 'zh-CN' ? '四级标题' : 'Heading 4'}`}\n                            </pre>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm mt-2\">{t.markdownTutorial.heading.warning}</p>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.textStyle}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`**${language === 'zh-CN' ? '粗体文字' : 'Bold Text'}**\n*${language === 'zh-CN' ? '斜体文字' : 'Italic Text'}*\n~~${language === 'zh-CN' ? '删除线' : 'Strikethrough'}~~\n\\`${language === 'zh-CN' ? '行内代码' : 'Inline Code'}\\``}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.list}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`- ${language === 'zh-CN' ? '无序列表项 1' : 'Unordered List Item 1'}\n- ${language === 'zh-CN' ? '无序列表项 2' : 'Unordered List Item 2'}\n\n1. ${language === 'zh-CN' ? '有序列表项 1' : 'Ordered List Item 1'}\n2. ${language === 'zh-CN' ? '有序列表项 2' : 'Ordered List Item 2'}`}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.codeBlock}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`\\`\\`\\`javascript\nfunction hello() {\n  console.log(\"Hello World!\");\n}\n\\`\\`\\``}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.link}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`[${language === 'zh-CN' ? '链接文字' : 'Link Text'}](https://example.com)\n![${language === 'zh-CN' ? '图片描述' : 'Image Description'}](https://example.com/image.png)`}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.quote}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`> ${language === 'zh-CN' ? '这是一段引用文字' : 'This is a quote'}\n> ${language === 'zh-CN' ? '可以有多行' : 'Can have multiple lines'}`}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.table}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`| ${language === 'zh-CN' ? '列1' : 'Col 1'} | ${language === 'zh-CN' ? '列2' : 'Col 2'} | ${language === 'zh-CN' ? '列3' : 'Col 3'} |\n| --- | --- | --- |\n| ${language === 'zh-CN' ? '内容1' : 'Content 1'} | ${language === 'zh-CN' ? '内容2' : 'Content 2'} | ${language === 'zh-CN' ? '内容3' : 'Content 3'} |`}\n                            </pre>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">{t.markdownTutorial.separator}</h3>\n                            <pre className=\"text-sm text-green-700 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded overflow-x-auto\">\n{`---`}\n                            </pre>\n                          </div>\n                        </div>\n\n                        <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-6 mt-8\">\n                          <h2 className=\"text-xl font-bold text-blue-700 dark:text-blue-300 mb-3\">{t.markdownTutorial.tips.title}</h2>\n                          <ul className=\"list-disc list-inside text-gray-700 dark:text-gray-300 space-y-2\">\n                            {t.markdownTutorial.tips.items.map((tip, index) => (\n                              <li key={index}>{tip}</li>\n                            ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex items-center justify-between py-2 border-b border-gray-300 dark:border-gray-700\">\n                      <div className=\"flex items-center gap-3\">\n                        <button\n                          onClick={handleBack}\n                          className=\"md:hidden p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                          title={t.common.back}\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                          </svg>\n                        </button>\n                        <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                          {selectedNote ? (viewMode === 'preview' ? t.notes.noteDetails : t.notes.editNote) : t.notes.newNoteTitle}\n                        </h2>\n                        {/* 💡 优化：自动保存状态指示器（标题右侧） - 移动端隐藏 */}\n                        {selectedNote && (\n                          <div className=\"hidden sm:flex items-center\">\n                            {saveStatus === 'saving' && (\n                              <span className=\"text-xs text-blue-600 dark:text-blue-400 flex items-center gap-1 ml-2 flex-shrink-0\">\n                                <svg className=\"animate-spin h-3 w-3 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                </svg>\n                                <span>{t.common.saving}</span>\n                              </span>\n                            )}\n                            {saveStatus === 'saved' && lastSaveTimeRef.current > 0 && (\n                              <span className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center gap-1 ml-2 flex-shrink-0\">\n                                <svg className=\"w-3 h-3 text-green-600 dark:text-green-400 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                                </svg>\n                                <span>{formatSaveTime(lastSaveTimeRef.current)}</span>\n                              </span>\n                            )}\n                            {saveStatus === 'error' && (\n                              <span className=\"text-xs text-red-600 dark:text-red-400 flex items-center gap-1 ml-2\">\n                                <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                                {t.common.saveFailed}\n                              </span>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"flex items-center gap-1.5 sm:gap-2\">\n                        <button\n                          onClick={handleBack}\n                          className=\"hidden md:flex p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                          title={t.common.back}\n                        >\n                          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                          </svg>\n                        </button>\n                        {viewMode === 'edit' && (\n                          <button\n                            onClick={() => setIsFullscreen(!isFullscreen)}\n                            className=\"hidden md:flex p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                            title={isFullscreen ? t.notes.exitFullscreen : t.notes.fullscreenEdit}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              {isFullscreen ? (\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              ) : (\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" />\n                              )}\n                            </svg>\n                          </button>\n                        )}\n                        {selectedNote && (\n                          <button\n                            onClick={() => setViewMode(viewMode === 'edit' ? 'preview' : 'edit')}\n                            className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                            title={viewMode === 'edit' ? t.common.preview : t.common.edit}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              {viewMode === 'edit' ? (\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                              ) : (\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                              )}\n                            </svg>\n                          </button>\n                        )}\n                        {viewMode === 'edit' && (\n                          <button\n                            onClick={() => handleSaveNote(false)}\n                            disabled={saving}\n                            className=\"px-2.5 py-1.5 sm:px-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1.5\"\n                          >\n                            {saving && (\n                              <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                              </svg>\n                            )}\n                            <span className=\"text-sm\">{t.common.save}</span>\n                          </button>\n                        )}\n                      </div>\n                    </div>\n\n                <div className=\"flex-1 overflow-y-auto py-2\">\n                  <div className=\"flex flex-col space-y-2\">\n                    {viewMode === 'edit' && (\n                      <>\n                        <div className=\"relative\">\n                          <input\n                            type=\"text\"\n                            value={noteTitle}\n                            onChange={(e) => {\n                              setNoteTitle(e.target.value);\n                              setSaveStatus('unsaved'); // ⚠️ 关键修复：标记为未保存\n                            }}\n                            placeholder={t.notes.titlePlaceholder}\n                            maxLength={32}\n                            className=\"w-full px-2 py-2 pr-12 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n                          />\n                          <span className=\"absolute right-2 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                            {noteTitle.length}/32\n                          </span>\n                        </div>\n\n                        {/* 已添加的标签显示区域 */}\n                        {noteTags.length > 0 && (\n                            <div className=\"flex flex-wrap gap-2 p-2 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg\">\n                              {noteTags.map((tag, index) => (\n                                <span\n                                  key={index}\n                                  className=\"inline-flex items-center gap-1.5 px-2 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 text-sm rounded-md border border-blue-200 dark:border-blue-800\"\n                                >\n                                  <span>{tag}</span>\n                                  <button\n                                    onClick={() => {\n                                      setNoteTags(noteTags.filter((_, i) => i !== index));\n                                      setSaveStatus('unsaved'); // 标记为未保存\n                                    }}\n                                    className=\"hover:bg-blue-200 dark:hover:bg-blue-800/50 rounded-sm p-0.5 transition-colors\"\n                                    title={language === 'zh-CN' ? '删除标签' : 'Remove tag'}\n                                  >\n                                    <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                  </button>\n                                </span>\n                              ))}\n                            </div>\n                        )}\n\n                        {/* 标签输入框（独立） */}\n                        <div className=\"relative\">\n                            <input\n                              type=\"text\"\n                              value={tagInput}\n                              onChange={(e) => {\n                                // 计算已有标签的总字符数\n                                const existingTagsChars = noteTags.join('').length;\n                                const remainingChars = 32 - existingTagsChars;\n                                // 只允许输入不超过剩余字符数的内容\n                                const newValue = e.target.value.slice(0, remainingChars);\n                                setTagInput(newValue);\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key === 'Enter' && tagInput.trim()) {\n                                  e.preventDefault();\n                                  const newTag = tagInput.trim();\n                                  const existingTagsChars = noteTags.join('').length;\n\n                                  // 检查总字符数限制（最多32个字符）\n                                  if (existingTagsChars + newTag.length > 32) {\n                                    setError(language === 'zh-CN' ? '标签总字符数已达上限（最多32个字符）' : 'Total tag characters limit reached (max 32 characters)');\n                                    setTimeout(() => setError(''), 3000);\n                                    return;\n                                  }\n\n                                  // 检查标签是否为空\n                                  if (newTag.length === 0) {\n                                    return;\n                                  }\n\n                                  if (!noteTags.includes(newTag)) {\n                                    setNoteTags([...noteTags, newTag]);\n                                    setSaveStatus('unsaved'); // 标记为未保存\n                                  }\n                                  setTagInput('');\n                                }\n                              }}\n                              placeholder={t.notes.tagsPlaceholder}\n                              disabled={noteTags.join('').length >= 32}\n                              className=\"w-full px-2 py-2 pr-16 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                            />\n                            {/* 添加标签按钮（图标）- 在计数器左侧 */}\n                            <button\n                              onClick={() => {\n                                if (tagInput.trim()) {\n                                  const newTag = tagInput.trim();\n                                  const existingTagsChars = noteTags.join('').length;\n\n                                  // 检查总字符数限制（最多32个字符）\n                                  if (existingTagsChars + newTag.length > 32) {\n                                    setError(language === 'zh-CN' ? '标签总字符数已达上限（最多32个字符）' : 'Total tag characters limit reached (max 32 characters)');\n                                    setTimeout(() => setError(''), 3000);\n                                    return;\n                                  }\n\n                                  // 检查标签是否为空\n                                  if (newTag.length === 0) {\n                                    return;\n                                  }\n\n                                  if (!noteTags.includes(newTag)) {\n                                    setNoteTags([...noteTags, newTag]);\n                                    setSaveStatus('unsaved');\n                                  }\n                                  setTagInput('');\n                                }\n                              }}\n                              disabled={!tagInput.trim() || noteTags.join('').length + tagInput.trim().length > 32}\n                              title={language === 'zh-CN' ? '添加标签' : 'Add tag'}\n                              className=\"absolute right-9 top-1/2 -translate-y-1/2 p-1 rounded text-blue-600 dark:text-blue-400 hover:bg-blue-500/10 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                            >\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\n                              </svg>\n                            </button>\n                            {/* 字符计数器 - 最右侧 */}\n                            <span className=\"absolute right-2 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500 pointer-events-none\">\n                              {noteTags.join('').length + tagInput.length}/32\n                            </span>\n                        </div>\n                      </>\n                    )}\n\n                    {viewMode === 'edit' ? (\n                      isFullscreen ? (\n                        /* 全屏模式：左右分屏 */\n                        <div className=\"flex-1 flex gap-4 overflow-hidden\">\n                          {/* 左侧：编辑器 */}\n                          <div className=\"flex-1 flex flex-col\">\n                            <textarea\n                              value={noteContent}\n                              onChange={(e) => {\n                                const newValue = e.target.value;\n\n                                // 达到上限时提示\n                                if (newValue.length >= 100000 && noteContent.length < 100000) {\n                                  setError(language === 'zh-CN'\n                                    ? '⚠️ 笔记内容已达上限（100,000 字符）'\n                                    : '⚠️ Note content limit reached (100,000 chars)');\n                                  setTimeout(() => setError(''), 5000);\n                                }\n\n                                setNoteContent(newValue);\n                                setSaveStatus('unsaved'); // ⚠️ 关键修复：标记为未保存\n                              }}\n                              placeholder=\"开始编写你的笔记...&#10;&#10;支持 Markdown 语法\"\n                              maxLength={100000}\n                              className=\"flex-1 px-6 py-4 bg-gray-900/50 backdrop-blur-sm border border-white/10 rounded-t-lg text-white placeholder-gray-600 focus:outline-none focus:border-blue-400/60 focus:bg-gray-900/70 transition-all font-mono text-base resize-none overflow-y-auto leading-relaxed\"\n                              style={{\n                                fontFamily: \"'JetBrains Mono', 'Fira Code', 'Consolas', monospace\",\n                              }}\n                            />\n                            {/* 字符统计和警告提示（全屏模式） */}\n                            <div className=\"flex items-center justify-between px-4 py-2 text-xs bg-gray-800/80 border border-gray-700 border-t-0 rounded-b-lg\">\n                              <span className={`font-medium ${\n                                noteContent.length > 90000 ? 'text-red-400' :\n                                noteContent.length > 75000 ? 'text-orange-400' :\n                                'text-gray-400'\n                              }`}>\n                                {noteContent.length.toLocaleString()} / 100,000 字符\n                              </span>\n                              {noteContent.length > 75000 && noteContent.length <= 90000 && (\n                                <span className=\"flex items-center gap-1 text-orange-400\">\n                                  <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                    <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                                  </svg>\n                                  笔记较长，建议拆分\n                                </span>\n                              )}\n                              {noteContent.length > 90000 && (\n                                <span className=\"flex items-center gap-1 text-red-400 font-medium\">\n                                  <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                                  </svg>\n                                  即将达到上限！\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                          {/* 右侧：实时预览 */}\n                          <div className=\"flex-1 overflow-y-auto\">\n                            <div className=\"bg-white/50 dark:bg-gray-900/50 backdrop-blur-sm border border-white/60 dark:border-white/10 rounded-lg p-6\">\n                              <div className=\"markdown-preview prose dark:prose-invert max-w-none\">\n                                <MarkdownErrorBoundary\n                                  onError={(error) => {\n                                    console.error('[Markdown渲染错误-全屏模式]', error);\n                                  }}\n                                >\n                                  {cachedFullscreenMarkdown}\n                                </MarkdownErrorBoundary>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      ) : (\n                        /* 普通模式：仅编辑器 */\n                        <div className=\"flex flex-col\">\n                          <textarea\n                            value={noteContent}\n                            onChange={(e) => {\n                              const newValue = e.target.value;\n\n                              // 达到上限时提示（全屏仅编辑模式）\n                              if (newValue.length >= 100000 && noteContent.length < 100000) {\n                                setError(language === 'zh-CN'\n                                  ? '⚠️ 笔记内容已达上限（100,000 字符）'\n                                  : '⚠️ Note content limit reached (100,000 chars)');\n                                setTimeout(() => setError(''), 5000);\n                              }\n\n                              setNoteContent(newValue);\n                              setSaveStatus('unsaved'); // ⚠️ 关键修复：标记为未保存\n                            }}\n                            placeholder={t.notes.contentPlaceholder}\n                            maxLength={100000}\n                            className=\"w-full h-[400px] px-6 py-4 bg-white/50 dark:bg-gray-900/50 backdrop-blur-sm border border-white/60 dark:border-white/10 rounded-t-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-600 focus:outline-none focus:border-blue-400/60 focus:bg-white/70 dark:focus:bg-gray-900/70 transition-all font-mono text-base resize-none overflow-y-auto leading-relaxed\"\n                            style={{\n                              fontFamily: \"'JetBrains Mono', 'Fira Code', 'Consolas', monospace\",\n                            }}\n                          />\n                          {/* 字符统计和警告提示（全屏仅编辑模式） */}\n                          <div className=\"flex items-center justify-between px-4 py-2 text-xs bg-gray-50 dark:bg-gray-800/50 border border-gray-200 dark:border-gray-700 border-t-0 rounded-b-lg\">\n                            <span className={`font-medium ${\n                              noteContent.length > 90000 ? 'text-red-600 dark:text-red-400' :\n                              noteContent.length > 75000 ? 'text-orange-600 dark:text-orange-400' :\n                              'text-gray-500 dark:text-gray-400'\n                            }`}>\n                              {noteContent.length.toLocaleString()} / 100,000 {language === 'zh-CN' ? '字符' : 'chars'}\n                            </span>\n                            {noteContent.length > 75000 && noteContent.length <= 90000 && (\n                              <span className=\"flex items-center gap-1 text-orange-600 dark:text-orange-400\">\n                                <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                  <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                                </svg>\n                                {language === 'zh-CN' ? '笔记较长，建议拆分' : 'Note is long, consider splitting'}\n                              </span>\n                            )}\n                            {noteContent.length > 90000 && (\n                              <span className=\"flex items-center gap-1 text-red-600 dark:text-red-400 font-medium\">\n                                <svg className=\"w-3.5 h-3.5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                                </svg>\n                                {language === 'zh-CN' ? '即将达到上限！' : 'Approaching limit!'}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n                      )\n                    ) : (\n                      <div className=\"flex-1 overflow-y-auto\">\n                        <div className=\"space-y-4\">\n                          {/* 标题卡片（如果有标题） */}\n                          {noteTitle && (\n                            <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                              <p className=\"text-xl text-gray-900 dark:text-white font-semibold\">{noteTitle}</p>\n                            </div>\n                          )}\n\n                          {/* 标签栏（预览模式） */}\n                          {noteTags.length > 0 && (\n                            <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-3\">\n                              <div className=\"flex flex-wrap gap-2\">\n                                {noteTags.map((tag, index) => (\n                                  <span\n                                    key={index}\n                                    className=\"inline-flex items-center px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 text-sm rounded-md border border-blue-200 dark:border-blue-800\"\n                                  >\n                                    {tag}\n                                  </span>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n\n                          {/* 内容卡片 */}\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                            {/* 🐛 修复：加载骨架屏（iOS 16 渲染延迟时显示） */}\n                            {isRenderingNote && !noteContent ? (\n                              <div className=\"space-y-4 animate-pulse\">\n                                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-3/4\"></div>\n                                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-full\"></div>\n                                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-5/6\"></div>\n                                <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-4/5\"></div>\n                                <div className=\"flex items-center justify-center py-8\">\n                                  <svg className=\"animate-spin h-6 w-6 text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                  </svg>\n                                  <span className=\"ml-3 text-sm text-gray-600 dark:text-gray-400\">\n                                    {language === 'zh-CN' ? '正在加载笔记...' : 'Loading note...'}\n                                  </span>\n                                </div>\n                              </div>\n                            ) : (\n                              <div className=\"markdown-preview prose dark:prose-invert max-w-none\">\n                                {/* 🐛 修复：iOS 16 使用简化渲染器 */}\n                                {isOldIOSSafari() ? (\n                                  <>\n                                    <div className=\"bg-blue-50 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-500/40 rounded-lg p-3 mb-4\">\n                                      <p className=\"text-xs text-blue-700 dark:text-blue-300 flex items-center gap-2\">\n                                        <svg className=\"w-4 h-4 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                        </svg>\n                                        <span>为保证兼容性，已使用简化渲染器。如需完整功能，建议使用编辑模式或更新浏览器。</span>\n                                      </p>\n                                    </div>\n                                    <SimpleMarkdownRenderer content={noteContent || ''} className=\"prose dark:prose-invert max-w-none\" />\n                                  </>\n                                ) : (\n                                  <MarkdownErrorBoundary\n                                    onError={(error) => {\n                                      console.error('[Markdown渲染错误-预览模式]', error);\n                                    }}\n                                  >\n                                    {cachedNormalMarkdown}\n                                  </MarkdownErrorBoundary>\n                                )}\n                              </div>\n                            )}\n                          </div>\n\n                          {/* 安全提示 */}\n                          <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-4\">\n                            <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                              {t.notes.securityTip}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                    {viewMode === 'edit' && (\n                      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-4\">\n                        <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                          {t.notes.securityTip}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                  </>\n                )}\n              </>\n            )}\n\n            {/* 密码编辑器 */}\n            {activePanel === 'passwords' && (\n              <>\n                {!selectedPassword && passwordViewMode === 'preview' ? (\n                  // 密码管理教程欢迎页\n                  <div className=\"flex-1 overflow-y-auto py-2\">\n                    <div className=\"max-w-3xl mx-auto\">\n                      <div className=\"prose dark:prose-invert max-w-none\">\n                        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                          {language === 'zh-CN' ? '功能说明' : 'Features'}\n                        </h2>\n\n                        <div className=\"space-y-6\">\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">\n                              {language === 'zh-CN' ? '网站/应用名称' : 'Website/App Name'}\n                            </h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                              {language === 'zh-CN'\n                                ? '输入完整的网站 URL（如 https://github.com）或应用名称。支持直接点击打开网站。'\n                                : 'Enter full website URL (e.g. https://github.com) or app name. Click to open directly.'}\n                            </p>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">\n                              {language === 'zh-CN' ? '用户名/邮箱' : 'Username/Email'}\n                            </h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                              {language === 'zh-CN'\n                                ? '存储登录账号，支持邮箱、手机号、用户名等任意格式。点击复制按钮快速复制。'\n                                : 'Store login account, supports email, phone, username, etc. Click copy button to copy quickly.'}\n                            </p>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">\n                              {language === 'zh-CN' ? '密码/Token/密钥' : 'Password/Token/Key'}\n                            </h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm mb-2\">\n                              {language === 'zh-CN'\n                                ? '存储密码、API Token、SSH 密钥等敏感信息。支持密码生成器创建强密码。'\n                                : 'Store passwords, API tokens, SSH keys, etc. Use password generator to create strong passwords.'}\n                            </p>\n                            <div className=\"bg-white dark:bg-gray-800 rounded p-3 mt-2\">\n                              <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                {language === 'zh-CN' ? '密码生成器选项：' : 'Password Generator Options:'}\n                              </p>\n                              <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                                <li>{language === 'zh-CN' ? '长度：16-32 位（更安全的随机密码）' : 'Length: 16-32 chars (more secure random passwords)'}</li>\n                                <li>{language === 'zh-CN' ? '字符类型：大写字母、小写字母、数字、符号' : 'Character types: Uppercase, lowercase, numbers, symbols'}</li>\n                                <li>{language === 'zh-CN' ? '实时强度检测，确保密码安全' : 'Real-time strength detection for security'}</li>\n                              </ul>\n                            </div>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">\n                              {language === 'zh-CN' ? '备注' : 'Notes'}\n                            </h3>\n                            <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                              {language === 'zh-CN'\n                                ? '存储额外信息，如恢复码、安全问题答案、MFA 密钥等。支持多行文本。'\n                                : 'Store additional info like recovery codes, security question answers, MFA secrets, etc. Supports multi-line text.'}\n                            </p>\n                          </div>\n\n                          <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-4\">\n                            <h3 className=\"text-xl font-semibold text-blue-600 dark:text-blue-400 mb-2\">\n                              {language === 'zh-CN' ? '安全提示' : 'Security Tips'}\n                            </h3>\n                            <ul className=\"list-disc list-inside text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n                              <li>{language === 'zh-CN' ? '使用密码生成器创建强密码（16-32 位）' : 'Use password generator for strong passwords (16-32 chars)'}</li>\n                              <li>{language === 'zh-CN' ? '每个网站使用不同的密码，避免密码重用' : 'Use different passwords for each site, avoid reuse'}</li>\n                              <li>{language === 'zh-CN' ? '定期更新重要账号的密码' : 'Update passwords for important accounts regularly'}</li>\n                              <li>{language === 'zh-CN' ? '在其他网站启用 2FA，可将恢复码存储在备注中' : 'Enable 2FA on other sites, store recovery codes in notes field'}</li>\n                              <li>{language === 'zh-CN' ? '不要与他人分享主密码' : 'Never share your master password'}</li>\n                            </ul>\n                          </div>\n                        </div>\n\n                        <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-4 mt-8\">\n                          <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                            {language === 'zh-CN'\n                              ? '提示：所有密码数据采用 AES-256-GCM 加密，主密码永不上传服务器，服务器无法解密您的数据。'\n                              : 'Tip: All password data is encrypted with AES-256-GCM. Master password never leaves your device, server cannot decrypt your data.'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                <div className=\"flex items-center justify-between mb-4 py-2 border-b border-gray-300 dark:border-gray-700\">\n                  <div className=\"flex items-center gap-3\">\n                    <button\n                      onClick={handleBack}\n                      className=\"md:hidden p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                      title={t.common.back}\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                      </svg>\n                    </button>\n                    <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {selectedPassword ? (passwordViewMode === 'preview' ? t.passwords.passwordDetails : t.passwords.editPassword) : t.passwords.newPasswordTitle}\n                    </h2>\n                  </div>\n                  <div className=\"flex items-center gap-1.5 sm:gap-2\">\n                    <button\n                      onClick={handleBack}\n                      className=\"hidden md:flex p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                      title={t.common.back}\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                      </svg>\n                    </button>\n                    {selectedPassword && (\n                      <button\n                        onClick={() => setPasswordViewMode(passwordViewMode === 'edit' ? 'preview' : 'edit')}\n                        className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                        title={passwordViewMode === 'edit' ? t.common.preview : t.common.edit}\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          {passwordViewMode === 'edit' ? (\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          ) : (\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                          )}\n                        </svg>\n                      </button>\n                    )}\n                    {passwordViewMode === 'edit' && (\n                      <button\n                        onClick={handleSavePassword}\n                        disabled={saving}\n                        className=\"px-2.5 py-1.5 sm:px-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-1.5\"\n                      >\n                        {saving && (\n                          <svg className=\"animate-spin h-3 w-3\" fill=\"none\" viewBox=\"0 0 24 24\">\n                            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                          </svg>\n                        )}\n                        <span className=\"text-sm\">{t.common.save}</span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {passwordViewMode === 'preview' ? (\n                  // 密码预览模式\n                  <div className=\"flex-1 overflow-y-auto py-2\">\n                    <div className=\"space-y-4\">\n                      {/* 网站/应用名称 */}\n                      <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">{t.passwords.site}</h3>\n                          {passwordSite && isValidUrl(passwordSite) && (\n                            <a\n                              href={formatUrl(passwordSite)}\n                              target=\"_blank\"\n                              rel=\"noopener noreferrer\"\n                              className=\"text-sm px-3 py-1.5 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30 flex items-center gap-1\"\n                            >\n                              <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\n                              </svg>\n                              {t.common.open}\n                            </a>\n                          )}\n                        </div>\n                        {passwordSite && isValidUrl(passwordSite) ? (\n                          <a\n                            href={formatUrl(passwordSite)}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"text-lg text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 font-medium underline decoration-blue-600/30 dark:decoration-blue-400/30 hover:decoration-blue-600 dark:hover:decoration-blue-400 transition-colors break-all\"\n                          >\n                            {passwordSite}\n                          </a>\n                        ) : (\n                          <p className=\"text-lg text-gray-900 dark:text-white font-medium\">{passwordSite || (language === 'zh-CN' ? '未设置' : 'Not set')}</p>\n                        )}\n                      </div>\n\n                      {/* 用户名/邮箱 */}\n                      {passwordUsername && (\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">{t.passwords.username}</h3>\n                            <button\n                              onClick={() => handleCopy(passwordUsername, t.passwords.username)}\n                              className=\"p-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30\"\n                              title={t.common.copy}\n                            >\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                              </svg>\n                            </button>\n                          </div>\n                          <p className=\"password-preview-content text-base text-gray-900 dark:text-white\">{passwordUsername}</p>\n                        </div>\n                      )}\n\n                      {/* 密码/Token */}\n                      {passwordValue && (\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">{t.passwords.password}</h3>\n                            <div className=\"flex gap-2\">\n                              <button\n                                onClick={() => setShowPassword(!showPassword)}\n                                className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                                title={showPassword ? t.common.hide : t.common.show}\n                              >\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={showPassword ? \"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" : \"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"} />\n                                </svg>\n                              </button>\n                              <button\n                                onClick={handleCheckBreach}\n                                disabled={checkingBreach}\n                                className=\"p-2 rounded-lg bg-orange-100 dark:bg-orange-500/20 text-orange-700 dark:text-orange-400 hover:bg-orange-200 dark:hover:bg-orange-500/30 transition-colors border border-orange-300 dark:border-orange-500/30 disabled:opacity-50 disabled:cursor-not-allowed\"\n                                title={language === 'zh-CN' ? '检查密码是否泄露' : 'Check if password is breached'}\n                              >\n                                {checkingBreach ? (\n                                  <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                                  </svg>\n                                ) : (\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                                  </svg>\n                                )}\n                              </button>\n                              <button\n                                onClick={() => handleCopy(passwordValue, t.passwords.password)}\n                                className=\"p-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30\"\n                                title={t.common.copy}\n                              >\n                                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                                </svg>\n                              </button>\n                            </div>\n                          </div>\n                          <p className=\"password-preview-content text-base text-gray-900 dark:text-white font-mono\">\n                            {showPassword ? passwordValue : '••••••••••••••••'}\n                          </p>\n\n                          {/* 泄露检测结果 */}\n                          {breachCheckResult && (\n                            <div className={`mt-3 p-3 rounded-lg border ${\n                              breachCheckResult.severity === 'safe'\n                                ? 'bg-green-50 dark:bg-green-900/20 border-green-300 dark:border-green-500/30'\n                                : breachCheckResult.severity === 'low' || breachCheckResult.severity === 'medium'\n                                ? 'bg-yellow-50 dark:bg-yellow-900/20 border-yellow-300 dark:border-yellow-500/30'\n                                : 'bg-red-50 dark:bg-red-900/20 border-red-300 dark:border-red-500/30'\n                            }`}>\n                              <div className=\"flex items-start gap-2\">\n                                <svg className={`w-5 h-5 flex-shrink-0 mt-0.5 ${\n                                  breachCheckResult.severity === 'safe'\n                                    ? 'text-green-600 dark:text-green-400'\n                                    : breachCheckResult.severity === 'low' || breachCheckResult.severity === 'medium'\n                                    ? 'text-yellow-600 dark:text-yellow-400'\n                                    : 'text-red-600 dark:text-red-400'\n                                }`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                  {breachCheckResult.severity === 'safe' ? (\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                                  ) : (\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                                  )}\n                                </svg>\n                                <div className=\"flex-1\">\n                                  <p className={`text-sm font-semibold ${\n                                    breachCheckResult.severity === 'safe'\n                                      ? 'text-green-700 dark:text-green-200'\n                                      : breachCheckResult.severity === 'low' || breachCheckResult.severity === 'medium'\n                                      ? 'text-yellow-700 dark:text-yellow-200'\n                                      : 'text-red-700 dark:text-red-200'\n                                  }`}>\n                                    {breachCheckResult.breached\n                                      ? (language === 'zh-CN' ? '密码已泄露！' : 'Password Breached!')\n                                      : (language === 'zh-CN' ? '密码安全' : 'Password Safe')}\n                                  </p>\n                                  <p className={`text-xs mt-1 ${\n                                    breachCheckResult.severity === 'safe'\n                                      ? 'text-green-600 dark:text-green-300'\n                                      : breachCheckResult.severity === 'low' || breachCheckResult.severity === 'medium'\n                                      ? 'text-yellow-600 dark:text-yellow-300'\n                                      : 'text-red-600 dark:text-red-300'\n                                  }`}>\n                                    {breachCheckResult.breached ? (\n                                      language === 'zh-CN'\n                                        ? `此密码在 ${breachCheckResult.count.toLocaleString()} 次数据泄露事件中出现，强烈建议立即更换！`\n                                        : `This password appeared in ${breachCheckResult.count.toLocaleString()} data breaches. Strongly recommend changing it immediately!`\n                                    ) : (\n                                      language === 'zh-CN'\n                                        ? '此密码未在已知的数据泄露事件中出现，但仍建议定期更换密码。'\n                                        : 'This password was not found in known data breaches, but we still recommend changing it regularly.'\n                                    )}\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n\n                      {/* 备注 */}\n                      {passwordNotes && (\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg p-2\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400 mb-2\">{t.passwords.notes}</h3>\n                            <button\n                              onClick={() => handleCopy(passwordNotes, t.passwords.notes)}\n                              className=\"p-2 rounded-lg bg-blue-500/20 text-blue-600 dark:text-blue-400 hover:bg-blue-500/30 transition-colors border border-blue-500/30\"\n                              title={t.common.copy}\n                            >\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                              </svg>\n                            </button>\n                          </div>\n                          <p className=\"text-base text-gray-900 dark:text-white whitespace-pre-wrap break-words\">{passwordNotes}</p>\n                        </div>\n                      )}\n\n                      {/* 安全提示 */}\n                      <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-4\">\n                        <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                          {t.passwords.securityTip}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  // 密码编辑模式\n                  <div className=\"flex-1 overflow-y-auto py-2\">\n                    <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        {t.passwords.site}\n                      </label>\n                      <div className=\"relative\">\n                        <input\n                          type=\"text\"\n                          value={passwordSite}\n                          onChange={(e) => { setPasswordSite(e.target.value); setPasswordModified(true); }}\n                          placeholder={t.passwords.sitePlaceholder}\n                          maxLength={32}\n                          className=\"w-full px-4 py-2 pr-16 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n                        />\n                        <span className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-400 dark:text-gray-500\">\n                          {passwordSite.length}/32\n                        </span>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        {t.passwords.username}\n                      </label>\n                      <div className=\"relative\">\n                        <input\n                          type=\"text\"\n                          value={passwordUsername}\n                          onChange={(e) => { setPasswordUsername(e.target.value); setPasswordModified(true); }}\n                          placeholder={t.passwords.usernamePlaceholder}\n                          maxLength={32}\n                          className=\"w-full px-4 py-2 pr-16 sm:pr-32 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors\"\n                        />\n                        <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-2\">\n                          <span className=\"text-xs text-gray-400 dark:text-gray-500 hidden sm:inline\">\n                            {passwordUsername.length}/32\n                          </span>\n                          {passwordUsername && (\n                            <button\n                              onClick={() => handleCopy(passwordUsername, t.passwords.username)}\n                              className=\"text-sm px-2 sm:px-3 py-1.5 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                              title={t.common.copy}\n                            >\n                              <span className=\"hidden sm:inline\">{t.common.copy}</span>\n                              <svg className=\"w-4 h-4 sm:hidden\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        {t.passwords.password}\n                      </label>\n                      <div className=\"relative\">\n                        <input\n                          type={showPassword ? 'text' : 'password'}\n                          value={passwordValue}\n                          onChange={(e) => { setPasswordValue(e.target.value); setPasswordModified(true); }}\n                          placeholder={t.passwords.passwordPlaceholder}\n                          maxLength={32}\n                          className=\"w-full px-4 py-2 pr-32 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors font-mono text-sm\"\n                        />\n                        <div className=\"absolute right-2 top-1/2 -translate-y-1/2 flex items-center gap-1 flex-wrap justify-end\">\n                          <span className=\"text-xs text-gray-400 dark:text-gray-500 mr-1 hidden sm:inline\">\n                            {passwordValue.length}/32\n                          </span>\n                          <button\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                            title={showPassword ? t.common.hide : t.common.show}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d={showPassword ? \"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" : \"M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"} />\n                            </svg>\n                          </button>\n                          <button\n                            onClick={() => setShowPasswordGenerator(!showPasswordGenerator)}\n                            className=\"p-2 rounded-lg bg-blue-100 dark:bg-blue-500/20 text-blue-700 dark:text-blue-400 hover:bg-blue-200 dark:hover:bg-blue-500/30 transition-colors border border-blue-300 dark:border-blue-500/30\"\n                            title={t.common.generate}\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                            </svg>\n                          </button>\n                          {passwordValue && (\n                            <button\n                              onClick={() => handleCopy(passwordValue, t.passwords.password)}\n                              className=\"p-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n                              title={t.common.copy}\n                            >\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                              </svg>\n                            </button>\n                          )}\n                        </div>\n                      </div>\n\n                      {/* 密码生成器配置面板 */}\n                      {showPasswordGenerator && (\n                        <div className=\"mt-3 p-4 bg-gray-50 dark:bg-gray-900/70 border border-blue-300 dark:border-blue-500/30 rounded-lg space-y-4\">\n                          <div>\n                            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                              {t.passwords.generator.length.replace('{length}', String(passwordLength))}\n                            </label>\n                            <input\n                              type=\"range\"\n                              min=\"16\"\n                              max=\"32\"\n                              value={passwordLength}\n                              onChange={(e) => setPasswordLength(Number(e.target.value))}\n                              className=\"w-full h-2 bg-gray-300 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer accent-blue-500\"\n                            />\n                            <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-500 mt-1\">\n                              <span>16</span>\n                              <span>24</span>\n                              <span>32</span>\n                            </div>\n                          </div>\n\n                          <div className=\"space-y-2\">\n                            <label className=\"flex items-center gap-2 cursor-pointer group\">\n                              <input\n                                type=\"checkbox\"\n                                checked={includeUppercase}\n                                onChange={(e) => setIncludeUppercase(e.target.checked)}\n                                className=\"w-4 h-4 text-blue-500 bg-white dark:bg-gray-700 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500\"\n                              />\n                              <span className=\"text-sm text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                                {t.passwords.generator.uppercase}\n                              </span>\n                            </label>\n\n                            <label className=\"flex items-center gap-2 cursor-pointer group\">\n                              <input\n                                type=\"checkbox\"\n                                checked={includeLowercase}\n                                onChange={(e) => setIncludeLowercase(e.target.checked)}\n                                className=\"w-4 h-4 text-blue-500 bg-white dark:bg-gray-700 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500\"\n                              />\n                              <span className=\"text-sm text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                                {t.passwords.generator.lowercase}\n                              </span>\n                            </label>\n\n                            <label className=\"flex items-center gap-2 cursor-pointer group\">\n                              <input\n                                type=\"checkbox\"\n                                checked={includeDigits}\n                                onChange={(e) => setIncludeDigits(e.target.checked)}\n                                className=\"w-4 h-4 text-blue-500 bg-white dark:bg-gray-700 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500\"\n                              />\n                              <span className=\"text-sm text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                                {t.passwords.generator.digits}\n                              </span>\n                            </label>\n\n                            <label className=\"flex items-center gap-2 cursor-pointer group\">\n                              <input\n                                type=\"checkbox\"\n                                checked={includeSymbols}\n                                onChange={(e) => setIncludeSymbols(e.target.checked)}\n                                className=\"w-4 h-4 text-blue-500 bg-white dark:bg-gray-700 border-gray-300 dark:border-gray-600 rounded focus:ring-blue-500\"\n                              />\n                              <span className=\"text-sm text-gray-700 dark:text-gray-300 group-hover:text-gray-900 dark:group-hover:text-white transition-colors\">\n                                {t.passwords.generator.symbols}\n                              </span>\n                            </label>\n                          </div>\n\n                          <button\n                            onClick={handleGeneratePassword}\n                            className=\"w-full px-4 py-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all font-medium\"\n                          >\n                            {t.passwords.generator.generate}\n                          </button>\n                        </div>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        {t.passwords.notes}\n                      </label>\n                      <div className=\"relative\">\n                        <textarea\n                          value={passwordNotes}\n                          onChange={(e) => { setPasswordNotes(e.target.value); setPasswordModified(true); }}\n                          placeholder={t.passwords.notesPlaceholder}\n                          maxLength={512}\n                          className=\"w-full px-4 py-2 pb-7 bg-white dark:bg-gray-900/50 border border-gray-300 dark:border-gray-700 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:border-blue-500/50 transition-colors resize-none h-32\"\n                        />\n                        <span className={`absolute right-3 bottom-2 text-xs pointer-events-none ${\n                          passwordNotes.length > 450 ? 'text-orange-600 dark:text-orange-400' :\n                          'text-gray-400 dark:text-gray-500'\n                        }`}>\n                          {passwordNotes.length}/512\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-4\">\n                      <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                        {t.passwords.securityTip}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                )}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n        )}\n        </div>\n      </div>\n\n      {/* 昵称编辑对话框 */}\n      {showNicknameDialog && (\n        <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-sm border border-gray-200/50 dark:border-white/10\">\n            {/* 标题栏 */}\n            <div className=\"px-6 py-5 border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-7 h-7 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                </svg>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                    {t.nav.setNickname}\n                  </h2>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    {language === 'zh-CN' ? '设置个性化昵称（最多8个字符）' : 'Set personalized nickname (max 8 chars)'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* 表单内容 */}\n            <div className=\"px-6 py-5\">\n              <div className=\"space-y-4\">\n                {/* 当前邮箱 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    {language === 'zh-CN' ? '邮箱账号' : 'Email Account'}\n                  </label>\n                  <div className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-lg text-gray-900 dark:text-white text-sm truncate\">\n                    {user?.email}\n                  </div>\n                </div>\n\n                {/* 昵称输入 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    {t.nav.nickname}\n                  </label>\n                  <div className=\"relative\">\n                    <input\n                      type=\"text\"\n                      value={editingNickname}\n                      onChange={(e) => {\n                        // 实时阻止空格输入\n                        const value = e.target.value.replace(/\\s/g, '');\n                        setEditingNickname(value);\n                      }}\n                      maxLength={8}\n                      placeholder={decryptedNickname || (language === 'zh-CN' ? '输入昵称（不支持空格）' : 'Enter nickname (no spaces)')}\n                      className=\"w-full px-4 py-2.5 pr-12 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400\"\n                      onKeyDown={(e) => {\n                        // 阻止空格键\n                        if (e.key === ' ') {\n                          e.preventDefault();\n                          return;\n                        }\n                        if (e.key === 'Enter') {\n                          handleSaveNickname();\n                        } else if (e.key === 'Escape') {\n                          setShowNicknameDialog(false);\n                          setNicknameError(''); // 关闭时清空错误提示\n                        }\n                      }}\n                      autoFocus\n                    />\n                    {/* 字符计数 */}\n                    <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-xs text-gray-500 dark:text-gray-400\">\n                      {editingNickname.length}/8\n                    </div>\n                  </div>\n                  <p className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                    {language === 'zh-CN'\n                      ? '💡 提示：昵称为空时将显示邮箱'\n                      : '💡 Tip: Email will be shown if nickname is empty'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* 错误提示（对话框内部显示，不被按钮遮挡） */}\n            {nicknameError && (\n              <div className=\"px-6 py-3 border-t border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-start gap-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg\">\n                  <svg className=\"w-5 h-5 text-red-500 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <p className=\"text-sm text-red-700 dark:text-red-300 flex-1\">\n                    {nicknameError}\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {/* 按钮栏 */}\n            <div className=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex items-center justify-end gap-3\">\n              <button\n                onClick={() => {\n                  setShowNicknameDialog(false);\n                  setNicknameError(''); // 关闭时清空错误提示\n                }}\n                disabled={savingNickname}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {t.common.cancel}\n              </button>\n              <button\n                onClick={handleSaveNickname}\n                disabled={savingNickname}\n                className=\"px-4 py-2 text-sm font-medium text-white bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\"\n              >\n                {savingNickname && (\n                  <svg className=\"animate-spin w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 12a8 8 0 018-8v8H4z\" />\n                  </svg>\n                )}\n                {savingNickname ? (language === 'zh-CN' ? '保存中...' : 'Saving...') : t.common.save}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 🔄 会话恢复对话框 */}\n      {showSessionRestoreDialog && (\n        <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-md border border-gray-200/50 dark:border-white/10\">\n            {/* 标题栏 */}\n            <div className=\"px-6 py-5 border-b border-gray-200 dark:border-gray-700\">\n              <div className=\"flex items-center gap-3\">\n                <svg className=\"w-7 h-7 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n                <div>\n                  <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                    {language === 'zh-CN' ? '重新输入主密码' : 'Re-enter Master Password'}\n                  </h2>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    {language === 'zh-CN'\n                      ? '为了保护您的数据安全，请重新输入主密码'\n                      : 'To protect your data, please re-enter your master password'}\n                  </p>\n                </div>\n              </div>\n\n              {/* 💡 提示信息 */}\n              <div className=\"px-6 py-3 bg-blue-50 dark:bg-blue-900/20 border-y border-blue-100 dark:border-blue-800\">\n                <div className=\"flex gap-2\">\n                  <svg className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                    {language === 'zh-CN'\n                      ? '💡 提示：登录时勾选\"记住我7天\"可避免重复输入密码'\n                      : '💡 Tip: Check \"Remember me for 7 days\" at login to avoid re-entering password'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* 表单内容 */}\n            <div className=\"px-6 py-5\">\n              <div className=\"space-y-4\">\n                {/* 用户邮箱显示 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    {language === 'zh-CN' ? '账号' : 'Account'}\n                  </label>\n                  <div className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 rounded-lg text-gray-900 dark:text-white\">\n                    {user?.email}\n                  </div>\n                </div>\n\n                {/* 主密码输入 */}\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    {language === 'zh-CN' ? '主密码' : 'Master Password'}\n                  </label>\n                  <input\n                    type=\"password\"\n                    value={restoreMasterPassword}\n                    onChange={(e) => setRestoreMasterPassword(e.target.value)}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' && !restoring) {\n                        handleSessionRestore();\n                      }\n                    }}\n                    placeholder={language === 'zh-CN' ? '请输入主密码' : 'Enter your master password'}\n                    className=\"w-full px-4 py-2 bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    autoFocus\n                    disabled={restoring}\n                  />\n                </div>\n\n                {/* 错误提示 */}\n                {restoreError && (\n                  <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-300 dark:border-red-500/30 rounded-lg p-3\">\n                    <p className=\"text-sm text-red-700 dark:text-red-200\">{restoreError}</p>\n                  </div>\n                )}\n\n                {/* 提示信息 */}\n                <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-300 dark:border-blue-500/30 rounded-lg p-3\">\n                  <p className=\"text-sm text-blue-700 dark:text-blue-200\">\n                    {language === 'zh-CN'\n                      ? '💡 您的会话仍然有效，只需重新输入主密码即可继续使用，无需重新登录。'\n                      : '💡 Your session is still valid. Just re-enter your password to continue, no need to login again.'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* 按钮区域 */}\n            <div className=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex gap-3\">\n              <button\n                onClick={handleCancelSessionRestore}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-600 transition-all font-medium\"\n                disabled={restoring}\n              >\n                {language === 'zh-CN' ? '重新登录' : 'Login Again'}\n              </button>\n              <button\n                onClick={handleSessionRestore}\n                className=\"flex-1 px-4 py-2 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                disabled={restoring || !restoreMasterPassword.trim()}\n              >\n                {restoring && (\n                  <svg className=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                )}\n                {restoring\n                  ? (language === 'zh-CN' ? '恢复中...' : 'Restoring...')\n                  : (language === 'zh-CN' ? '确认' : 'Confirm')}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 🔥 版本冲突解决对话框 */}\n      {showConflictDialog && conflictData && (\n        <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-fade-in\">\n          <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-xl w-full max-w-md sm:max-w-2xl md:max-w-4xl max-h-[85vh] overflow-hidden flex flex-col border border-gray-200 dark:border-gray-700\">\n            {/* 标题栏 */}\n            <div className=\"px-4 sm:px-6 py-4 sm:py-5 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800/50\">\n              <div className=\"flex items-center justify-between gap-3\">\n                <div className=\"flex items-center gap-2 sm:gap-3 flex-1 min-w-0\">\n                  <svg className=\"w-6 h-6 sm:w-7 sm:h-7 text-yellow-500 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                  </svg>\n                  <div className=\"flex-1 min-w-0\">\n                    <h2 className=\"text-lg sm:text-xl font-bold text-gray-900 dark:text-white truncate\">\n                      {t.conflicts?.title || '检测到版本冲突'}\n                    </h2>\n                    <p className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-400 mt-1 hidden sm:block\">\n                      {t.conflicts?.subtitle || '这篇笔记已在其他设备修改。你的修改已自动备份，不会丢失。请选择保留哪个版本：'}\n                    </p>\n                  </div>\n                </div>\n                {/* 返回按钮 */}\n                <button\n                  onClick={() => {\n                    setShowConflictDialog(false);\n                    setConflictData(null);\n                    setMergeMode(false);\n                    setMergedContent('');\n                  }}\n                  className=\"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors p-1 flex-shrink-0\"\n                  title={t.common.back || '返回继续编辑'}\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              {/* 移动端显示副标题 */}\n              <p className=\"text-xs text-gray-600 dark:text-gray-400 mt-2 sm:hidden\">\n                {t.conflicts?.subtitle || '这篇笔记已在其他设备修改。你的修改已自动备份，不会丢失。请选择保留哪个版本：'}\n              </p>\n            </div>\n\n            {/* 对比内容区域 */}\n            <div className=\"flex-1 overflow-y-auto p-4 sm:p-6 flex flex-col\">\n              {!mergeMode ? (\n                // 对比模式：上方左-右两列，下方按钮区域\n                <>\n                  <div className=\"mb-4 flex-shrink-0\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {/* 左列：本地版本 */}\n                      <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden flex flex-col max-h-[45vh]\">\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 px-3 sm:px-4 py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700\">\n                          <h3 className=\"text-sm sm:text-base font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                            <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                            {t.conflicts?.localVersion || '你的版本（本地）'}\n                          </h3>\n                        </div>\n                        <div className=\"flex-1 overflow-y-auto p-3 sm:p-4\">\n                          <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                            {(() => {\n                              const { localLines } = computeLineDiff(conflictData.localContent, conflictData.serverContent);\n                              return (\n                                <div className=\"font-mono text-xs sm:text-sm\">\n                                  {localLines.map((line, index) => {\n                                    const bgColor =\n                                      line.type === 'same' ? '' :\n                                      line.type === 'modified' ? 'bg-yellow-50 dark:bg-yellow-900/20' :\n                                      line.type === 'added' ? 'bg-green-50 dark:bg-green-900/20' :\n                                      'bg-red-50 dark:bg-red-900/20';\n\n                                    return (\n                                      <div key={index} className={`flex ${bgColor} hover:bg-gray-100 dark:hover:bg-gray-800/50`}>\n                                        <span className=\"inline-block w-10 text-right pr-3 py-1 text-gray-400 dark:text-gray-500 select-none flex-shrink-0 border-r border-gray-300 dark:border-gray-600\">\n                                          {line.lineNumber}\n                                        </span>\n                                        <span className=\"flex-1 px-3 py-1 text-gray-700 dark:text-gray-300 whitespace-pre-wrap break-all\">\n                                          {line.content || ' '}\n                                        </span>\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              );\n                            })()}\n                          </div>\n                          <div className=\"mt-2 sm:mt-3 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n                            <span>{conflictData.localContent.length} {t.conflicts?.characters || '字符'}</span>\n                            <span>{t.conflicts?.version || '版本'} {conflictData.localVersion}</span>\n                          </div>\n                          {/* 本地版本标签 */}\n                          {conflictData.localTags && conflictData.localTags.length > 0 && (\n                            <div className=\"mt-2 sm:mt-3\">\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-1.5\">{language === 'zh-CN' ? '标签' : 'Tags'}:</p>\n                              <div className=\"flex flex-wrap gap-1.5\">\n                                {conflictData.localTags.map((tag, index) => (\n                                  <span\n                                    key={index}\n                                    className=\"inline-flex items-center px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 text-xs rounded border border-blue-200 dark:border-blue-800\"\n                                  >\n                                    {tag}\n                                  </span>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n\n                      {/* 右列：服务器版本 */}\n                      <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden flex flex-col max-h-[45vh]\">\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 px-3 sm:px-4 py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700\">\n                          <h3 className=\"text-sm sm:text-base font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                            <svg className=\"w-4 h-4 sm:w-5 sm:h-5 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                            </svg>\n                            {t.conflicts?.serverVersion || '服务器版本（其他设备）'}\n                          </h3>\n                        </div>\n                        <div className=\"flex-1 overflow-y-auto p-3 sm:p-4\">\n                          <div className=\"bg-gray-50 dark:bg-gray-900 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                            {(() => {\n                              const { serverLines } = computeLineDiff(conflictData.localContent, conflictData.serverContent);\n                              return (\n                                <div className=\"font-mono text-xs sm:text-sm\">\n                                  {serverLines.map((line, index) => {\n                                    const bgColor =\n                                      line.type === 'same' ? '' :\n                                      line.type === 'modified' ? 'bg-yellow-50 dark:bg-yellow-900/20' :\n                                      line.type === 'added' ? 'bg-green-50 dark:bg-green-900/20' :\n                                      'bg-red-50 dark:bg-red-900/20';\n\n                                    return (\n                                      <div key={index} className={`flex ${bgColor} hover:bg-gray-100 dark:hover:bg-gray-800/50`}>\n                                        <span className=\"inline-block w-10 text-right pr-3 py-1 text-gray-400 dark:text-gray-500 select-none flex-shrink-0 border-r border-gray-300 dark:border-gray-600\">\n                                          {line.lineNumber}\n                                        </span>\n                                        <span className=\"flex-1 px-3 py-1 text-gray-700 dark:text-gray-300 whitespace-pre-wrap break-all\">\n                                          {line.content || ' '}\n                                        </span>\n                                      </div>\n                                    );\n                                  })}\n                                </div>\n                              );\n                            })()}\n                          </div>\n                          <div className=\"mt-2 sm:mt-3 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n                            <span>{conflictData.serverContent.length} {t.conflicts?.characters || '字符'}</span>\n                            <span>{t.conflicts?.version || '版本'} {conflictData.serverVersion} {t.conflicts?.latest || '（最新）'}</span>\n                          </div>\n                          {/* 服务器版本标签 */}\n                          {conflictData.serverTags && conflictData.serverTags.length > 0 && (\n                            <div className=\"mt-2 sm:mt-3\">\n                              <p className=\"text-xs text-gray-500 dark:text-gray-400 mb-1.5\">{language === 'zh-CN' ? '标签' : 'Tags'}:</p>\n                              <div className=\"flex flex-wrap gap-1.5\">\n                                {conflictData.serverTags.map((tag, index) => (\n                                  <span\n                                    key={index}\n                                    className=\"inline-flex items-center px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 text-xs rounded border border-blue-200 dark:border-blue-800\"\n                                  >\n                                    {tag}\n                                  </span>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 下方：操作按钮区域 */}\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4 flex-shrink-0\">\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-3\">\n                      {/* 使用本地版本 */}\n                      <button\n                        onClick={handleUseLocalVersion}\n                        disabled={saving}\n                        className=\"px-4 py-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all text-sm font-medium flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        <span>{saving ? t.common.saving : (t.conflicts?.useLocal || '使用我的版本')}</span>\n                      </button>\n\n                      {/* 使用服务器版本 */}\n                      <button\n                        onClick={handleUseServerVersion}\n                        disabled={saving}\n                        className=\"px-4 py-3 rounded-lg bg-gray-600 dark:bg-gray-700 text-white hover:bg-gray-700 dark:hover:bg-gray-600 transition-all text-sm font-medium flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                        </svg>\n                        <span>{t.conflicts?.useServer || '使用服务器版本'}</span>\n                      </button>\n\n                      {/* 手动合并 */}\n                      <button\n                        onClick={handleManualMerge}\n                        disabled={saving}\n                        className=\"px-4 py-3 rounded-lg bg-gray-200 dark:bg-gray-700/50 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-700 transition-all text-sm font-medium flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed border border-gray-300 dark:border-gray-600\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                        </svg>\n                        <span>{t.conflicts?.manualMerge || '手动合并'}</span>\n                      </button>\n                    </div>\n\n                    {/* 提示信息 */}\n                    <div className=\"mt-3 bg-gray-50 dark:bg-gray-900/50 border border-gray-200 dark:border-gray-700 rounded-lg p-3\">\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"w-4 h-4 text-gray-600 dark:text-gray-400 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        <div className=\"flex-1 text-xs text-gray-700 dark:text-gray-300\">\n                          <p className=\"font-semibold mb-1\">{t.conflicts?.backupNotice || '数据安全保障'}</p>\n                          <p className=\"leading-relaxed\">\n                            {t.conflicts?.backupInfo || '无论你选择哪个版本，你的本地修改都已安全保存到浏览器本地存储。'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                // 合并编辑模式：上方左-右两列，下方合并编辑器和按钮\n                <>\n                  {/* 上方：左-右两列显示本地和服务器版本 */}\n                  <div className=\"mb-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6\">\n                      {/* 左列：本地版本（只读） */}\n                      <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden flex flex-col max-h-[200px]\">\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 px-3 sm:px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\n                          <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                            <svg className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                            {t.conflicts?.localVersion || '你的版本'}\n                          </h3>\n                        </div>\n                        <div className=\"flex-1 overflow-y-auto p-3\">\n                          <pre className=\"text-xs text-gray-700 dark:text-gray-300 whitespace-pre-wrap font-mono leading-relaxed\">\n                            {conflictData.localContent}\n                          </pre>\n                        </div>\n                      </div>\n\n                      {/* 右列：服务器版本（只读） */}\n                      <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden flex flex-col max-h-[200px]\">\n                        <div className=\"bg-gray-50 dark:bg-gray-900/50 px-3 sm:px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\n                          <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                            <svg className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                            </svg>\n                            {t.conflicts?.serverVersion || '服务器版本'}\n                          </h3>\n                        </div>\n                        <div className=\"flex-1 overflow-y-auto p-3\">\n                          <pre className=\"text-xs text-gray-700 dark:text-gray-300 whitespace-pre-wrap font-mono leading-relaxed\">\n                            {conflictData.serverContent}\n                          </pre>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 下方：合并编辑器 */}\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\n                    <div className=\"bg-white dark:bg-gray-800/50 backdrop-blur-sm border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden\">\n                      <div className=\"bg-gray-50 dark:bg-gray-900/50 px-3 sm:px-4 py-2 border-b border-gray-200 dark:border-gray-700\">\n                        <h3 className=\"text-sm font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                          <svg className=\"w-4 h-4 text-green-600 dark:text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                          </svg>\n                          {t.conflicts?.mergedVersion || '合并后的版本'}\n                        </h3>\n                      </div>\n                      <div className=\"p-3 sm:p-4\">\n                        <textarea\n                          value={mergedContent}\n                          onChange={(e) => setMergedContent(e.target.value)}\n                          placeholder={t.conflicts?.mergePlaceholder || '在此处手动合并两个版本的内容...'}\n                          className=\"w-full h-[200px] px-3 py-2 bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded-lg text-xs sm:text-sm text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 font-mono focus:outline-none focus:border-blue-500 dark:focus:border-blue-400 resize-none\"\n                        />\n                        <div className=\"mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                          {mergedContent.length} 字符\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* 操作按钮 */}\n                    <div className=\"mt-4 grid grid-cols-1 sm:grid-cols-2 gap-3\">\n                      <button\n                        onClick={handleApplyMerge}\n                        disabled={saving || !mergedContent.trim()}\n                        className=\"px-4 py-3 rounded-lg bg-blue-500 text-white hover:bg-blue-600 transition-all text-sm font-medium flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                        <span>{saving ? t.common.saving : (t.conflicts?.applyMerge || '保存合并结果')}</span>\n                      </button>\n\n                      <button\n                        onClick={handleCancelMerge}\n                        disabled={saving}\n                        className=\"px-4 py-3 rounded-lg bg-gray-200 dark:bg-gray-700/50 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-700 transition-all text-sm font-medium flex items-center justify-center gap-2 disabled:opacity-50 disabled:cursor-not-allowed border border-gray-300 dark:border-gray-600\"\n                      >\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                        <span>{t.common.cancel}</span>\n                      </button>\n                    </div>\n\n                    {/* 提示信息 */}\n                    <div className=\"mt-3 bg-gray-50 dark:bg-gray-900/50 border border-gray-200 dark:border-gray-700 rounded-lg p-3\">\n                      <div className=\"flex items-start gap-2\">\n                        <svg className=\"w-4 h-4 text-gray-600 dark:text-gray-400 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        <div className=\"flex-1 text-xs text-gray-700 dark:text-gray-300\">\n                          <p className=\"font-semibold mb-1\">{t.conflicts?.mergeInstructions || '合并说明'}</p>\n                          <p className=\"leading-relaxed\">\n                            {t.conflicts?.mergeHint || '手动合并本地版本和服务器版本的内容，完成后点击保存。'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 强制登出 Toast 提示 */}\n      {logoutMessage && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-2xl p-6 max-w-md w-full mx-4 border border-gray-200 dark:border-gray-700\">\n            {/* 警告图标 */}\n            <div className=\"flex items-center justify-center mb-4\">\n              <div className=\"w-16 h-16 rounded-full bg-red-100 dark:bg-red-900/20 flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-red-600 dark:text-red-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                </svg>\n              </div>\n            </div>\n\n            {/* 提示文本 */}\n            <h3 className=\"text-lg font-semibold text-center text-gray-900 dark:text-white mb-2\">\n              {logoutMessage}\n            </h3>\n            <p className=\"text-sm text-center text-gray-600 dark:text-gray-400 mb-6\">\n              {t.errors.countdownMessage.replace('{countdown}', logoutCountdown.toString())}\n            </p>\n\n            {/* 倒计时进度条 */}\n            <div className=\"mb-4\">\n              <div className=\"h-2 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden\">\n                <div\n                  className=\"h-full bg-red-500 dark:bg-red-600 transition-all duration-1000 ease-linear\"\n                  style={{ width: `${(logoutCountdown / 15) * 100}%` }}\n                />\n              </div>\n            </div>\n\n            {/* 立即跳转按钮 */}\n            <button\n              onClick={handleForceLogout}\n              className=\"w-full px-4 py-3 rounded-lg bg-red-500 hover:bg-red-600 text-white font-medium transition-colors flex items-center justify-center gap-2\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n              </svg>\n              <span>{t.errors.redirectNow}</span>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* 📦 数据管理对话框 */}\n      {showDataManagementDialog && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm px-8 py-4\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-md sm:max-w-lg max-h-[90vh] overflow-hidden border border-gray-200/50 dark:border-white/10\">\n            {/* 标题栏 */}\n            <div className=\"px-5 py-3 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between\">\n              <h2 className=\"text-lg font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                </svg>\n                {t.nav.dataManagement}\n              </h2>\n              <button\n                onClick={() => {\n                  setShowDataManagementDialog(false);\n                  setDataManagementMessage(null);\n                }}\n                className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* 内容 */}\n            <div className=\"p-5 overflow-y-auto max-h-[calc(90vh-120px)] space-y-4\">\n              {/* 消息提示 */}\n              {dataManagementMessage && (\n                <div className={`p-2.5 rounded-lg text-sm ${dataManagementMessage.type === 'success' ? 'bg-green-50 dark:bg-green-900/20 text-green-800 dark:text-green-400' : 'bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-400'}`}>\n                  {dataManagementMessage.text}\n                </div>\n              )}\n\n              {/* 导出部分 */}\n              <div>\n                <h3 className=\"text-base font-semibold text-gray-900 dark:text-white mb-2\">{t.dataManagement.exportData}</h3>\n                <div className=\"mb-3 p-2 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded text-xs text-blue-800 dark:text-blue-400 flex items-start gap-2\">\n                  <svg className=\"w-4 h-4 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                  <span>{language === 'zh-CN' ? '备份文件将使用独立密码加密（AES-256-GCM），确保数据安全。' : 'Backup files are encrypted with an independent password (AES-256-GCM) to ensure data security.'}</span>\n                </div>\n                <button onClick={() => setShowEncryptedExportDialog(true)} disabled={encryptedExporting} className=\"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\">\n                  {encryptedExporting ? (<><svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" /></svg>{exportProgress.total > 0 ? t.dataManagement.exportProgress.replace('{current}', exportProgress.current.toString()).replace('{total}', exportProgress.total.toString()) : t.dataManagement.exportButton}</>) : (<><svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" /></svg>{t.dataManagement.exportButton}</>)}\n                </button>\n              </div>\n\n              {/* 分隔线 */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700\"></div>\n\n              {/* 导入部分 */}\n              <div>\n                <h3 className=\"text-base font-semibold text-gray-900 dark:text-white mb-2\">{t.dataManagement.importData}</h3>\n                <div className=\"mb-3 p-2 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded text-xs text-blue-800 dark:text-blue-400 flex items-start gap-2\">\n                  <svg className=\"w-4 h-4 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span>{language === 'zh-CN' ? '仅支持加密备份文件导入，需要输入导出时设置的密码。所有数据采用端到端加密，确保隐私安全。' : 'Only encrypted backup files are supported. You need to enter the password set during export. All data is end-to-end encrypted for privacy protection.'}</span>\n                </div>\n                <input ref={fileInputRef} type=\"file\" accept=\".json\" onChange={handleImportData} disabled={importing} className=\"hidden\" />\n                <button onClick={() => fileInputRef.current?.click()} disabled={importing} className=\"w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors flex items-center justify-center gap-2\">\n                  {importing ? (<><svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" /></svg>{importProgress.total > 0 ? t.dataManagement.importProgress.replace('{current}', importProgress.current.toString()).replace('{total}', importProgress.total.toString()) : t.dataManagement.importButton}</>) : (<><svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\" /></svg>{t.dataManagement.importButton}</>)}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 🔐 加密导出密码输入对话框 */}\n      {showEncryptedExportDialog && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm px-8 py-4\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-md border border-gray-200/50 dark:border-white/10 p-5\">\n            {/* 标题 */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {language === 'zh-CN' ? '设置导出密码' : 'Set Export Password'}\n              </h3>\n              <button\n                onClick={() => {\n                  setShowEncryptedExportDialog(false);\n                  setExportPassword('');\n                  setConfirmExportPassword('');\n                  setExportPasswordError('');\n                }}\n                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* 说明 */}\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n              {language === 'zh-CN'\n                ? '请设置一个导出密码（至少8个字符）。此密码独立于主密码，用于加密导出文件。导入时需要输入此密码。'\n                : 'Set an export password (at least 8 characters). This password is independent of your master password and will be required when importing the encrypted file.'}\n            </p>\n\n            {/* 错误提示 */}\n            {exportPasswordError && (\n              <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/30 border border-red-300 dark:border-red-800 rounded-lg\">\n                <p className=\"text-sm text-red-800 dark:text-red-200\">{exportPasswordError}</p>\n              </div>\n            )}\n\n            {/* 密码输入 */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  {language === 'zh-CN' ? '导出密码' : 'Export Password'}\n                </label>\n                <input\n                  type=\"password\"\n                  value={exportPassword}\n                  onChange={(e) => {\n                    setExportPassword(e.target.value);\n                    setExportPasswordError('');\n                  }}\n                  placeholder={language === 'zh-CN' ? '至少8个字符' : 'At least 8 characters'}\n                  className=\"w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  {language === 'zh-CN' ? '确认密码' : 'Confirm Password'}\n                </label>\n                <input\n                  type=\"password\"\n                  value={confirmExportPassword}\n                  onChange={(e) => {\n                    setConfirmExportPassword(e.target.value);\n                    setExportPasswordError('');\n                  }}\n                  placeholder={language === 'zh-CN' ? '再次输入密码' : 'Re-enter password'}\n                  className=\"w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                />\n              </div>\n            </div>\n\n            {/* 按钮 */}\n            <div className=\"flex gap-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowEncryptedExportDialog(false);\n                  setExportPassword('');\n                  setConfirmExportPassword('');\n                  setExportPasswordError('');\n                }}\n                className=\"flex-1 px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n              >\n                {language === 'zh-CN' ? '取消' : 'Cancel'}\n              </button>\n              <button\n                onClick={handleEncryptedExport}\n                disabled={!exportPassword || !confirmExportPassword}\n                className=\"flex-1 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n              >\n                {language === 'zh-CN' ? '开始导出' : 'Start Export'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 🔓 解密导入密码输入对话框 */}\n      {showDecryptDialog && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm px-8 py-4\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-md border border-gray-200/50 dark:border-white/10 p-5\">\n            {/* 标题 */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {language === 'zh-CN' ? '输入解密密码' : 'Enter Decryption Password'}\n              </h3>\n              <button\n                onClick={() => {\n                  setShowDecryptDialog(false);\n                  setImportDecryptPassword('');\n                  setPendingEncryptedFile(null);\n                }}\n                className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* 说明 */}\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n              {language === 'zh-CN'\n                ? '检测到加密备份文件，请输入导出时设置的密码。'\n                : 'Encrypted backup file detected. Please enter the password set during export.'}\n            </p>\n\n            {/* 密码输入 */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                {language === 'zh-CN' ? '解密密码' : 'Decryption Password'}\n              </label>\n              <input\n                type=\"password\"\n                value={importDecryptPassword}\n                onChange={(e) => setImportDecryptPassword(e.target.value)}\n                placeholder={language === 'zh-CN' ? '输入导出密码' : 'Enter export password'}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && importDecryptPassword) {\n                    handleDecrypt();\n                  }\n                }}\n                className=\"w-full px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-lg text-gray-900 dark:text-white placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                autoFocus\n              />\n            </div>\n\n            {/* 按钮 */}\n            <div className=\"flex gap-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowDecryptDialog(false);\n                  setImportDecryptPassword('');\n                  setPendingEncryptedFile(null);\n                }}\n                className=\"flex-1 px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors\"\n              >\n                {language === 'zh-CN' ? '取消' : 'Cancel'}\n              </button>\n              <button\n                onClick={handleDecrypt}\n                disabled={!importDecryptPassword}\n                className=\"flex-1 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n              >\n                {language === 'zh-CN' ? '解密并导入' : 'Decrypt and Import'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 📱 设备管理对话框 */}\n      {showDevicesDialog && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/60 backdrop-blur-sm px-8 py-4\">\n          <div className=\"bg-white/95 dark:bg-gray-900/90 backdrop-blur-xl rounded-2xl shadow-[0_20px_60px_-20px_rgba(0,0,0,0.2)] dark:shadow-[0_20px_60px_-20px_rgba(0,0,0,0.5)] w-full max-w-md sm:max-w-lg max-h-[90vh] overflow-hidden border border-gray-200/50 dark:border-white/10 flex flex-col\">\n            {/* 标题栏 */}\n            <div className=\"px-5 py-3 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between flex-shrink-0\">\n              <h2 className=\"text-lg font-bold text-gray-900 dark:text-white flex items-center gap-2\">\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                </svg>\n                {t.devices.title}\n              </h2>\n              <div className=\"flex items-center gap-2\">\n                {/* 刷新按钮 */}\n                <button\n                  onClick={handleRefreshDevices}\n                  disabled={devicesRefreshing}\n                  title={t.devices.refreshDevices}\n                  className=\"p-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <svg className={`w-4 h-4 ${devicesRefreshing ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                  </svg>\n                </button>\n                {/* 关闭按钮 */}\n                <button\n                  onClick={() => setShowDevicesDialog(false)}\n                  className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* 成功提示 Toast */}\n            {devicesSuccessMessage && (\n              <div className=\"absolute top-4 right-4 z-50 animate-fade-in\">\n                <div className=\"bg-green-500/90 backdrop-blur-sm text-white px-4 py-3 rounded-lg shadow-lg flex items-center gap-2\">\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                  </svg>\n                  <span className=\"font-medium\">{devicesSuccessMessage}</span>\n                </div>\n              </div>\n            )}\n\n            {/* 内容区域 */}\n            <div className=\"p-5 overflow-y-auto flex-1\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                {t.devices.subtitle.replace('{max}', maxDevices.toString())}\n              </p>\n\n              {/* 错误提示 */}\n              {devicesError && (\n                <div className=\"mb-4 p-3 bg-red-100 dark:bg-red-900/30 border border-red-300 dark:border-red-800 rounded-lg\">\n                  <p className=\"text-sm text-red-800 dark:text-red-200\">{devicesError}</p>\n                </div>\n              )}\n\n              {/* 加载状态 */}\n              {devicesLoading && (\n                <div className=\"text-center py-12\">\n                  <svg className=\"animate-spin h-8 w-8 mx-auto text-blue-600 dark:text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                  </svg>\n                  <p className=\"mt-4 text-gray-600 dark:text-gray-400\">{t.notes.loading}</p>\n                </div>\n              )}\n\n              {/* 设备列表 */}\n              {!devicesLoading && (\n                <div className=\"space-y-4\">\n                  {/* 设备数量限制提示 */}\n                  <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg\">\n                    <div className=\"flex items-start gap-3\">\n                      <svg className=\"w-5 h-5 text-blue-600 dark:text-blue-400 flex-shrink-0 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      <div>\n                        <h3 className=\"font-medium text-blue-900 dark:text-blue-100\">{t.devices.deviceLimit}</h3>\n                        <p className=\"mt-1 text-sm text-blue-800 dark:text-blue-200\">\n                          {t.devices.deviceLimitInfo.replace('{max}', maxDevices.toString())}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* 活跃设备列表 */}\n                  {sessions.filter(s => s.is_active).length === 0 ? (\n                    <div className=\"text-center py-12\">\n                      <p className=\"text-gray-600 dark:text-gray-400\">{t.devices.noDevices}</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-3\">\n                      {sessions.filter(s => s.is_active).map((session) => (\n                        <div\n                          key={session.id}\n                          className={`p-4 rounded-lg border ${\n                            session.is_current\n                              ? 'border-2 border-blue-500 bg-blue-50 dark:bg-blue-900/20'\n                              : 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800'\n                          }`}\n                        >\n                          <div className=\"flex items-start justify-between gap-4\">\n                            <div className=\"flex-1 min-w-0\">\n                              {/* 设备名称 */}\n                              <h3 className=\"text-base font-semibold text-gray-900 dark:text-white truncate mb-1\">\n                                {session.device_name || t.devices.types.unknown}\n                              </h3>\n\n                              {/* 设备详情 */}\n                              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-1.5 text-xs text-gray-600 dark:text-gray-400\">\n                                {session.device_type && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.deviceType}:</span>\n                                    <span>{getDeviceTypeLabel(session.device_type)}</span>\n                                  </div>\n                                )}\n                                {session.browser_name && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.browser}:</span>\n                                    <span>{session.browser_name}</span>\n                                  </div>\n                                )}\n                                {session.os_name && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.os}:</span>\n                                    <span>{session.os_name}</span>\n                                  </div>\n                                )}\n                                {session.ip_address && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.ipAddress}:</span>\n                                    <span className=\"font-mono text-xs\">\n                                      {visibleIPs.has(session.id) ? session.ip_address : maskIP(session.ip_address)}\n                                    </span>\n                                    <button\n                                      onClick={() => toggleIPVisibility(session.id)}\n                                      className=\"text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors p-0.5\"\n                                      title={visibleIPs.has(session.id) ? '隐藏IP' : '显示完整IP'}\n                                    >\n                                      {visibleIPs.has(session.id) ? (\n                                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\" />\n                                        </svg>\n                                      ) : (\n                                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                                        </svg>\n                                      )}\n                                    </button>\n                                  </div>\n                                )}\n                                {session.location && (\n                                  <div className=\"flex items-center gap-2\">\n                                    <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.location}:</span>\n                                    <span>{session.location}</span>\n                                  </div>\n                                )}\n                                <div className=\"flex items-center gap-2\">\n                                  <span className=\"text-gray-500 dark:text-gray-500\">{t.devices.loginTime}:</span>\n                                  <span>{formatDeviceTime(session.created_at)}</span>\n                                </div>\n\n                                {/* 自动解锁状态（仅当前设备） */}\n                                {session.is_current && (\n                                  autoUnlockExpiry && autoUnlockExpiry > Date.now() ? (\n                                    <div className=\"col-span-full flex items-center gap-2 mt-2 px-3 py-2 bg-green-50 dark:bg-green-900/20 border border-green-300 dark:border-green-700 rounded-lg\">\n                                      <svg className=\"w-4 h-4 text-green-600 dark:text-green-400 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                      </svg>\n                                      <div className=\"flex-1 text-xs\">\n                                        <div className=\"text-green-800 dark:text-green-200 font-medium\">\n                                          {t.devices.autoUnlockEnabledStatus}\n                                        </div>\n                                        <div className=\"text-green-700 dark:text-green-300 mt-0.5\">\n                                          {t.devices.autoUnlockExpiry.replace('{time}', formatExpiryTime(autoUnlockExpiry))}\n                                        </div>\n                                      </div>\n                                      <button\n                                        onClick={handleDisableAutoUnlock}\n                                        className=\"text-xs px-2 py-1 rounded border border-green-600 dark:border-green-400 text-green-700 dark:text-green-300 hover:bg-green-100 dark:hover:bg-green-900/40 transition-colors flex-shrink-0\"\n                                        title={t.devices.autoUnlockDisable}\n                                      >\n                                        {t.devices.autoUnlockDisable}\n                                      </button>\n                                    </div>\n                                  ) : (\n                                    <div className=\"col-span-full flex items-center gap-2 mt-2 px-3 py-2 bg-gray-50 dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg\">\n                                      <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                                      </svg>\n                                      <div className=\"flex-1 text-xs text-gray-600 dark:text-gray-400\">\n                                        {t.devices.autoUnlockHint}\n                                      </div>\n                                    </div>\n                                  )\n                                )}\n                              </div>\n                            </div>\n\n                            {/* 操作按钮 */}\n                            {!session.is_current && (\n                              <button\n                                onClick={() => handleLogoutDevice(session.id)}\n                                disabled={loggingOut.has(session.id)}\n                                title={t.devices.logoutDevice}\n                                className=\"p-2 rounded-lg border border-red-300 dark:border-red-800 bg-white dark:bg-gray-800 text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 transition-colors flex-shrink-0 disabled:opacity-50 disabled:cursor-not-allowed\"\n                              >\n                                {loggingOut.has(session.id) ? (\n                                  <svg className=\"animate-spin w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                                  </svg>\n                                ) : (\n                                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n                                  </svg>\n                                )}\n                              </button>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* 安全提示 */}\n                  <div className=\"p-3 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\n                    <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">{t.devices.securityTip}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {ConfirmDialog}\n    </div>\n  );\n}\n"],"names":["MarkdownErrorBoundary","Component","props","error","errorInfo","jsxs","jsx","e","SimpleMarkdownRenderer","content","className","parseMarkdown","text","lines","elements","listItems","orderedListItems","inCodeBlock","codeBlockContent","key","flushList","item","idx","parseInline","flushCodeBlock","line","match","level","Tag","classNames","result","sha1","message","msgBuffer","hashBuffer","b","checkPasswordBreach","password","hash","prefix","suffix","response","hashSuffix","count","checkPasswordBreachWithDetails","severity","breachCheckCache","CACHE_TTL","checkPasswordBreachCached","cacheKey","cached","LRUCache","maxSize","__publicField","value","firstKey","computeLineDiff","localText","serverText","localLines","serverLines","lcs","findLCS","lcsSet","localResult","serverResult","localIndex","serverIndex","hasLocalMatch","hasServerMatch","arr1","arr2","m","n","dp","i","j","NotesPage","navigate","useNavigate","user","token","logout","useAuthStore","theme","language","setTheme","setLanguage","itemsPerPage","useSettingsStore","useTranslation","showConfirm","ConfirmDialog","useConfirmDialog","toast","showToast","hideToast","useToast","noteDecryptCacheRef","useRef","passwordDecryptCacheRef","notes","setNotes","useState","selectedNote","setSelectedNote","noteContent","setNoteContent","noteTitle","setNoteTitle","noteTags","setNoteTags","tagInput","setTagInput","confirmProceed","useCallback","description","options","notesQuota","setNotesQuota","notesQuotaDismissed","setNotesQuotaDismissed","passwords","setPasswords","selectedPassword","setSelectedPassword","passwordSite","setPasswordSite","passwordUsername","setPasswordUsername","passwordValue","setPasswordValue","passwordNotes","setPasswordNotes","passwordsQuota","setPasswordsQuota","passwordsQuotaDismissed","setPasswordsQuotaDismissed","showPasswordGenerator","setShowPasswordGenerator","passwordLength","setPasswordLength","includeUppercase","setIncludeUppercase","includeLowercase","setIncludeLowercase","includeDigits","setIncludeDigits","includeSymbols","setIncludeSymbols","activePanel","setActivePanel","viewMode","setViewMode","passwordViewMode","setPasswordViewMode","loading","setLoading","saving","setSaving","setError","showPassword","setShowPassword","copiedRecently","setCopiedRecently","showNoteEditor","setShowNoteEditor","isFullscreen","setIsFullscreen","showUserMenu","setShowUserMenu","showNicknameDialog","setShowNicknameDialog","editingNickname","setEditingNickname","decryptedNickname","setDecryptedNickname","savingNickname","setSavingNickname","nicknameError","setNicknameError","passwordModified","setPasswordModified","breachCheckResult","setBreachCheckResult","checkingBreach","setCheckingBreach","searchQuery","setSearchQuery","searchQueryPassword","setSearchQueryPassword","searchInput","setSearchInput","searchInputPassword","setSearchInputPassword","noteCurrentPage","setNoteCurrentPage","passwordCurrentPage","setPasswordCurrentPage","notePaginationMode","setNotePaginationMode","passwordPaginationMode","setPasswordPaginationMode","totalNotes","setTotalNotes","totalPasswords","setTotalPasswords","logoutMessage","setLogoutMessage","logoutCountdown","setLogoutCountdown","logoutTimerRef","showConflictDialog","setShowConflictDialog","conflictData","setConflictData","showSessionRestoreDialog","setShowSessionRestoreDialog","restoreMasterPassword","setRestoreMasterPassword","restoreError","setRestoreError","restoring","setRestoring","showDataManagementDialog","setShowDataManagementDialog","importing","setImporting","exportProgress","setExportProgress","importProgress","setImportProgress","dataManagementMessage","setDataManagementMessage","fileInputRef","showDevicesDialog","setShowDevicesDialog","sessions","setSessions","maxDevices","setMaxDevices","devicesLoading","setDevicesLoading","devicesError","setDevicesError","devicesRefreshing","setDevicesRefreshing","visibleIPs","setVisibleIPs","loggingOut","setLoggingOut","devicesSuccessMessage","setDevicesSuccessMessage","autoUnlockExpiry","setAutoUnlockExpiry","currentDeviceId","setCurrentDeviceId","showEncryptedExportDialog","setShowEncryptedExportDialog","exportPassword","setExportPassword","confirmExportPassword","setConfirmExportPassword","encryptedExporting","setEncryptedExporting","exportPasswordError","setExportPasswordError","showDecryptDialog","setShowDecryptDialog","importDecryptPassword","setImportDecryptPassword","pendingEncryptedFile","setPendingEncryptedFile","saveStatus","setSaveStatus","lastSaveTimeRef","autoSaveTimerRef","isRenderingNote","setIsRenderingNote","detectOldIOSRef","isOldIOSSafari","ua","version","decryptNote","note","noteDecryptCache","decryptedContent","crypto","parsed","tags","err","useEffect","demoNickname","PAGINATION_THRESHOLD","loadNotes","page","perPage","isDemoMode","mockNotes","demoNotes","countResponse","api","total","dismissedKey","dismissed","safeNotes","offset","decryptPassword","pwd","passwordDecryptCache","decryptedJson","passwordData","decryptedData","username","loadPasswords","mockPasswords","demoPasswords","decryptedPasswords","errorCode","countdown","handleForceLogout","clearAllKeys","heartbeatTimer","INACTIVITY_TIMEOUT","inactivityTimer","resetTimer","events","event","handleSwitchToEditMode","triggerAutoSave","handleSaveNote","autoSaveDelay","handleNoteSearchSubmit","handlePasswordSearchSubmit","handleBeforeUnload","handleSelectNote","oldIOSDelay","safeContent","safeTags","obj","handleNewNote","handleDismissNotesQuota","handleDismissPasswordsQuota","isAutoSave","finalTags","encrypted","_a","serverNoteResponse","serverNote","decryptedServerContent","serverContent","serverTags","fetchError","_b","remainingSeconds","_c","_d","prev","_e","newNote","handleUseLocalVersion","updatedNote","handleUseServerVersion","mergeMode","setMergeMode","mergedContent","setMergedContent","handleManualMerge","handleApplyMerge","handleCancelMerge","handleDeleteNote","handleSelectPassword","handleNewPassword","handleGeneratePassword","generated","handleCheckBreach","handleSavePassword","updated","newPassword","handleDeletePassword","handleCopy","label","isValidUrl","url","formatUrl","handleMarkdownLinkClick","href","targetId","targetElement","decodedId","headings","heading","handleCopyCode","code","CodeBlock","children","showCopyButton","setShowCopyButton","extractText","node","codeContent","Fragment","markdownComponents","useMemo","inline","isOldSafari","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeRaw","rehypeHighlight","rehypeKatex","cachedMarkdownPreview","ReactMarkdown","cachedFullscreenMarkdown","cachedNormalMarkdown","handleBack","handlePanelSwitch","targetPanel","filteredNotes","query","tag","filteredPasswords","notePagination","totalItems","totalPages","start","end","passwordPagination","Paginator","currentPage","onPageChange","showJumpInput","setShowJumpInput","jumpValue","setJumpValue","handleJump","paginationText","getAvatarColor","email","colors","index","getAvatarInitial","maskEmail","localPart","domain","formatSaveTime","timestamp","date","now","yesterday","handleSessionRestore","salt","saltResponse","handleCancelSessionRestore","handleOpenNicknameDialog","handleSaveNickname","trimmedNickname","ciphertext","iv","remainingMinutes","updateUserNickname","handleLogout","handleEncryptedExport","handleDecrypt","encryptedData","c","encoder","passwordKey","decryptedArrayBuffer","decryptedText","handleDecryptAndImport","importData","importedNotes","skippedNotes","existingNotes","notesResponse","decrypted","identifier","title","tagsArray","importedPasswords","skippedPasswords","existingPasswords","passwordsResponse","site","resultMessage","skippedParts","handleImportData","maskIP","ip","ipv4Parts","ipv6Parts","part","firstPart","lastPart","toggleIPVisibility","sessionId","newSet","loadSessions","demoSessions","deviceId","getOrCreateDeviceId","expiry","getKeyExpiry","handleRefreshDevices","handleDisableAutoUnlock","clearEncryptionKey","handleLogoutDevice","s","formatDeviceTime","formatExpiryTime","getDeviceTypeLabel","type","DEMO_MODE_MESSAGE","Toast","newValue","newSize","newPage","_","remainingChars","newTag","tip","_p","_q","_r","_s","_t","_u","_v","bgColor","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","session"],"mappings":"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"}